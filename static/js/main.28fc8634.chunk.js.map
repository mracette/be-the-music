{"version":3,"sources":["assets/svg/iconList.svg","audio/moonrise/ambient-track.mp3","audio/mornings/ambient-track.mp3","viz/models/mornings/glb/house.glb","viz/models/mornings/glb/table.glb","viz/models/mornings/glb/flowers.glb","viz/models/mornings/glb/spiral_plant.glb","viz/models/mornings/glb/bookcase.glb","viz/models/mornings/glb/paintings.glb","viz/models/moonrise/glb/lily.glb","viz/models/moonrise/gltf/lily.gltf","viz/models/moonrise/draco/lily-draco.gltf","viz/models/moonrise/glb/pine-tree.glb","viz/models/moonrise/gltf/pine-tree.gltf","viz/models/moonrise/draco/pine-tree-draco.gltf","viz/models/moonrise/glb/landscape.glb","viz/models/moonrise/gltf/landscape.gltf","viz/models/moonrise/draco/landscape-draco.gltf","viz/models/swamp/glb/swamp.glb","audio sync /^/.//.*/.mp3$","audio/moonrise/atmo-crunch[8].mp3","audio/moonrise/atmo-photay[4].mp3","audio/moonrise/atmo-swirl[16].mp3","audio/moonrise/atmo-water[4].mp3","audio/moonrise/belly-percs[4].mp3","audio/moonrise/fast-hats[4].mp3","audio/moonrise/kick-snare[4].mp3","audio/moonrise/melody-bluesy[8].mp3","audio/moonrise/melody-soft[8].mp3","audio/moonrise/melody-trance[4].mp3","audio/moonrise/rhodes-arps[4].mp3","audio/moonrise/rhodes-chords[4].mp3","audio/moonrise/rhodes-sad[8].mp3","audio/moonrise/rides[4].mp3","audio/moonrise/sub-bouncey[8].mp3","audio/moonrise/sub-desc[8].mp3","audio/moonrise/sub-simple[4].mp3","audio/moonrise/sub-simple[8].mp3","audio/mornings/bass-one[8].mp3","audio/mornings/bass-three[4].mp3","audio/mornings/bass-two[4].mp3","audio/mornings/extra-jammy[8].mp3","audio/mornings/extra-pad[8].mp3","audio/mornings/extra-sweep[4].mp3","audio/mornings/harmony-one[4].mp3","audio/mornings/harmony-three[4].mp3","audio/mornings/harmony-two[4].mp3","audio/mornings/melody-one[8].mp3","audio/mornings/melody-three[4].mp3","audio/mornings/melody-two[8].mp3","audio/mornings/rhythm-drums[4].mp3","audio/mornings/rhythm-kick[8].mp3","audio/mornings/rhythm-reverse[4].mp3","audio/mornings/rhythm-tops[8].mp3","audio/application/impulse-response.wav","audio sync /^/.//.*//ambient/-track/.mp3$","contexts/contexts.js","utils/mathUtils.js","viz/controls/FirstPersonControls.js","viz/SceneManager.js","viz/subjects/StarQuandrants.js","viz/models/assetIndex.js","viz/scenes/moonrise/Moonrise.js","viz/scenes/mornings/renderRhythm.js","viz/scenes/mornings/renderMelody.js","viz/scenes/mornings/renderAtmosphere.js","viz/scenes/mornings/Mornings.js","viz/shaders/rgba.js","viz/scenes/mornings/renderBass.js","viz/scenes/mornings/renderHarmony.js","viz/scenes/swamp/Swamp.js","components/Canvas.js","components/custom-song-icons/CustomSongIcon.js","components/custom-song-icons/LoadingIcon.js","components/LoadingScreen.js","components/CanvasViz.js","components/EffectsPanel.js","hooks/useAnimationFrame.js","classes/Analyser.js","components/FreqBands.js","components/menu-button/MenuButtonContentWrapper.js","components/Icon.js","components/menu-button/MenuButtonChild.js","hooks/useOutsideClick.js","components/menu-button/MenuButtonParent.js","components/iconography/SocialIcons.js","components/iconography/SharingIcons.js","components/SongInfoPanel.js","utils/audioUtils.js","classes/AudioPlayerWrapper.js","classes/Scheduler.js","components/toggle-button/ToggleButton.js","components/Oscilloscope.js","components/toggle-button/ToggleButtonGroup.js","components/toggle-button/ToggleButtonPanel.js","components/HomePanel.js","reducers/MusicPlayerReducer.js","components/MusicPlayer.js","components/custom-song-icons/MoonriseIcon.js","components/custom-song-icons/MorningsIcon.js","components/custom-song-icons/ComingSoonIcon.js","components/AppWrap.js","viz/subjects/Stars.js","viz/scenes/landing/LandingPageScene.js","components/LandingPage.js","components/ComingSoon.js","components/AppRouter.js","components/WebGLUnavailable.js","index.js","components/App.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","LayoutContext","React","createContext","MusicPlayerContext","TestingContext","ThemeContext","SongContext","InfoContext","solveExpEquation","x0","y0","x1","y1","b","Math","pow","a","FirstPersonControls","object","this","target","THREE","enabled","movementSpeed","lookSpeed","lookVertical","autoForward","activeLook","heightLock","constrainVertical","verticalMin","verticalMax","PI","lat","lon","phi","theta","moveForward","moveBackward","moveLeft","moveRight","lookUp","lookDown","lookLeft","lookRight","_onKeyDown","bind","onKeyDown","_onKeyUp","onKeyUp","window","addEventListener","event","keyCode","delta","yClamp","actualMoveSpeed","translateZ","translateX","position","y","actualLookSpeed","max","min","degToRad","mapLinear","targetPosition","x","sin","cos","z","lookAt","removeEventListener","scope","fn","apply","arguments","SceneManager","canvas","clock","screenDimensions","width","innerWidth","height","innerHeight","worldDimensions","depth","pauseVisuals","animate","render","onWindowResize","showStats","Promise","reject","scene","initScene","renderer","initRender","camera","initCamera","controls","initControls","subjects","initSubjects","lights","initLights","helpers","initHelpers","err","cancelAnimationFrame","currentFrame","obj","callback","exceptions","children","forEach","child","length","applyAll","find","ex","name","includes","disposeAll","remove","geometry","dispose","material","prop","stats","begin","end","requestAnimationFrame","alpha","autoClear","antialias","outputEncoding","DPR","DPRMax","devicePixelRatio","setPixelRatio","setSize","type","frustrum","aspect","f","set","updateProjectionMatrix","fpc","ambient","add","Stats","showPanel","dom","style","left","right","document","body","appendChild","gltfLoader","GLTFLoader","newWidth","newHeight","aspectRatio","fovAdjust","fov","getNewFov","ext","options","format","index","url","songId","load","model","StarQuandrants","levels","skyColor","params","colorPalette","center","leftGroup","rightGroup","group","i","createStars","count","copy","n","channel","level","color","positions","colors","random","push","distanceFromMoon","sqrt","lerp","r","g","addAttribute","setDrawRange","vertexColors","transparent","opacity","fog","lily","glb","require","gltf","draco","pineTree","landscape","swamp","Moonrise","analysers","extras","rhythmAnalyser","atmosphereAnalyser","harmonyAnalyser","melodyAnalyser","bassAnalyser","palette","white","rockGrey","lightning","moonYellow","tropicalGreen","deepInk","prevMelodyVolume","currentMelodyVolume","lilyColors","dustyViolet","pansyPurple","funGreen","hibiscus","yellow","then","background","all","initLakeTrees","initLakeScene","initLakeRipples","initLakeStars","initLakeLilies","initLakeMoon","lakeShapePoints","regularPolygon","lakeShapeVectors","lakeShape","lakeGeo","rotateX","translate","lakeMat","lakeMesh","lake","groundGeo","groundMat","groundMesh","ground","moonGuard","directionalLight","fireFlyGroup","sphereGeo","sphereMat","userData","cycle","state","fireflies","loadModel","process","rocks","rock","setRGB","catch","numVertices","fftSize","moonGeo","moonMat","moonMesh","radius","moon","moonRings","moonBeams","j","moonRingGeo","Float32Array","moonRingMat","moonRing","k","newMoonRings","clone","translateY","rotateZ","numMoonRings","console","log","basePineTree","scenes","pineTreeGroup","xNoise","scale","rotateY","pineTrees","frequencyBinCount","polygonPoints","bandScaleLogConstants","w","exp","linToLog","baseGeoGroup","baseGeo","geo","linScale","logScale","ripples","stars","d3Chromatic","c","lowerPetal","upperPetal","sphere","lilyPad","baseLily","petalGroup","upperClone","lowerClone","lilyGroup","flowerMat","padMat","petalColor","petalMat","getObjectByName","firstPattern","secondPattern","floor","ignited","phase","measure","lilies","overridePause","playerState","rhythm","getFrequencyData","fftData","d","damping","atmosphere","slice","harmony","freqIndex","rawData","transformedData","bass","avgBassVol","reduce","bassFrequencies","moonRingIndex","vertexCount","adj","rot","attributes","array","moonBeam","needsUpdate","melody","melodyVolume","melodyCount","avgMelodyVolume","data","increment","fly","flightPath","newX","newY","newZ","intensity","bSin","boundedSin","grey","Mornings","spectrumFunction","morningLight","plant","paleBlue","coffee","deepBlue","blueGrey","renderList","bpm","fpcControl","loadModels","applySceneSettings","matrixAutoUpdates","mat","side","emissive","emissiveIntensity","shadowMap","setClearColor","sunlight","pointOne","modelList","loadPromiseArray","indexOf","stringLights","godRays","houseModel","mesh","paintingsModel","tableModel","pageGeo","Array","newMesh","vertexShader","fragmentShader","rightPage","leftPage","steam","filter","stickLeaves","stickLeavesOne","innerPetals","outerPetals","flowerModel","spiralPlantModel","leaves","spiralPlantLeaves","books","fill","bookcaseModel","pageMat","parseInt","bookMesh","elapsedBeats","getElapsedTime","update","getDelta","analyser","vol","leftColors","customColor","rightColors","s","beats","ceil","renderMelody","volume","brightnessFactor","d3","renderBass","getFrequencyBuckets","col","row","mod","p","bucketData","renderRhythm","fIndex","binMin","round","binMax","renderHarmony","spiralPlantGroup","box","spiralPlantBox","offset","renderAtmosphere","Swamp","physicallyCorrectLights","cameras","Canvas","props","canvasRef","useRef","useEffect","pixelRatio","setCanvasSize","current","clientWidth","makeSquare","clientHeight","resize","undefined","onResize","onLoad","className","ref","CustomSongIcon","contextRef","cycleRef","timeRef","animationRef","coordsRef","listen","setCustomStyles","dispatch","updateCanvas","time","loop","reset","clearRect","nx","ny","getWidth","getHeight","handleSetSelected","handleUnsetSelected","setStyles","lineWidth","strokeStyle","fillStyle","beginAnimation","stopAnimation","CanvasCoordinates","padding","getContext","useMemo","bsin","animateLoading","context","coords","globalCompositeOperation","beginPath","arc","TAU","stroke","animateReady","LoadingIcon","isLoading","disabled","cursor","LoadingScreen","useContext","CanvasViz","groups","players","flags","sceneRef","groupName","newScene","showVisuals","payload","visualViewport","stop","EffectsPanel","hpRef","lpRef","ambienceRef","effectsBackgroundModeEventRef","audioCtx","randomizeEffects","scheduler","highpass","lowpass","ambience","useState","effectsBackgroundMode","handleReset","useCallback","value","triggerRandomEffects","h","l","repeatingQueue","scheduleRepeating","currentTime","updateCallback","cancel","justifyContent","onInput","checked","marginLeft","onClick","useAnimationFrame","requestRef","previousTimeRef","Analyser","input","defaults","power","minDecibels","maxDecibels","minFrequency","maxFrequency","smoothingTimeConstant","numBuckets","split","xEasing","yEasing","binMethod","assign","nyquist","sampleRate","binSize","bucketCounts","exponent","xExponent","yExponent","createAudioNodes","createDataStructure","splitter","createChannelSplitter","connect","createAnalyser","timeData","Uint8Array","getByteFrequencyData","fBins","freq","getByteTimeDomainData","newInput","disconnect","FreqBands","premaster","secondsPerBar","timeSignature","analyserRef","smoothingTimeConstanct","cycleTime","cx","cy","globalAlphs","moveTo","t","MenuButtonContentWrapper","vw","vh","contentPanelColor","visibility","parentIsOpen","top","marginTop","minWidth","maxHeight","maxWidth","content","Icon","iconRef","handleAddIconRef","divClassList","link","href","xmlns","xmlnsXlink","svgClassList","xlinkHref","icons","MenuButtonChild","buttonColor","openButtonColor","autoOpen","isOpen","setIsOpen","nodeRef","marginStyle","parentWidth","separation","insideCallback","outsideCallback","handleOutsideClick","contains","useOutsideClick","parentHeight","zIndex","iconName","borderBottomColor","display","borderWidth","borderTop","config","menuWidth","MenuButtonParent","childHeight","childWidth","numOfChildren","childButtonProps","preventDefault","key","icon","SocialIcons","SharingIcons","tagline","rel","src","alt","SongInfoPanel","credits","effectParams","lpFilter","minFreq","maxFreq","minQ","maxQ","expFreqParams","expQParams","hpFilter","minWet","maxWet","initGain","gain","createGain","AudioPlayerWrapper","bufferSource","buffer","destination","loopStart","loopEnd","duration","start","reload","newSource","createBufferSource","Scheduler","queue","eventId","newEventId","dummyBuffer","createBuffer","dummySource","source","onended","promise","frequency","getEvent","splice","ToggleButton","buttonRef","animationTargetsRef","schedulerRef","handleUpdatePlayerOrder","handleUpdateOverrides","groupNode","override","setPlayerState","player","setPlayer","quantizedStartBeats","quantizeSamples","buttonRadius","buttonBorder","changePlayerState","newState","clear","initialState","quantizedStartSeconds","beatsElapsed","nextSubdivision","scheduleOnce","quantizedStartMillis","strokeDashoffset","points","backgroundColor","anime","circleSvg","iconPoly","iconDiv","button","targets","easing","runAnimation","pathToAudio","createAudioPlayer","offlineRendering","renderLength","fade","fadeLength","audioPlayer","iconSvg","strokeWidth","strokeDasharray","viewBox","Oscilloscope","createBiquadFilter","prevX","prevY","dataArray","getTimeData","sliceWidth","gradient","groupCount","lineTo","ToggleButtonGroup","groupMuteButton","groupSoloButton","groupNodeRef","effectsChainEntryRef","effectsChainExitRef","hpFilterRef","Q","initHighpass","lpFilterRef","initLowpass","reverbDryRef","reverbWetRef","reverbRef","createConvolver","solo","setSolo","mute","setMute","playerOrder","setPlayerOrder","playerOverrides","setPlayerOverrides","loadArrayBuffer","arrayBuffer","decodeAudioData","audioBuffer","groupAnalyser","analyserParams","freqParams","QParams","wet","soloOverride","handleAddSolo","playerId","currentPolyphony","polyphony","concat","voices","voice","quantizeLength","ToggleButtonPanel","panelMuteButton","backgroundMode","setSoloOverride","handleRandomize","HomePanel","to","MusicPlayerReducer","action","impulseResponses","impulseResponse","MusicPlayer","ambientTrack","ambientTrackLength","useReducer","backgroundModeEventRef","voicesToEnable","ePoly","rand","click","triggerRandomVoice","viableOne","randomOne","viableTwo","randomTwo","ambientPlayer","playAmbientTrack","resume","suspend","Provider","direction","parentSize","rotatePoint","MoonriseIcon","panelWidth","centerPoint","panelHeight","abs","strokeRect","MorningsIcon","rect","ComingSoonIcon","Stars","number","intensityMap","radiusSpread","minOrbitRadius","maxOrbitRadius","orbitSpeed","rotateVector","starField","createSpheres","intensities","randomCoords","normalize","guassianRand","rotateOnAxis","v0","v1","LandingPageScene","ColorPalette","rgbValueAt","landingPageReducer","LandingPage","selected","isMobile","init","ComingSoon","method","noValidate","placeholder","required","aria-hidden","tabIndex","onChange","AppRouter","exact","path","component","routeProps","match","spectrumFunctions","appConfig","song","morningsPalette","morningsPaletteDiscrete","moonrisePaletteDiscrete","d3Color","brighter","AudioContext","webkitAudioContext","latencyHint","AppWrap","viewportWidth","viewportHeight","documentElement","setProperty","setvw","setvh","setIsMobile","resumeAudio","setViewportVars","WebGLUnavailable","unsupportedType","WebGLRenderingContext","ReactDOM","WEBGL","isWebGLAvailable","getElementById"],"mappings":"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","file":"static/js/main.28fc8634.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/iconList.2bc4ff09.svg\";","module.exports = __webpack_public_path__ + \"static/media/ambient-track.145a3d16.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ambient-track.18f7bd51.mp3\";","module.exports = __webpack_public_path__ + \"static/media/house.70659559.glb\";","module.exports = __webpack_public_path__ + \"static/media/table.bb57dcdb.glb\";","module.exports = __webpack_public_path__ + \"static/media/flowers.37c1aabe.glb\";","module.exports = __webpack_public_path__ + \"static/media/spiral_plant.413e56fb.glb\";","module.exports = __webpack_public_path__ + \"static/media/bookcase.aea805c1.glb\";","module.exports = __webpack_public_path__ + \"static/media/paintings.7d1b8755.glb\";","module.exports = __webpack_public_path__ + \"static/media/lily.28308e22.glb\";","module.exports = __webpack_public_path__ + \"static/media/lily.0b5b2d2b.gltf\";","module.exports = __webpack_public_path__ + \"static/media/lily-draco.4be61731.gltf\";","module.exports = __webpack_public_path__ + \"static/media/pine-tree.688b2ebb.glb\";","module.exports = __webpack_public_path__ + \"static/media/pine-tree.044015c2.gltf\";","module.exports = __webpack_public_path__ + \"static/media/pine-tree-draco.daefb4bd.gltf\";","module.exports = __webpack_public_path__ + \"static/media/landscape.b828c5c9.glb\";","module.exports = __webpack_public_path__ + \"static/media/landscape.5137591c.gltf\";","module.exports = __webpack_public_path__ + \"static/media/landscape-draco.6e92cff0.gltf\";","module.exports = __webpack_public_path__ + \"static/media/swamp.21a17705.glb\";","var map = {\n\t\"./moonrise/ambient-track.mp3\": 35,\n\t\"./moonrise/atmo-crunch[8].mp3\": 77,\n\t\"./moonrise/atmo-photay[4].mp3\": 78,\n\t\"./moonrise/atmo-swirl[16].mp3\": 79,\n\t\"./moonrise/atmo-water[4].mp3\": 80,\n\t\"./moonrise/belly-percs[4].mp3\": 81,\n\t\"./moonrise/fast-hats[4].mp3\": 82,\n\t\"./moonrise/kick-snare[4].mp3\": 83,\n\t\"./moonrise/melody-bluesy[8].mp3\": 84,\n\t\"./moonrise/melody-soft[8].mp3\": 85,\n\t\"./moonrise/melody-trance[4].mp3\": 86,\n\t\"./moonrise/rhodes-arps[4].mp3\": 87,\n\t\"./moonrise/rhodes-chords[4].mp3\": 88,\n\t\"./moonrise/rhodes-sad[8].mp3\": 89,\n\t\"./moonrise/rides[4].mp3\": 90,\n\t\"./moonrise/sub-bouncey[8].mp3\": 91,\n\t\"./moonrise/sub-desc[8].mp3\": 92,\n\t\"./moonrise/sub-simple[4].mp3\": 93,\n\t\"./moonrise/sub-simple[8].mp3\": 94,\n\t\"./mornings/ambient-track.mp3\": 36,\n\t\"./mornings/bass-one[8].mp3\": 95,\n\t\"./mornings/bass-three[4].mp3\": 96,\n\t\"./mornings/bass-two[4].mp3\": 97,\n\t\"./mornings/extra-jammy[8].mp3\": 98,\n\t\"./mornings/extra-pad[8].mp3\": 99,\n\t\"./mornings/extra-sweep[4].mp3\": 100,\n\t\"./mornings/harmony-one[4].mp3\": 101,\n\t\"./mornings/harmony-three[4].mp3\": 102,\n\t\"./mornings/harmony-two[4].mp3\": 103,\n\t\"./mornings/melody-one[8].mp3\": 104,\n\t\"./mornings/melody-three[4].mp3\": 105,\n\t\"./mornings/melody-two[8].mp3\": 106,\n\t\"./mornings/rhythm-drums[4].mp3\": 107,\n\t\"./mornings/rhythm-kick[8].mp3\": 108,\n\t\"./mornings/rhythm-reverse[4].mp3\": 109,\n\t\"./mornings/rhythm-tops[8].mp3\": 110\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 76;","module.exports = __webpack_public_path__ + \"static/media/atmo-crunch[8].3302781f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/atmo-photay[4].b5f62d35.mp3\";","module.exports = __webpack_public_path__ + \"static/media/atmo-swirl[16].071632ea.mp3\";","module.exports = __webpack_public_path__ + \"static/media/atmo-water[4].a3916feb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/belly-percs[4].1b33f275.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fast-hats[4].d36c7762.mp3\";","module.exports = __webpack_public_path__ + \"static/media/kick-snare[4].edf2e08e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/melody-bluesy[8].517f5198.mp3\";","module.exports = __webpack_public_path__ + \"static/media/melody-soft[8].9436f5de.mp3\";","module.exports = __webpack_public_path__ + \"static/media/melody-trance[4].b168cf49.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rhodes-arps[4].836e115a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rhodes-chords[4].b93cc73b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rhodes-sad[8].01f304b2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rides[4].3815bc6b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sub-bouncey[8].39956256.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sub-desc[8].89a6665b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sub-simple[4].83dfe2b6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sub-simple[8].f2c77397.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bass-one[8].9c30c4b5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bass-three[4].50569542.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bass-two[4].2f424017.mp3\";","module.exports = __webpack_public_path__ + \"static/media/extra-jammy[8].cc3705de.mp3\";","module.exports = __webpack_public_path__ + \"static/media/extra-pad[8].2ed7e19c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/extra-sweep[4].87dcb5ea.mp3\";","module.exports = __webpack_public_path__ + \"static/media/harmony-one[4].aecab5c3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/harmony-three[4].d644a18d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/harmony-two[4].0320af2e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/melody-one[8].2ed3dabe.mp3\";","module.exports = __webpack_public_path__ + \"static/media/melody-three[4].f7d05ab9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/melody-two[8].b5530d7d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rhythm-drums[4].643614ec.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rhythm-kick[8].27743ea7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rhythm-reverse[4].4257b53e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rhythm-tops[8].dce46e89.mp3\";","module.exports = __webpack_public_path__ + \"static/media/impulse-response.5ddb346d.wav\";","var map = {\n\t\"./moonrise/ambient-track.mp3\": 35,\n\t\"./mornings/ambient-track.mp3\": 36\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 120;","import React from 'react';\n\nexport const LandingPageContext = React.createContext();\nexport const LayoutContext = React.createContext();\nexport const MusicPlayerContext = React.createContext();\nexport const TestingContext = React.createContext();\nexport const ThemeContext = React.createContext();\nexport const SongContext = React.createContext();\nexport const InfoContext = React.createContext();\nexport const ApplicationContext = React.createContext();","const regularPolygon = (nSides, size = 1, cx = 0, cy = 0, closedLoop = true, rotate = false, twoDim = false) => {\n    const nPoints = closedLoop ? (nSides + 1) : nSides;\n    const nCoords = twoDim ? 2 : 3;\n    const points = new Float32Array(nPoints*nCoords);\n    for(let i = 0; i < nPoints; i++) {\n        if(twoDim) {\n            points[i*nCoords] = cx + size * Math.cos(i * 2 * Math.PI / nSides);\n            points[i*nCoords+1] = cy + size * Math.sin(i * 2 * Math.PI / nSides);\n        } else {\n            points[i*nCoords] = cx + size * Math.cos(i * 2 * Math.PI / nSides);\n            points[i*nCoords+1] = rotate ? 0 : cy + size * Math.sin(i * 2 * Math.PI / nSides);\n            points[i*nCoords+2] = rotate ? cy + size * Math.sin(i * 2 * Math.PI / nSides) : 0;\n        }\n    }\n    return points;\n}\n\nconst solveExpEquation = (x0, y0, x1, y1) => {\n\n    // solve the system of equations ...\n    // a*b^(x0) = y0\n    // a*b^(x1) = y1\n\n    const b = Math.pow((y1/y0), (1/(x1-x0)));\n    const a = y0/Math.pow(b, x0);\n    return {a, b}; // to be used y = ab^x\n}\n\n\nconst linToLog = (w) => {\n    /* \n    *\n    * linear scale: [1, w] \n    *    log scale: [1, w] \n    * \n    * (x0, y0): (1, 1)\n    * (x1, y1): (w, w)\n    * \n    * b = log(y0/y1)/(x0-x1)\n    * b = log(1/w)/(1-w)\n    * \n    * a = y1/exp(b*x1)\n    * a = w/exp(b*w)\n    * \n    */\n    let b = Math.log(1/w)/(1 - w);\n    let a = w/Math.exp(b * w);\n\n    return {a,b};\n}\n\nexport {regularPolygon, linToLog, solveExpEquation};","/* eslint-disable */\n\nimport * as THREE from 'three';\n\nexport default class FirstPersonControls {\n\tconstructor(object) {\n\t\tthis.object = object;\n\t\tthis.target = new THREE.Vector3(0, 0, 0);\n\n\t\tthis.enabled = true;\n\n\t\tthis.movementSpeed = 200;\n\t\tthis.lookSpeed = 200;\n\n\t\tthis.lookVertical = true;\n\t\tthis.autoForward = false;\n\n\t\tthis.activeLook = true;\n\n\t\tthis.heightLock = false;\n\n\t\tthis.constrainVertical = true;\n\t\tthis.verticalMin = 0;\n\t\tthis.verticalMax = Math.PI;\n\n\t\tthis.lat = 0;\n\t\tthis.lon = -90;\n\t\tthis.phi = 0;\n\t\tthis.theta = 0;\n\n\t\tthis.moveForward = false;\n\t\tthis.moveBackward = false;\n\t\tthis.moveLeft = false;\n\t\tthis.moveRight = false;\n\n\t\tthis.lookUp = false;\n\t\tthis.lookDown = false;\n\t\tthis.lookLeft = false;\n\t\tthis.lookRight = false;\n\n\t\tthis._onKeyDown = this.bind(this, this.onKeyDown);\n\t\tthis._onKeyUp = this.bind(this, this.onKeyUp);\n\t\twindow.addEventListener('keydown', this._onKeyDown, false);\n\t\twindow.addEventListener('keyup', this._onKeyUp, false);\n\t}\n\n\tonKeyDown(event) {\n\t\tswitch (event.keyCode) {\n\t\t\tcase 87: /*W*/ this.moveForward = true; break;\n\t\t\tcase 65: /*A*/ this.moveLeft = true; break;\n\t\t\tcase 83: /*S*/ this.moveBackward = true; break;\n\t\t\tcase 68: /*D*/ this.moveRight = true; break;\n\n\t\t\tcase 38: /*up*/ this.lookUp = true; break;\n\t\t\tcase 37: /*left*/ this.lookLeft = true; break;\n\t\t\tcase 40: /*down*/ this.lookDown = true; break;\n\t\t\tcase 39: /*right*/ this.lookRight = true; break;\n\t\t}\n\t}\n\n\tonKeyUp(event) {\n\t\tswitch (event.keyCode) {\n\t\t\tcase 87: /*W*/ this.moveForward = false; break;\n\t\t\tcase 65: /*A*/ this.moveLeft = false; break;\n\t\t\tcase 83: /*S*/ this.moveBackward = false; break;\n\t\t\tcase 68: /*D*/ this.moveRight = false; break;\n\n\t\t\tcase 38: /*up*/ this.lookUp = false; break;\n\t\t\tcase 37: /*left*/ this.lookLeft = false; break;\n\t\t\tcase 40: /*down*/ this.lookDown = false; break;\n\t\t\tcase 39: /*right*/ this.lookRight = false; break;\n\t\t}\n\t}\n\n\tupdate(delta, yClamp) {\n\t\tif (this.enabled === false) return;\n\n\t\tvar actualMoveSpeed = delta * this.movementSpeed;\n\n\t\t// translate by key press\n\t\tif (this.moveForward || (this.autoForward && !this.moveBackward)) this.object.translateZ(- (actualMoveSpeed));\n\t\tif (this.moveBackward) this.object.translateZ(actualMoveSpeed);\n\t\tif (this.moveLeft) this.object.translateX(- actualMoveSpeed);\n\t\tif (this.moveRight) this.object.translateX(actualMoveSpeed);\n\n\t\t// enforce height lock\n\t\tif (this.heightLock) this.object.position.y = yClamp || 1;\n\n\t\tvar actualLookSpeed = delta * this.lookSpeed;\n\n\t\tif (this.lookUp) this.lat += actualLookSpeed;\n\t\tif (this.lookDown) this.lat -= actualLookSpeed;\n\t\tif (this.lookRight) this.lon += actualLookSpeed; // * verticalLookRatio;\n\t\tif (this.lookLeft) this.lon -= actualLookSpeed; // * verticalLookRatio;\n\n\t\tthis.lat = Math.max(- 85, Math.min(85, this.lat));\n\t\tthis.phi = THREE.Math.degToRad(90 - this.lat);\n\t\tthis.theta = THREE.Math.degToRad(this.lon);\n\n\t\tif (this.constrainVertical) {\n\t\t\tthis.phi = THREE.Math.mapLinear(this.phi, 0, Math.PI, this.verticalMin, this.verticalMax);\n\t\t}\n\n\t\tlet targetPosition = this.target;\n\t\tlet position = this.object.position;\n\n\t\ttargetPosition.x = position.x + 100 * Math.sin(this.phi) * Math.cos(this.theta);\n\t\ttargetPosition.y = position.y + 100 * Math.cos(this.phi);\n\t\ttargetPosition.z = position.z + 100 * Math.sin(this.phi) * Math.sin(this.theta);\n\n\t\tthis.object.lookAt(targetPosition);\n\n\t}\n\n\tdispose() {\n\t\twindow.removeEventListener('keydown', this._onKeyDown, false);\n\t\twindow.removeEventListener('keyup', this._onKeyUp, false);\n\t}\n\n\tbind(scope, fn) {\n\t\treturn function () {\n\t\t\tfn.apply(scope, arguments);\n\t\t};\n\t}\n}","import * as THREE from 'three';\nimport Stats from 'stats.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport FirstPersonControls from './controls/FirstPersonControls';\n\nexport class SceneManager {\n\n    constructor(canvas) {\n\n        this.canvas = canvas;\n\n        this.clock = new THREE.Clock(true);\n\n        this.screenDimensions = {\n            width: window.innerWidth,\n            height: window.innerHeight\n        }\n\n        this.worldDimensions = {\n            width: 1000,\n            height: 1000,\n            depth: 1000\n        };\n\n        this.pauseVisuals = false;\n        this.animate = this.animate.bind(this);\n        this.render = this.render.bind(this);\n        this.onWindowResize = this.onWindowResize.bind(this);\n        this.showStats = false;\n\n    }\n\n    init() {\n        return new Promise((resolve, reject) => {\n            try {\n                // lights, camera, action\n                this.scene = this.initScene();\n                this.renderer = this.initRender();\n                this.camera = this.initCamera('perspective');\n                this.controls = this.initControls();\n                this.subjects = this.initSubjects();\n                this.lights = this.initLights();\n                this.helpers = this.initHelpers();\n                resolve();\n            } catch (err) {\n                reject(err);\n            }\n        })\n    }\n\n    stop() {\n        window.cancelAnimationFrame(this.currentFrame);\n    }\n\n    applyAll(obj, callback, exceptions) {\n        obj.children.forEach((child) => {\n            if (child.children.length > 0) {\n                this.applyAll(child, callback, exceptions);\n            } else {\n                if (!exceptions.find((ex) => child.name.includes(ex))) {\n                    callback(child);\n                }\n            }\n        })\n    }\n\n    disposeAll(obj) {\n        while (obj.children.length > 0) {\n            this.disposeAll(obj.children[0])\n            obj.remove(obj.children[0]);\n        }\n        if (obj.geometry) obj.geometry.dispose()\n\n        if (obj.material) {\n            //in case of map, bumpMap, normalMap, envMap ...\n            Object.keys(obj.material).forEach(prop => {\n                if (!obj.material[prop])\n                    return\n                if (typeof obj.material[prop].dispose === 'function')\n                    obj.material[prop].dispose()\n            })\n            obj.material.dispose()\n        }\n    }\n\n    animate() {\n        this.showStats && this.helpers.stats.begin();\n        this.render();\n        this.showStats && this.helpers.stats.end();\n        this.currentFrame = requestAnimationFrame(this.animate);\n    }\n\n    initScene() {\n        const scene = new THREE.Scene();\n        return scene;\n    }\n\n    initRender() {\n\n        const renderer = new THREE.WebGLRenderer({\n            alpha: true,\n            autoClear: false,\n            canvas: this.canvas,\n            antialias: true,\n            //powerPreference: \"high-performance\",\n            outputEncoding: THREE.sRGBEncoding\n        });\n\n        let DPR = Math.min(this.DPRMax || 1.5, (window.devicePixelRatio) ? window.devicePixelRatio : 1);\n\n        renderer.setPixelRatio(DPR);\n        renderer.setSize(this.screenDimensions.width, this.screenDimensions.height);\n\n        return renderer;\n    }\n\n    initCamera(type, frustrum) {\n\n        const fieldOfView = 60;\n        const nearPlane = 1;\n        const farPlane = 10000;\n        const aspect = this.screenDimensions.width / this.screenDimensions.height;\n        let camera;\n\n        switch (type || 'perspective') {\n            case 'perspective':\n                camera = new THREE.PerspectiveCamera(fieldOfView, 1, nearPlane, farPlane);\n                break;\n            case 'orthographic':\n                let f = frustrum || 50;\n                camera = new THREE.OrthographicCamera(-f, f, f / aspect, -f / aspect, nearPlane, farPlane);\n                break;\n            default: break;\n        }\n\n        camera.aspect = aspect;\n        camera.position.set(0, 10, 115);\n        camera.lookAt(new THREE.Vector3(0, 0, 0));\n        camera.updateProjectionMatrix();\n        return camera;\n    }\n\n    initControls() {\n\n        const controls = {};\n        controls.fpc = new FirstPersonControls(this.camera);\n        return controls;\n\n    }\n\n    initSubjects() {\n\n        const subjects = {};\n        return subjects;\n\n    }\n\n    initLights() {\n        const lights = {\n            ambient: new THREE.AmbientLight(0xffffff, .1)\n        }\n        this.scene.add(lights.ambient);\n        this.lights = lights;\n    }\n\n    initHelpers() {\n\n        let stats = null;\n\n        if (this.showStats) {\n            stats = new Stats();\n            stats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\n            stats.dom.style.left = null;\n            stats.dom.style.right = '0px';\n            document.body.appendChild(stats.dom);\n        }\n\n        const helpers = {\n            stats: stats,\n            gltfLoader: new GLTFLoader(),\n        }\n\n        return helpers;\n\n    }\n\n    onWindowResize() {\n        const newWidth = window.innerWidth;\n        const newHeight = window.innerHeight;\n        this.screenDimensions.width = newWidth;\n        this.screenDimensions.height = newHeight;\n        const aspectRatio = newWidth / newHeight;\n\n        if (this.fovAdjust) {\n            this.camera.fov = this.getNewFov(aspectRatio);\n        }\n\n        this.camera.aspect = aspectRatio;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(newWidth, newHeight);\n        this.render(true);\n    }\n\n    loadModel(options = {}) {\n\n        const { name, format, index } = options;\n\n        let ext;\n\n        if (format === 'glb') {\n            ext = '.glb';\n        } else {\n            ext = '.gltf';\n        }\n\n        return new Promise((resolve, reject) => {\n\n            let url;\n\n            if (process.env.REACT_APP_ASSET_LOCATION === 'local') {\n\n                url = index[format];\n\n            } else if (process.env.REACT_APP_ASSET_LOCATION === 's3') {\n\n                url = `https://soundscape-public.s3.us-east-2.amazonaws.com/app/models/${this.songId}/${format}/${name}${ext}`;\n\n            }\n\n            this.helpers.gltfLoader.load(\n                url,\n                (model) => resolve(model),\n                null,\n                (err) => reject(err)\n            );\n\n        });\n\n    }\n\n};","import * as THREE from 'three';\n\nexport class StarQuandrants {\n\n    constructor(scene, levels, skyColor, params) {\n\n        this.levels = levels;\n\n        this.colorPalette = params.colorPalette;\n        this.width = params.width;\n        this.height = params.height;\n        this.depth = params.depth;\n        this.center = params.center;\n\n        this.leftGroup = new THREE.Group();\n        this.rightGroup = new THREE.Group();\n        this.group = new THREE.Group();\n\n        for (let i = 0; i < levels; i++) {\n            this.createStars(params.count, 'left', i, skyColor);\n            this.createStars(params.count, 'right', i, skyColor);\n        }\n\n        this.group.add(this.leftGroup);\n        this.group.add(this.rightGroup);\n        this.group.position.copy(params.center);\n        scene.add(this.group);\n\n    }\n\n    createStars(n, channel, level, skyColor) {\n\n        let geometry = new THREE.BufferGeometry();\n        let positions = [];\n        let color;\n        let colors = [];\n\n        for (let i = 0; i < n; i++) {\n            const xBound = channel === 'left' ? (this.width / -2) * 1.35 : this.width / 2 * 1.35;\n            const x = xBound * Math.random();\n\n            const yMin = level * this.height / this.levels;\n            const y = yMin + Math.random() * (this.height / this.levels);\n\n            const z = this.depth * Math.random();\n\n            positions.push(x, y, z)\n\n            color = new THREE.Color(this.colorPalette(y / this.height));\n\n            const distanceFromMoon = Math.sqrt(x * x + (y - 15) * (y - 15));\n\n            color.lerp(skyColor, 1 / (distanceFromMoon / 75));\n\n            colors.push(color.r, color.g, color.b);\n        }\n\n        geometry.addAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\n        geometry.addAttribute('color', new THREE.Float32BufferAttribute(colors, 3));\n        geometry.setDrawRange(0, n);\n\n        let material = new THREE.PointsMaterial({\n            vertexColors: THREE.VertexColors,\n            transparent: true,\n            opacity: 0,\n            fog: false\n        });\n\n        if (channel === 'left') {\n            this.leftGroup.add(new THREE.Points(geometry, material));\n        } else {\n            this.rightGroup.add(new THREE.Points(geometry, material));\n        }\n    }\n}","/* \n    Used for local development only (.env.development). Instead of configurating dynamic imports, the following \n    asset index is used. In production (.env.production), assets are fetched from S3.\n*/\n\n\n/* \n    MORNINGS\n*/\n\n\n/* \n    MOONRISE\n*/\n\nexport const lily = {\n    glb: require(`./moonrise/glb/lily.glb`),\n    gltf: require(`./moonrise/gltf/lily.gltf`),\n    draco: require(`./moonrise/draco/lily-draco.gltf`),\n}\n\nexport const pineTree = {\n    glb: require(`./moonrise/glb/pine-tree.glb`),\n    gltf: require(`./moonrise/gltf/pine-tree.gltf`),\n    draco: require(`./moonrise/draco/pine-tree-draco.gltf`),\n}\n\nexport const landscape = {\n    glb: require(`./moonrise/glb/landscape.glb`),\n    gltf: require(`./moonrise/gltf/landscape.gltf`),\n    draco: require(`./moonrise/draco/landscape-draco.gltf`),\n}\n\n/* \n    SWAMP\n*/\n\nexport const swamp = {\n    glb: require('./swamp/glb/swamp.glb')\n}","// libs\nimport * as THREE from 'three';\nimport * as d3Chromatic from 'd3-scale-chromatic';\nimport { linToLog } from '../../../utils/mathUtils';\nimport { regularPolygon } from 'crco-utils';\n\nimport { SceneManager } from '../../SceneManager';\nimport { StarQuandrants } from '../../subjects/StarQuandrants';\n\nimport { lily, pineTree, landscape } from '../../models/assetIndex';\n\nexport class Moonrise extends SceneManager {\n\n    constructor(canvas, analysers, callback, extras) {\n\n        super(canvas);\n\n        this.songId = 'moonrise';\n        this.DPRMax = 2.5;\n\n        this.rhythmAnalyser = analysers.find(a => a.id === 'rhythm-analyser');\n        this.atmosphereAnalyser = analysers.find(a => a.id === 'atmosphere-analyser');\n        this.harmonyAnalyser = analysers.find(a => a.id === 'harmony-analyser');\n        this.melodyAnalyser = analysers.find(a => a.id === 'melody-analyser');\n        this.bassAnalyser = analysers.find(a => a.id === 'bass-analyser');\n\n        this.palette = {\n            white: 0xffffff,\n            rockGrey: 0x9d978e,\n            lightning: 0xEEE6AB,\n            moonYellow: 0xf6f2d5,\n            tropicalGreen: 0x70A491,\n            deepInk: 0x030C22\n        };\n\n        // lily vars\n        this.prevMelodyVolume = 0;\n        this.currentMelodyVolume = 0;\n        this.lilyColors = [this.palette.dustyViolet, this.palette.pansyPurple, this.palette.funGreen, this.palette.hibiscus, this.palette.yellow]\n\n        super.init().then(() => {\n            window.addEventListener('resize', () => {\n                this.onWindowResize(window.innerWidth, window.innerHeight)\n            });\n            this.scene.fog = new THREE.Fog(0xffffff, 10, 470);\n            this.scene.background = new THREE.Color('#1F262F').lerp(new THREE.Color(0x000000), 0.2);\n            Promise.all([\n                this.initLakeTrees(),\n                this.initLakeScene(),\n                this.initLakeRipples(),\n                this.initLakeStars(),\n                this.initLakeLilies(),\n                this.initLakeMoon()\n            ]).then(() => {\n                callback();\n                super.animate();\n            })\n        })\n    }\n\n    initLakeScene() {\n        return new Promise((resolve, reject) => {\n            try {\n\n                // hexagon shape for the lake body\n                const lakeShapePoints = regularPolygon(6, 110, 0, 0, true, false, true);\n                const lakeShapeVectors = []\n                for (let i = 0; i < lakeShapePoints.length; i += 2) {\n                    lakeShapeVectors.push(new THREE.Vector2(lakeShapePoints[i], lakeShapePoints[i + 1]));\n                }\n                const lakeShape = new THREE.Shape(lakeShapeVectors);\n                const lakeGeo = new THREE.ShapeBufferGeometry(lakeShape);\n                lakeGeo.rotateX(-Math.PI / 2);\n                lakeGeo.translate(0, 0, 70);\n                const lakeMat = new THREE.MeshBasicMaterial({\n                    color: this.palette.deepInk,\n                    fog: false\n                });\n                const lakeMesh = new THREE.Mesh(lakeGeo, lakeMat);\n                this.subjects.lake = lakeMesh;\n                this.scene.add(lakeMesh);\n\n                // basic rectangle for the ground\n                const groundGeo = new THREE.PlaneBufferGeometry(550, 350);\n                groundGeo.rotateX(-Math.PI / 2);\n                groundGeo.translate(0, -1, 0);\n                const groundMat = new THREE.MeshBasicMaterial({\n                    color: 0x022A1E,\n                    fog: false\n                });\n                groundMat.color.lerp(new THREE.Color(0x000000), 0.75); // TODO: figure out the color issue\n                const groundMesh = new THREE.Mesh(groundGeo, groundMat)\n                this.subjects.ground = groundMesh;\n                this.scene.add(groundMesh);\n\n                const moonGuard = new THREE.Mesh(new THREE.PlaneBufferGeometry(60, 30), groundMat);\n                moonGuard.translateZ(-79);\n\n                this.scene.add(moonGuard);\n\n                // directional light\n                const directionalLight = new THREE.DirectionalLight(0xffffff, 0.18);\n                directionalLight.position.set(0, 10, 0);\n                this.scene.add(directionalLight);\n\n                // point light fireflies\n                const fireflyCount = 16;\n                const fireFlyGroup = new THREE.Group();\n                for (let i = 0; i < fireflyCount; i++) {\n                    const g = new THREE.Group();\n                    g.add(new THREE.PointLight(this.palette.moonYellow, 0.1));\n\n                    const sphereGeo = new THREE.SphereBufferGeometry(0.25);\n                    const sphereMat = new THREE.MeshBasicMaterial({\n                        color: this.palette.lightning,\n                        fog: false,\n                        transparent: true\n                    });\n\n                    g.add(new THREE.Mesh(sphereGeo, sphereMat));\n\n                    g.position.set(\n                        -70 + Math.random() * 140,\n                        5 + Math.random() * 15,\n                        40 - Math.random() * 70\n                    );\n\n                    g.userData.cycle = 0;\n                    g.userData.state = 'off';\n                    fireFlyGroup.add(g);\n                }\n\n                this.subjects.fireflies = fireFlyGroup;\n                this.scene.add(fireFlyGroup);\n\n                // add some rocks\n                this.loadModel({ name: 'landscape', index: landscape, format: process.env.REACT_APP_ASSET_FORMAT }).then((model) => {\n                    this.subjects.rocks = model.scene.children.find((e) => e.name = 'rockGroup');\n                    this.subjects.rocks.children.forEach((rock) => { rock.material.color.setRGB(0.06, 0.06, 0.06) });\n                    this.scene.add(this.subjects.rocks);\n                }).catch((err) => {\n                    reject(err);\n                })\n\n                resolve();\n\n            } catch (err) {\n                reject(err)\n            }\n        });\n    }\n\n    initLakeMoon() {\n        return new Promise((resolve, reject) => {\n            try {\n\n                const moonRadius = 25;\n                const numVertices = this.bassAnalyser.fftSize;\n                const numMoonRings = 5;\n\n                const moonGeo = new THREE.CircleBufferGeometry(moonRadius, numVertices, numVertices);\n                const moonMat = new THREE.MeshBasicMaterial({\n                    color: this.palette.moonYellow,\n                    fog: false\n                });\n\n                const moonMesh = new THREE.Mesh(moonGeo, moonMat);\n                moonMesh.userData.radius = moonRadius;\n                moonMesh.position.set(0, 35, -80);\n\n                this.subjects.moon = moonMesh;\n                this.scene.add(moonMesh);\n\n                const moonRings = new THREE.Group(); // moonRings = group of numMoonRings(5) rings\n                const moonBeams = new THREE.Group(); // moonBeams = group of 16 moonRings\n\n                // 5 rings in the moonRings group\n                for (let j = 0; j < numMoonRings; j++) {\n                    const moonRingGeo = new THREE.BufferGeometry();\n                    const positions = new Float32Array(numVertices * 3);\n                    moonRingGeo.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n                    moonRingGeo.setDrawRange(0, 0);\n\n                    const moonRingMat = new THREE.PointsMaterial({\n                        color: this.palette.moonYellow,\n                        transparent: true,\n                        opacity: 0.1 + (j / 7)\n                    });\n\n                    const moonRing = new THREE.Points(moonRingGeo, moonRingMat);\n                    moonRings.add(moonRing);\n                }\n\n                for (let k = 0; k < 8; k++) {\n                    const newMoonRings = moonRings.clone();\n                    newMoonRings.translateY(moonMesh.position.y);\n                    newMoonRings.rotateZ(2 * Math.PI * (k / 16));\n                    moonBeams.add(newMoonRings);\n                }\n\n                this.subjects.moonBeams = moonBeams;\n                this.subjects.moonBeams.userData.numMoonRings = numMoonRings;\n                this.subjects.moonBeams.userData.numVertices = numVertices;\n                this.scene.add(moonBeams);\n\n                resolve();\n            } catch (err) {\n                reject(err)\n            }\n        })\n    }\n\n    initLakeTrees() {\n        return new Promise((resolve, reject) => {\n            // load gltf tree models\n            this.loadModel({ name: 'pine-tree', index: pineTree, format: process.env.REACT_APP_ASSET_FORMAT }).then((model) => {\n\n                console.log(model);\n\n                const basePineTree = model.scenes[0].children[0];\n\n                // generate simple tree formation\n                const pineTreeGroup = new THREE.Group();\n                const numPineTrees = 64;\n                const xMin = -100;\n                const xMax = 100;\n                const xNoise = 5;\n                const zNoise = 10;\n                const scaleNoise = 0.3;\n\n                for (let i = 1; i <= numPineTrees; i++) {\n                    const x = xMin + i / numPineTrees * (xMax - xMin) + (Math.random() * xNoise - xNoise / 2);\n\n                    // z(x) is piecewise and is calculated using the coordinates of the lake hexagon\n                    let z;\n                    if (x < -55) {\n                        z = -1 * ((95 / 55) * x + 190) - (Math.random() * zNoise);\n                    } else if (x >= -55 && x < 55) {\n                        z = -95 - (Math.random() * zNoise);\n                    } else if (x >= 55) {\n                        z = -1 * (-(95 / 55) * x + 190) - (Math.random() * zNoise);\n                    }\n\n                    const clone = basePineTree.clone();\n                    const scale = 1 - (scaleNoise * Math.random());\n\n                    clone.children[0].material = new THREE.MeshBasicMaterial({\n                        color: new THREE.Color(this.palette.tropicalGreen).lerp(new THREE.Color(this.palette.white), -1.5)\n                    });;\n\n                    clone.position.copy(new THREE.Vector3(x, -2, z + 70));\n                    clone.scale.copy(new THREE.Vector3(scale, scale, scale));\n                    clone.rotateY(Math.random() * 2 * Math.PI);\n                    pineTreeGroup.add(clone);\n                }\n                this.subjects.pineTrees = pineTreeGroup;\n                this.scene.add(pineTreeGroup);\n                resolve();\n\n            }).catch((err) => {\n                reject(err);\n            })\n        });\n    }\n\n    initLakeRipples() {\n        return new Promise((resolve, reject) => {\n            try {\n                const n = this.rhythmAnalyser.frequencyBinCount;\n                const numSides = 6;\n                const baseWidth = 1;\n                const polygonPoints = regularPolygon(numSides, baseWidth, 0, 0, true, true);\n                const bandScale = 100; // how far out the bands will extend\n                const bandScaleLogConstants = linToLog(bandScale);\n\n                const baseGeoGroup = new THREE.Group();\n                const baseGeo = new THREE.BufferGeometry();\n                baseGeo.addAttribute('position', new THREE.BufferAttribute(polygonPoints, 3));\n\n                for (let i = 0; i < n; i++) {\n\n                    // clone and scale\n                    const geo = baseGeo.clone();\n                    const linScale = 1 + (i / n) * bandScale;\n                    const logScale = Math.log(linScale / bandScaleLogConstants.a) / bandScaleLogConstants.b;\n                    geo.scale(logScale, logScale, logScale);\n                    geo.translate(0, 0.05, 50);\n\n                    // add to group\n                    baseGeoGroup.add(new THREE.Line(geo, new THREE.LineBasicMaterial({\n                        color: this.palette.moonYellow,\n                        transparent: true,\n                        opacity: 0\n                    })));\n\n                }\n\n                // bind subject and add to scene\n                this.subjects.ripples = baseGeoGroup;\n                this.scene.add(baseGeoGroup);\n\n                resolve();\n            } catch (err) {\n                reject(err);\n            }\n        });\n    }\n\n    initLakeStars() {\n        return new Promise((resolve, reject) => {\n            try {\n                this.subjects.stars = new StarQuandrants(this.scene, 8, this.scene.background, {\n                    count: 150,\n                    width: 600,\n                    height: 225,\n                    depth: 190,\n                    center: new THREE.Vector3(0, -13, -300),\n                    colorPalette: d3Chromatic.interpolateCool\n                });\n                resolve();\n            } catch (err) {\n                reject(err)\n            }\n        });\n    }\n\n    initLakeLilies() {\n        return new Promise((resolve, reject) => {\n            this.loadModel({ name: 'lily', index: lily, format: process.env.REACT_APP_ASSET_FORMAT }).then((model) => {\n\n                const lily = model.scene.children.find((c) => c.name === 'Group');\n\n                // breakdown\n                const lowerPetal = lily.children[0].clone();\n                const upperPetal = lily.children[1].clone();\n                const sphere = lily.children[2].clone();\n                sphere.name = 'sphere';\n                const lilyPad = lily.children[3].clone();\n                lilyPad.name = 'lilyPad';\n\n                // initialize base lily\n                const baseLily = new THREE.Group();\n                const petalGroup = new THREE.Group();\n                petalGroup.name = 'petalGroup';\n\n\n                // duplicate and rotate petals, adding each to their corresponding group\n                for (let i = 0; i < 18; i++) {\n                    const upperClone = new THREE.Group().add(upperPetal.clone());\n                    upperClone.rotateY(Math.PI * 2 * (i / 8));\n\n                    const lowerClone = new THREE.Group().add(lowerPetal.clone());\n                    lowerClone.rotateY(Math.PI * 2 * (i / 8));\n\n                    petalGroup.add(upperClone);\n                    petalGroup.add(lowerClone);\n                }\n\n                baseLily.add(petalGroup, sphere, lilyPad);\n\n                const numLilies = 23;\n                const lilyGroup = new THREE.Group();\n\n                const flowerMat = new THREE.MeshBasicMaterial({\n                    color: new THREE.Color(0xFFFFFF),\n                });\n\n                const padMat = new THREE.MeshBasicMaterial({\n                    color: new THREE.Color(0x022A1E).lerp(new THREE.Color(0x000000), 1),\n                });\n\n                for (let i = 1; i <= numLilies; i++) {\n\n                    const clone = baseLily.clone();\n\n                    const petalColor = new THREE.Color(d3Chromatic.interpolateViridis(Math.random()));\n                    const petalMat = new THREE.MeshBasicMaterial({\n                        color: petalColor,\n                    });\n\n                    clone.getObjectByName('petalGroup').children.forEach((petalGroup) => {\n                        petalGroup.children[0].material = petalMat;\n                    });\n\n                    clone.getObjectByName('lilyPad').material = padMat;\n                    clone.getObjectByName('sphere').material = flowerMat;\n\n                    const firstPattern = (i % 4 + 1);\n                    const secondPattern = Math.floor(i / 4) % 4;\n\n                    const scale = Math.max(2 * Math.random(), 1.4);\n                    let x = firstPattern / 1.3 * (-1.5 * (7) + secondPattern * (7));\n                    x *= 1 + (-0.20 + Math.random() * 0.20);\n                    const z = 102 - (i % 4) / 3 * 18 - (Math.random() * (10 - 15 * Math.floor(secondPattern / 2)));\n\n                    clone.userData.petalColor = petalColor;\n                    clone.userData.ignited = false;\n                    clone.userData.phase = 'waxing';\n                    clone.userData.measure = 0; // [0 - 1] phase cutoff at 0.5;\n\n                    clone.scale.copy(new THREE.Vector3(scale, scale, scale));\n                    clone.position.copy(new THREE.Vector3(x, 1, z));\n\n                    lilyGroup.add(clone);\n                }\n\n                this.subjects.lilies = lilyGroup;\n                this.scene.add(lilyGroup);\n\n                resolve();\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    }\n\n    render(overridePause) {\n\n        if (!this.pauseVisuals || overridePause) {\n\n            // this.controls.fpc.update(this.clock.getDelta());\n\n            /* \n             * RIPPLES\n             */\n\n            if (this.playerState.rhythm) {\n                this.rhythmAnalyser.getFrequencyData()\n                this.rhythmAnalyser.fftData.forEach((d, i) => {\n                    const damping = 180 * (i / this.rhythmAnalyser.frequencyBinCount);\n                    this.subjects.ripples.children[i].material.opacity = (d - damping) / 500;\n                });\n            }\n\n            /* \n             * STARS\n             */\n\n            if (this.playerState.atmosphere) {\n                this.atmosphereAnalyser.getFrequencyData('left');\n                this.atmosphereAnalyser.getFrequencyData('right');\n\n                this.atmosphereAnalyser.fftData['left'].slice(1, 9).forEach((d, i) => {\n                    this.subjects.stars.leftGroup.children[i].material.opacity = (d / 125);\n                });\n\n                this.atmosphereAnalyser.fftData['right'].slice(1, 9).forEach((d, i) => {\n                    this.subjects.stars.rightGroup.children[i].material.opacity = (d / 125);\n                });\n            }\n\n            /* \n             * TREES\n             */\n\n            if (this.playerState.harmony) {\n                this.harmonyAnalyser.getFrequencyData();\n\n                this.subjects.pineTrees.children.forEach((child, i) => {\n                    const freqIndex = Math.floor(i / 8);\n                    const rawData = this.harmonyAnalyser.fftData.slice([1 + freqIndex])[0];\n                    const transformedData = Math.pow(rawData, 5) / (Math.pow(255, 5) * 0.060);\n\n                    const color = new THREE.Color(this.palette.tropicalGreen);\n                    color.lerp(new THREE.Color(this.palette.white), -1.5 + (transformedData));\n\n                    child.children[0].material.color.set(color);\n                });\n            }\n\n            /* \n             * MOON\n             */\n\n            if (this.playerState.bass) {\n\n                this.bassAnalyser.getFrequencyData();\n                const avgBassVol = this.bassAnalyser.fftData.reduce((a, b) => { return a + b; }) / this.bassAnalyser.frequencyBinCount;\n                const bassFrequencies = this.bassAnalyser.fftData.slice(0, this.subjects.moonBeams.userData.numMoonRings);\n                const radius = this.subjects.moon.userData.radius * 0.5;\n\n                // set just the first moon beam's geometry\n                for (let moonRingIndex = 0; moonRingIndex < this.subjects.moonBeams.userData.numMoonRings; moonRingIndex++) {\n\n                    for (let vertexCount = 0; vertexCount < this.subjects.moonBeams.userData.numVertices; vertexCount++) {\n\n                        const adj = (1 / (0.15 * (moonRingIndex + 1)));\n                        const rot = bassFrequencies[moonRingIndex] / 255;\n                        const moonRing = this.subjects.moonBeams.children[0].children[moonRingIndex];\n\n                        // TAKE 2: Outward fanning\n                        moonRing.geometry.attributes.position.array[vertexCount * 3] = (radius - 7 + (avgBassVol / 3) * adj) * Math.cos(2 * Math.PI * (vertexCount / this.bassAnalyser.fftSize + rot / 12));\n                        moonRing.geometry.attributes.position.array[vertexCount * 3 + 1] = (radius - 7 + (avgBassVol / 3) * adj) * Math.sin(2 * Math.PI * (vertexCount / this.bassAnalyser.fftSize + rot / 6));\n                        moonRing.geometry.attributes.position.array[vertexCount * 3 + 2] = -81;\n                    }\n                }\n\n                // copy the single moon beam's geometry into the other position arrays and update\n                this.subjects.moonBeams.children.forEach((moonBeam) => {\n                    moonBeam.children.forEach((moonRing, moonRingIndex) => {\n                        moonRing.geometry.attributes.position.array = this.subjects.moonBeams.children[0].children[moonRingIndex].geometry.attributes.position.array;\n                        moonRing.geometry.setDrawRange(0, moonRing.geometry.attributes.position.count);\n                        moonRing.geometry.attributes.position.needsUpdate = true;\n                    })\n                });\n\n            }\n\n\n            /* \n             * LILIES\n             */\n\n            if (this.playerState.melody) {\n\n                this.melodyAnalyser.getFrequencyData();//.slice(5);\n\n                let melodyVolume = 0;\n                let melodyCount = 0;\n\n                for (let i = 0; i < this.melodyAnalyser.fftData.length; i++) {\n                    melodyVolume += this.melodyAnalyser.fftData[i];\n                    melodyCount++;\n                }\n\n                const avgMelodyVolume = melodyVolume / melodyCount;\n\n                this.subjects.lilies.children.forEach((lily) => {\n\n                    const data = lily.userData;\n                    const increment = 0.11;\n\n                    if (!data.ignited && avgMelodyVolume !== 0 & avgMelodyVolume * Math.random() > 55) {\n                        data.ignited = true;\n                    }\n                    if (data.ignited && data.phase === 'waxing' && data.measure < 1) {\n                        data.measure = Math.min(2, data.measure + increment * 70);\n                    } else if (data.ignited && data.phase === 'waxing' && data.measure > 1) {\n                        data.phase = 'waning';\n                        data.measure += -1 * increment;\n                    } else if (data.ignited && data.phase === 'waning' && data.measure < 0) {\n                        data.ignited = false;\n                        data.phase = 'waxing';\n                    } else if (data.ignited && data.phase === 'waning') {\n                        data.measure += -1 * increment;\n                    }\n\n                    const petalGroup = lily.getObjectByName('petalGroup');\n                    petalGroup.children[0].children[0].material.color = lily.userData.petalColor.clone().lerp(new THREE.Color(0xFFFFFF), Math.max(0, (avgMelodyVolume / 105) * data.measure));\n\n                })\n\n                this.prevMelodyVolume = avgMelodyVolume;\n\n            }\n\n            /* \n             * FIREFLIES\n             */\n\n            const flyAmount = .3;\n            const flightNoise = 0.01;\n\n            this.subjects.fireflies.children.forEach((fly) => {\n\n                if (fly.userData.state === 'off' && Math.random() < 0.0005) {\n                    fly.userData.state = 'lighting';\n                    fly.userData.flightPath = new THREE.Vector3(-0.5 + Math.random(), -0.5 + Math.random(), -0.5 + Math.random());\n                }\n\n                if (fly.userData.state === 'lighting') {\n                    fly.userData.cycle += 0.1;\n                    if (fly.userData.cycle >= 1) {\n                        fly.userData.state = 'dimming';\n                    }\n                }\n\n                if (fly.userData.state === 'dimming') {\n                    fly.userData.cycle -= 0.025;\n                    if (fly.userData.cycle <= 0) {\n                        fly.userData.state = 'off';\n                    }\n                }\n\n                if (fly.userData.state === 'dimming' || fly.userData.state === 'lighting') {\n                    const newX = Math.min(Math.max(fly.position.x + (fly.userData.flightPath.x + (flightNoise / -2 + flightNoise)) * flyAmount, -70), 140);\n                    const newY = Math.min(Math.max(fly.position.y + (fly.userData.flightPath.x + (flightNoise / -2 + flightNoise)) * flyAmount, 5), 20);\n                    const newZ = Math.min(Math.max(fly.position.z + (fly.userData.flightPath.x + (flightNoise / -2 + flightNoise)) * flyAmount, -20), 70);\n                    fly.position.set(newX, newY, newZ);\n                }\n\n                fly.children[0].intensity = fly.userData.cycle / 2;\n                fly.children[1].material.opacity = fly.userData.cycle;\n\n            })\n\n            this.renderer.render(this.scene, this.camera);\n\n        }\n\n    }\n\n}","import { boundedSin } from 'crco-utils';\n\nconst period = 2;\nconst bSin = boundedSin(period, .2, .3);\n\nexport const renderRhythm = (subjects, analyser, extras) => {\n\n    analyser.getFrequencyBuckets();\n\n    for (let i = 0; i < subjects.length; i++) {\n\n        const col = subjects[i];\n\n        for (let j = 0; j < col.length; j++) {\n\n            const row = col[j];\n\n            for (let k = 0; k < row.length; k++) {\n\n                const mod = (i + k) % 4 / 4;\n                const p = bSin(extras.beats + mod * period / 4)\n                const book = row[k];\n                book.material.emissiveIntensity = p * analyser.bucketData[j] / 255;\n\n            }\n\n        }\n\n    }\n\n}","import * as THREE from 'three';\nimport { boundedSin } from 'crco-utils';\n\nconst w = 64 + 1;\nconst grey = new THREE.Color(0x333333);\nconst period = 4;\nconst bSin = boundedSin(period, .4, 1);\n\nexport const renderMelody = (subjects, analyser, extras) => {\n\n    analyser.getFrequencyData();\n    const vol = (analyser.fftData.reduce((a, b) => (a + b)) / analyser.fftData.length) / 255;\n    const leftColors = subjects.leftPage.geometry.attributes.customColor;\n    const rightColors = subjects.rightPage.geometry.attributes.customColor;\n\n    for (let i = 0, count = leftColors.count; i < count; i++) {\n\n        const y = i % w;\n        const x = Math.floor(i / w);\n        const s = bSin(extras.beats - (x / w) * (y / w) * period);\n        const c = grey.clone().lerp(\n            new THREE.Color(extras.spectrumFunction(1 - (y / w))),\n            analyser.fftData[Math.ceil(y)] / 255\n        );\n\n        if (y % 4 === 0) {\n            leftColors.array[i * 4] = c.r;\n            leftColors.array[i * 4 + 1] = c.g;\n            leftColors.array[i * 4 + 2] = c.b;\n            leftColors.array[i * 4 + 3] = 1 * s;\n        } else {\n            leftColors.array[i * 4] = c.r;\n            leftColors.array[i * 4 + 1] = c.g;\n            leftColors.array[i * 4 + 2] = c.b;\n            leftColors.array[i * 4 + 3] = 0;\n        }\n\n        if (y % 4 === 0) {\n            rightColors.array[i * 4] = c.r;\n            rightColors.array[i * 4 + 1] = c.g;\n            rightColors.array[i * 4 + 2] = c.b;\n            rightColors.array[i * 4 + 3] = 1 * s;\n        } else {\n            rightColors.array[i * 4] = c.r;\n            rightColors.array[i * 4 + 1] = c.g;\n            rightColors.array[i * 4 + 2] = c.b;\n            rightColors.array[i * 4 + 3] = 0;\n        }\n\n    }\n\n    leftColors.needsUpdate = true;\n    rightColors.needsUpdate = true;\n\n    for (let i = 0; i < subjects.innerPetals.length; i++) {\n        const s = subjects.innerPetals[i];\n        s.material.emissiveIntensity = vol * 5;\n    }\n\n    for (let i = 0; i < subjects.outerPetals.length; i++) {\n        const s = subjects.outerPetals[i];\n        s.material.emissiveIntensity = vol * 5;\n    }\n\n}","import { boundedSin } from 'crco-utils';\n\nconst period = 4;\nconst bSin = boundedSin(period, 0, 2, 0, 0, true);\n\nexport const renderAtmosphere = (subjects, analyser, extras) => {\n\n    for (let i = 0; i < subjects.length; i++) {\n        const offset = period * (i % subjects.length) / subjects.length;\n        subjects[i].material.emissiveIntensity = bSin(- extras.beats + offset) * (extras.enabled ? .25 : 0);\n    }\n\n}","// libs\nimport * as THREE from 'three';\nimport { SceneManager } from '../../SceneManager';\nimport FirstPersonControls from '../../controls/FirstPersonControls';\n\n// models\nimport houseModel from '../../models/mornings/glb/house.glb';\nimport tableModel from '../../models/mornings/glb/table.glb';\nimport flowerModel from '../../models/mornings/glb/flowers.glb';\nimport spiralPlantModel from '../../models/mornings/glb/spiral_plant.glb';\nimport bookcaseModel from '../../models/mornings/glb/bookcase.glb';\nimport paintingsModel from '../../models/mornings/glb/paintings.glb';\n\n// rendering\nimport { renderBass } from './renderBass';\nimport { renderRhythm } from './renderRhythm';\nimport { renderHarmony } from './renderHarmony';\nimport { renderMelody } from './renderMelody';\nimport { renderAtmosphere } from './renderAtmosphere';\n\n// shaders\nimport { rgbaVertex, rgbaFragment } from '../../shaders/rgba';\n\nexport class Mornings extends SceneManager {\n\n    constructor(canvas, analysers, callback, extras) {\n\n        super(canvas);\n\n        this.canvas.style = `\n            background-color: none; background: \n            linear-gradient(\n                to top, \n                #F0A9B3 45%, \n                #D8B7B6 55%,\n                #BEBDC3 70%,\n                #A1BCD4 85%,\n                #80BDE8 100%\n            );\n        `;\n\n        this.DPRMax = 2.25;\n        this.spectrumFunction = extras.spectrumFunction;\n        this.songId = 'mornings';\n\n        this.colors = {\n            morningLight: new THREE.Color(0xF0A9B3),\n            plant: new THREE.Color(0x7B9E53),\n            white: new THREE.Color(0xFFFFFF),\n            paleBlue: new THREE.Color(0xDEEEFF),\n            coffee: new THREE.Color(0x260e00),\n            deepBlue: new THREE.Color(0x213058),\n            blueGrey: new THREE.Color(0xB0B1B6)\n        };\n        this.renderList = [\n            'house', 'plant', 'table', 'bookshelf', 'flower'\n            // 'table'\n        ];\n        this.bpm = extras.bpm;\n\n        this.rhythmAnalyser = analysers.find(a => a.id === 'rhythm-analyser');\n        this.atmosphereAnalyser = analysers.find(a => a.id === 'extras-analyser');\n        this.harmonyAnalyser = analysers.find(a => a.id === 'harmony-analyser');\n        this.melodyAnalyser = analysers.find(a => a.id === 'melody-analyser');\n        this.bassAnalyser = analysers.find(a => a.id === 'bass-analyser');\n\n        this.fovAdjust = true;\n        this.fpcControl = false;\n\n        Promise.all([\n            super.init(),\n            this.loadModels(this.renderList)\n        ]).then(() => {\n            callback();\n            this.applySceneSettings();\n            // render once to get objects in place\n            this.render(this.renderList);\n            this.applyAll(this.scene, (child) => {\n                // freeze objects that don't move\n                child.matrixAutoUpdates = false;\n                // lambert material is the most efficient\n                if (child.material && child.material.type === 'MeshStandardMaterial') {\n                    const mat = new THREE.MeshLambertMaterial({\n                        color: child.material.color,\n                        side: THREE.DoubleSide,\n                        emissive: child.material.emissive,\n                        emissiveIntensity: child.material.emissiveIntensity\n                    });\n                    child.material.dispose();\n                    child.material = mat;\n                }\n            }, ['steam', 'van_gogh', 'vonnegut', 'carpet', 'god_rays_top', 'god_rays_bottom']);\n            super.animate();\n        }).catch((err) => {\n            console.log(err);\n        });\n\n    }\n\n    applySceneSettings() {\n\n        this.renderer.shadowMap.enabled = false;\n        this.renderer.shadowMap.type = THREE.PCFSoftShadowMap; // default THREE.PCFShadowMap\n        this.renderer.setClearColor(0x000000, 0.0);\n\n        this.camera.position.set(-36.792147432025736, 12.295984744079584, 19.50565058881036);\n        this.camera.lookAt(46.69487932551039, 2.382592629313793, -34.638979984916375);\n        this.camera.fov = this.getNewFov(window.innerWidth / window.innerHeight);\n        this.camera.updateProjectionMatrix();\n\n    }\n\n    getNewFov(aspectRatio) {\n        const fovMin = 25;\n        const fovMax = 50;\n        const aspectMin = 0.5;\n        const aspectMax = 3;\n        const aspectAdj = Math.max(aspectMin, Math.min(aspectRatio, aspectMax));\n        const newFov = fovMax - (fovMax - fovMin) * (aspectAdj - aspectMin) / (aspectMax - aspectMin);\n        return newFov;\n    }\n\n    initControls() {\n\n        const controls = {};\n\n        if (this.fpcControl) {\n            controls.fpc = new FirstPersonControls(this.camera);\n        }\n\n        return controls;\n\n    }\n\n    initScene() {\n\n        const scene = new THREE.Scene();\n        return scene;\n\n    }\n\n    initLights() {\n\n        const lights = {\n            ambient: new THREE.AmbientLight(this.colors.morningLight.clone().lerp(this.colors.white, .65), .35),\n            sunlight: new THREE.DirectionalLight(this.colors.white, 0),\n            pointOne: new THREE.PointLight(0xffffff, .1)\n        }\n\n\n        lights.pointOne.position.set(-36.792147432025736, 12.295984744079584, 19.50565058881036);\n\n        this.scene.add(lights.ambient);\n        this.scene.add(lights.sunlight);\n        this.scene.add(lights.sunlight.target);\n        this.scene.add(lights.pointOne);\n\n        return lights;\n\n    }\n\n    loadModels(modelList) {\n\n        return new Promise((resolve, reject) => {\n\n            const loadPromiseArray = []\n\n            // house and god rays\n            modelList.indexOf('house') !== -1 && loadPromiseArray.push(\n                new Promise((resolve, reject) => {\n\n                    this.subjects.stringLights = [];\n                    this.subjects.godRays = []\n\n                    this.helpers.gltfLoader.load(houseModel, (gltf) => {\n\n                        gltf.scene.children.forEach((mesh) => {\n\n                            if (mesh.type === 'Group' && mesh.name.includes('string_light')) {\n                                mesh.children[1].material.emissive = mesh.children[1].material.color;\n                                this.subjects.stringLights.push(mesh.children[1]);\n                            }\n\n                            if (mesh.name === 'bushes') {\n                                mesh.material.emissive = mesh.material.color;\n                                mesh.material.emissiveIntensity = .5;\n                            }\n\n                            if (mesh.name === 'god_rays_top' || mesh.name === 'god_rays_bottom') {\n                                mesh.material = new THREE.MeshBasicMaterial({\n                                    color: this.colors.white,\n                                    transparent: true,\n                                    side: THREE.DoubleSide,\n                                    opacity: .025\n                                });\n                                this.subjects.godRays.push(mesh);\n                            }\n\n                        });\n\n                        this.scene.add(gltf.scene);\n                        resolve();\n\n                    }, null, (err) => reject(err));\n\n                })\n            );\n\n            // paintings\n            modelList.indexOf('house') !== -1 && loadPromiseArray.push(\n                new Promise((resolve, reject) => {\n\n                    this.helpers.gltfLoader.load(paintingsModel, (gltf) => {\n\n                        gltf.scene.children.forEach((mesh) => {\n\n                            mesh.name === 'vonnegut_self_portrait' && (mesh.material.side = THREE.FrontSide);\n                            mesh.name === 'van_gogh' && (mesh.material.side = THREE.BackSide);\n\n                        });\n\n                        this.scene.add(gltf.scene);\n                        resolve();\n\n                    }, null, (err) => reject(err));\n\n                })\n            );\n\n            // table\n            modelList.indexOf('table') !== -1 && loadPromiseArray.push(\n                new Promise((resolve, reject) => {\n\n                    this.helpers.gltfLoader.load(tableModel, (gltf) => {\n\n                        const pageGeo = new THREE.PlaneBufferGeometry(1.9, 1.8, 64, 64);\n                        pageGeo.rotateX(-Math.PI / 2);\n\n                        gltf.scene.children.forEach((mesh) => {\n\n                            if (mesh.name.includes('mug_coffee')) {\n                                mesh.material = new THREE.MeshBasicMaterial({\n                                    color: this.colors.coffee\n                                })\n                            }\n\n                            if (mesh.name.includes('mug_top')) {\n                                mesh.material.color = new THREE.Color(0x666666);\n                            }\n\n                            if (mesh.name === 'left_page_ref' || mesh.name === 'right_page_ref') {\n\n                                const colors = new Array(pageGeo.attributes.position.count * 4)\n\n                                const newMesh = mesh.clone();\n                                newMesh.geometry = pageGeo.clone();\n                                newMesh.geometry.addAttribute('customColor', new THREE.Float32BufferAttribute(colors, 4));\n                                newMesh.material = new THREE.ShaderMaterial({\n                                    transparent: true,\n                                    side: THREE.DoubleSide,\n                                    vertexShader: rgbaVertex,\n                                    fragmentShader: rgbaFragment,\n                                    vertexColors: THREE.VertexColors\n                                })\n\n                                this.scene.add(newMesh);\n\n                                mesh.name === 'right_page_ref' && (this.subjects.rightPage = newMesh);\n                                mesh.name === 'left_page_ref' && (this.subjects.leftPage = newMesh);\n\n                            }\n\n                            if (mesh.name === 'steam') {\n                                mesh.material = new THREE.MeshBasicMaterial({\n                                    color: this.colors.white,\n                                    transparent: true,\n                                    side: THREE.DoubleSide,\n                                    opacity: .025\n                                })\n                                this.subjects.steam = mesh;\n                            }\n\n                        });\n\n                        gltf.scene.children.filter(c => c.name.includes('page')).forEach(mesh => gltf.scene.remove(mesh));\n                        this.scene.add(gltf.scene);\n\n                        resolve();\n\n                    }, null, (err) => reject(err))\n                })\n            );\n\n            // flowers\n            modelList.indexOf('flower') !== -1 && loadPromiseArray.push(\n                new Promise((resolve, reject) => {\n\n                    const stickLeaves = [];\n                    const stickLeavesOne = [];\n                    this.subjects.innerPetals = [];\n                    this.subjects.outerPetals = [];\n\n\n                    this.helpers.gltfLoader.load(flowerModel, (gltf) => {\n\n                        gltf.scene.children.forEach((mesh) => {\n\n                            if (mesh.name.includes('Inner_Petals')) {\n                                mesh.material.emissive = mesh.material.color;\n                                mesh.material.emissiveIntensity = 0;\n                                this.subjects.innerPetals.push(mesh);\n                            }\n\n                            if (mesh.name.includes('Outer_Petals')) {\n                                mesh.material.emissive = mesh.material.color;\n                                mesh.material.emissiveIntensity = 0;\n                                this.subjects.outerPetals.push(mesh);\n                            }\n\n                            if (mesh.name.includes('stick_leaves_one')) {\n                                mesh.material = new THREE.MeshLambertMaterial({\n                                    color: this.colors.plant,\n                                    emissive: this.colors.plant,\n                                    emissiveIntensity: 0\n                                })\n                                stickLeavesOne.push(mesh);\n                            } else if (mesh.name.includes('stick_leaves')) {\n                                mesh.material = new THREE.MeshLambertMaterial({\n                                    color: this.colors.plant,\n                                    emissive: this.colors.plant,\n                                    emissiveIntensity: 0\n                                })\n                                stickLeaves.push(mesh);\n                            }\n\n                        })\n\n                        this.subjects.stickLeaves = stickLeaves;\n                        this.subjects.stickLeavesOne = stickLeavesOne;\n\n                        this.scene.add(gltf.scene);\n\n                        resolve();\n\n                    }, null, () => reject())\n                })\n            );\n\n            // spiral plant\n            modelList.indexOf('plant') !== -1 && loadPromiseArray.push(\n                new Promise((resolve, reject) => {\n\n                    this.helpers.gltfLoader.load(spiralPlantModel, (gltf) => {\n\n                        const leaves = [];\n\n                        gltf.scene.children\n                            .filter(mesh => mesh.name.includes('spiral_plant_leaf'))\n                            .forEach(mesh => {\n                                mesh.material = new THREE.MeshLambertMaterial({\n                                    color: this.colors.plant,\n                                    emissive: this.colors.plant,\n                                    emissiveIntensity: 0\n                                })\n                                leaves.push(mesh);\n                            });\n\n                        this.subjects.spiralPlantLeaves = leaves;\n\n                        this.scene.add(gltf.scene);\n\n                        resolve();\n\n                    }, null, (err) => reject(err))\n                })\n            );\n\n            // bookshelf\n            modelList.indexOf('bookshelf') !== -1 && loadPromiseArray.push(\n                new Promise((resolve, reject) => {\n\n                    // 3d array: columns, rows, books in cell\n                    this.subjects.books = new Array(4).fill(null).map(d => new Array(5).fill(null).map(d => []));\n\n                    this.helpers.gltfLoader.load(bookcaseModel, (gltf) => {\n\n                        const pageMat = new THREE.MeshLambertMaterial({ color: 0xE7DACA, side: THREE.DoubleSide });\n\n                        gltf.scene.children.forEach((mesh) => {\n\n                            if (mesh.name.includes('book') && !mesh.name.includes('bookcase') && mesh.type === 'Group') {\n\n                                const name = mesh.name;\n                                const z = parseInt(name.slice(name.length - 1, name.length));\n                                const y = parseInt(name.slice(name.length - 2, name.length - 1));\n                                const x = parseInt(name.slice(name.length - 3, name.length - 2));\n                                const r = -.1 + Math.random() * .2\n                                const c = new THREE.Color(this.spectrumFunction(1 - ((r + y + .5) / 5)));\n\n                                const bookMesh = mesh.children.find(mesh => mesh.material.name.includes('book'));\n                                const pageMesh = mesh.children.find(mesh => mesh.material.name.includes('page'));\n\n                                pageMesh.material = pageMat;\n                                bookMesh.material = new THREE.MeshLambertMaterial({\n                                    color: c,\n                                    side: THREE.DoubleSide,\n                                    emissive: c,\n                                    emissiveIntensity: .1\n                                });\n\n                                this.subjects.books[x][y][z] = bookMesh;\n\n                            }\n\n                        });\n\n                        this.scene.add(gltf.scene);\n\n                        resolve();\n\n                    }, null, (err) => reject(err))\n                })\n            );\n\n            Promise.all(loadPromiseArray).then(() => {\n                resolve();\n            }).catch((err) => {\n                reject(`Error loading models: ${err}`);\n            });\n\n        })\n\n    }\n\n    render(overridePause) {\n\n        if (!this.pauseVisuals || overridePause) {\n\n            this.elapsedBeats = this.bpm * this.clock.getElapsedTime() / 60;\n            this.fpcControl && this.controls.fpc.update(this.clock.getDelta());\n\n            this.subjects.steam.rotateY(-.05);\n\n            (this.playerState.melody || overridePause) && renderMelody({\n                innerPetals: this.subjects.innerPetals,\n                outerPetals: this.subjects.outerPetals,\n                leftPage: this.subjects.leftPage,\n                rightPage: this.subjects.rightPage\n            }, this.melodyAnalyser, {\n                spectrumFunction: this.spectrumFunction,\n                beats: this.elapsedBeats\n            });\n\n            (this.playerState.bass || overridePause) && renderBass(this.subjects.godRays, this.bassAnalyser, {\n                sunlight: this.lights.sunlight\n            });\n\n            (this.playerState.rhythm || overridePause) && renderRhythm(this.subjects.books, this.rhythmAnalyser, {\n                spectrumFunction: this.spectrumFunction,\n                beats: this.elapsedBeats\n            });\n\n            (this.playerState.harmony || overridePause) && renderHarmony({\n                leaves: this.subjects.spiralPlantLeaves,\n                stickLeaves: this.subjects.stickLeaves,\n                stickLeavesOne: this.subjects.stickLeavesOne,\n                group: this.subjects.spiralPlantGroup,\n                box: this.subjects.spiralPlantBox\n            }, this.harmonyAnalyser, {\n                beats: this.elapsedBeats\n            });\n\n            (this.playerState.extras || overridePause) && renderAtmosphere(\n                this.subjects.stringLights,\n                this.atmosphereAnalyser,\n                {\n                    beats: this.elapsedBeats,\n                    enabled: this.playerState.extras\n                }\n            );\n\n            this.renderer.render(this.scene, this.camera);\n\n        }\n    }\n\n}","export const rgbaVertex = `\n    attribute vec4 customColor;\n    varying vec4 vColor;\n    void main() {\n        vColor = customColor;\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n        gl_Position = projectionMatrix * mvPosition;\n    }\n`\n\nexport const rgbaFragment = `\n    varying vec4 vColor;\n    void main() {\n        gl_FragColor = vColor;\n    }\n`","\nimport * as d3 from 'd3-ease';\n\nconst VOL_COEF = .0003;\nconst MAX_OPACITY = .15;\nconst MIN_OPACITY = .025;\nconst MAX_SUN = .7;\nconst MIN_SUN = .25\n\nexport const renderBass = (subjects, analyser, extras) => {\n\n    let volume = 0;\n\n    analyser.getFrequencyData();\n\n    for (let i = 0, n = analyser.frequencyBinCount; i < n; i++) {\n\n        volume += analyser.fftData[i];\n\n    }\n\n    const brightnessFactor = d3.easeQuadInOut(volume * VOL_COEF);\n\n    subjects[0].material.opacity = MIN_OPACITY + brightnessFactor * (MAX_OPACITY - MIN_OPACITY);\n    subjects[1].material.opacity = MIN_OPACITY + brightnessFactor * (MAX_OPACITY - MIN_OPACITY);\n    extras.sunlight.intensity = MIN_SUN + brightnessFactor * (MAX_SUN - MIN_SUN);\n\n}","export const renderHarmony = (subjects, analyser, extras) => {\n\n    analyser.getFrequencyData();\n\n    for (let i = 0; i < subjects.leaves.length; i++) {\n        const fIndex = analyser.binMin + Math.round((i / subjects.leaves.length) * (analyser.binMax - analyser.binMin));\n        subjects.leaves[i].material.emissiveIntensity = analyser.fftData[fIndex] / 255;\n    }\n\n    for (let i = 0; i < subjects.stickLeaves.length; i++) {\n        const fIndex = analyser.binMin + Math.round((i / subjects.stickLeaves.length) * (analyser.binMax - analyser.binMin));\n        subjects.stickLeaves[i].material.emissiveIntensity = analyser.fftData[fIndex] / 255;\n    }\n\n    for (let i = 0; i < subjects.stickLeavesOne.length; i++) {\n        const fIndex = analyser.binMin + Math.round((i / subjects.stickLeavesOne.length) * (analyser.binMax - analyser.binMin));\n        subjects.stickLeavesOne[i].material.emissiveIntensity = analyser.fftData[fIndex] / 255;\n    }\n\n}","// libs\nimport * as THREE from 'three';\nimport { SceneManager } from '../../SceneManager';\nimport FirstPersonControls from '../../controls/FirstPersonControls';\nimport { swamp } from '../../models/assetIndex';\n\n// rendering\n\n// shaders\n\nexport class Swamp extends SceneManager {\n\n    constructor(canvas, analysers, callback, extras) {\n\n        super(canvas);\n\n        this.DPRMax = 5;\n        this.songId = 'swamp';\n\n        this.fovAdjust = true;\n        this.fpcControl = true;\n\n        this.renderList = ['swamp'];\n\n        Promise.all([\n            super.init(),\n            this.loadModels(this.renderList)\n        ]).then(() => {\n            callback();\n            this.applySceneSettings();\n            super.animate();\n        }).catch((err) => {\n            console.log(err);\n        });\n\n    }\n\n    applySceneSettings() {\n\n        // this.renderer.shadowMap.enabled = false;\n        // this.renderer.shadowMap.type = THREE.PCFSoftShadowMap; // default THREE.PCFShadowMap\n\n        this.renderer.outputEncoding = THREE.sRGBEncoding;\n        this.renderer.physicallyCorrectLights = true;\n\n        this.renderer.setClearColor(0x000000, 0.0);\n\n        // this.camera.position.set(-36.792147432025736, 12.295984744079584, 19.50565058881036);\n        // this.camera.lookAt(46.69487932551039, 2.382592629313793, -34.638979984916375);\n        // this.camera.fov = this.getNewFov(window.innerWidth / window.innerHeight);\n        // this.camera.updateProjectionMatrix();\n\n        this.onWindowResize()\n\n    }\n\n    getNewFov(aspectRatio) {\n        const fovMin = 25;\n        const fovMax = 50;\n        const aspectMin = 0.5;\n        const aspectMax = 3;\n        const aspectAdj = Math.max(aspectMin, Math.min(aspectRatio, aspectMax));\n        const newFov = fovMax - (fovMax - fovMin) * (aspectAdj - aspectMin) / (aspectMax - aspectMin);\n        return newFov;\n    }\n\n    initControls() {\n\n        const controls = {};\n\n        if (this.fpcControl) {\n            controls.fpc = new FirstPersonControls(this.camera);\n        }\n\n        return controls;\n\n    }\n\n    initScene() {\n\n        const scene = new THREE.Scene();\n        return scene;\n\n    }\n\n    initLights() {\n\n        // return lights;\n\n    }\n\n    loadModels(modelList) {\n\n        return new Promise((resolve, reject) => {\n\n            const loadPromiseArray = [];\n\n            // house and god rays\n            modelList.indexOf('swamp') !== -1 && loadPromiseArray.push(\n                new Promise((resolve, reject) => {\n\n                    this.loadModel({ name: 'swamp', index: swamp, format: process.env.REACT_APP_ASSET_FORMAT }).then((model) => {\n                        console.log(model);\n                        this.scene.add(model.scene);\n                        this.camera = model.cameras[0];\n                        resolve();\n                    });\n\n                })\n            );\n\n            Promise.all(loadPromiseArray).then(() => {\n                resolve();\n            }).catch((err) => {\n                reject(`Error loading models: ${err}`);\n            });\n\n        })\n\n    }\n\n    render(overridePause) {\n        this.controls.fpc.update(this.clock.getDelta());\n        this.renderer.render(this.scene, this.camera);\n    }\n\n}","// libs\nimport React from 'react';\n\nexport const Canvas = (props) => {\n\n    const canvasRef = React.useRef(null);\n\n    React.useEffect(() => {\n\n        const pixelRatio = typeof document !== 'undefined' ? window.devicePixelRatio : 1;\n\n        const setCanvasSize = () => {\n\n            // resize to device pixel ratio\n            canvasRef.current.clientWidth !== 0 && (canvasRef.current.width = pixelRatio * canvasRef.current.clientWidth);\n\n            // height depends on props.makeSquare\n            if (props.makeSquare) {\n                canvasRef.current.clientHeight !== 0 && (canvasRef.current.height = pixelRatio * canvasRef.current.clientWidth);\n            } else {\n                canvasRef.current.clientHeight !== 0 && (canvasRef.current.height = pixelRatio * canvasRef.current.clientHeight);\n            }\n\n            // trigger the resize callback\n            if (props.resize !== false && props.onResize !== undefined) {\n                props.onResize(canvasRef.current);\n            }\n\n        }\n\n        // set initial dimensions\n        setCanvasSize();\n\n        // unless explicity false, add event listener for resize\n        props.resize !== false && window.addEventListener('resize', setCanvasSize);\n\n        // trigger the onload callback\n        props.onLoad !== undefined && props.onLoad(canvasRef.current);\n\n        return () => props.resize !== false && window.removeEventListener('resize', setCanvasSize);\n\n    }, [props])\n\n    return (\n        <canvas\n            id={props.id}\n            className={props.className}\n            ref={canvasRef}\n        />\n    );\n\n}","// libs\nimport React from 'react';\nimport { CanvasCoordinates } from 'crco-utils';\n\n// components\nimport { Canvas } from '../Canvas';\n\n// styles\nimport '../../styles/components/LandingPage.scss';\n\nconst speed = .001;\n\nexport function CustomSongIcon(props) {\n\n    const canvasRef = React.useRef(null);\n    const contextRef = React.useRef();\n    const cycleRef = React.useRef(0);\n    const timeRef = React.useRef(0);\n    const animationRef = React.useRef();\n    const coordsRef = React.useRef();\n\n    const { animate, id, listen, setCustomStyles, dispatch } = props;\n\n    React.useEffect(() => {\n\n        const updateCanvas = (time, loop, reset) => {\n\n            const delta = reset ? 0 : time - timeRef.current;\n            cycleRef.current += delta * speed;\n            timeRef.current = time;\n\n            contextRef.current.clearRect(coordsRef.current.nx(-1), coordsRef.current.ny(-1), coordsRef.current.getWidth(), coordsRef.current.getHeight());\n\n            animate(\n                contextRef.current,\n                cycleRef.current,\n                coordsRef.current,\n            );\n\n            if (loop) {\n                animationRef.current = window.requestAnimationFrame((time) => updateCanvas(time, true));\n            }\n\n        }\n\n        const handleSetSelected = () => dispatch({ type: props.name });\n        const handleUnsetSelected = () => dispatch({ type: null });\n\n        const setStyles = () => {\n            contextRef.current.lineWidth = coordsRef.current.getWidth() / 128;\n            contextRef.current.strokeStyle = '#f6f2d5';\n            contextRef.current.fillStyle = '#f6f2d5';\n            setCustomStyles && setCustomStyles(contextRef.current);\n        }\n\n        const beginAnimation = () => {\n            setStyles();\n            animationRef.current = window.requestAnimationFrame((time) => updateCanvas(time, true, true));\n        }\n\n        const stopAnimation = () => {\n            window.cancelAnimationFrame(animationRef.current);\n        }\n\n        if (listen) {\n\n            // add listeners\n            canvasRef.current.addEventListener('touchstart', beginAnimation);\n            canvasRef.current.addEventListener('touchstart', handleSetSelected);\n            canvasRef.current.addEventListener('touchstart', stopAnimation);\n            canvasRef.current.addEventListener('touchstart', handleUnsetSelected);\n\n            canvasRef.current.addEventListener('mouseover', beginAnimation);\n            canvasRef.current.addEventListener('mouseover', handleSetSelected);\n            canvasRef.current.addEventListener('mouseout', stopAnimation);\n            canvasRef.current.addEventListener('mouseout', handleUnsetSelected);\n\n        }\n\n        // set up canvas/coords and initialize drawing\n        coordsRef.current = new CanvasCoordinates({ canvas: canvasRef.current, padding: .02 });;\n        contextRef.current = canvasRef.current.getContext('2d');\n        setStyles();\n        updateCanvas(0, false, false);\n\n        if (!listen) {\n            beginAnimation();\n        }\n\n        // cleanup\n        return () => {\n            stopAnimation();\n            if (listen) {\n                canvasRef.current.removeEventListener('touchstart', beginAnimation);\n                canvasRef.current.removeEventListener('touchstart', handleSetSelected);\n                canvasRef.current.removeEventListener('touchstart', stopAnimation);\n                canvasRef.current.removeEventListener('touchstart', handleUnsetSelected);\n\n                canvasRef.current.removeEventListener('mouseover', beginAnimation);\n                canvasRef.current.removeEventListener('mouseover', handleSetSelected);\n                canvasRef.current.removeEventListener('mouseout', stopAnimation);\n                canvasRef.current.removeEventListener('mouseout', handleUnsetSelected);\n            }\n        }\n\n    }, [dispatch, props.name, animate, listen, setCustomStyles]);\n\n    return React.useMemo(() => {\n        return <Canvas\n            id={id}\n            className=\"custom-song-icon\"\n            onLoad={(canvas) => canvasRef.current = canvas}\n            resize={false}\n        />\n    }, [id]);\n\n}","// libs\nimport React from 'react';\nimport { boundedSin, TAU } from 'crco-utils';\n\n// components\nimport { CustomSongIcon } from './CustomSongIcon';\n\n// styles\nimport '../../styles/components/CustomSongIcons.scss';\n\nconst period = 2;\nconst bsin = boundedSin(period, 0, 1, 0);\nconst gridSize = 16;\n\nconst animateLoading = (context, cycle, coords) => {\n    const r = coords.getHeight() / 64;\n\n    context.fillStyle = '#f6f2d5';\n    context.globalCompositeOperation = 'source-over'\n\n    for (let i = 0; i < gridSize; i++) {\n        for (let j = 0; j < gridSize; j++) {\n\n            const p = [-1 + 2 * (i + 0.5) / gridSize, -1 + 2 * (j + 0.5) / gridSize];\n\n            context.beginPath();\n            context.arc(\n                coords.nx(p[0]),\n                coords.ny(p[1]),\n                bsin(cycle - 1.75 * (i / gridSize) * (j / gridSize) * period) * r,\n                0, TAU\n            );\n            context.fill();\n        }\n    }\n\n    context.globalCompositeOperation = 'destination-atop'\n    context.beginPath();\n    context.fillStyle = '#1f262f';\n    context.arc(coords.nx(0), coords.ny(0), coords.getHeight() / 2.5, 0, TAU);\n    context.fill();\n\n    context.globalCompositeOperation = 'source-over'\n    context.stroke();\n\n}\n\nconst animateReady = (context, cycle, coords) => {\n    context.fillStyle = '#1f262f';\n    context.globalCompositeOperation = 'source-over'\n    context.beginPath();\n    context.arc(coords.nx(0), coords.ny(0), coords.getHeight() / 2.5, 0, TAU);\n    context.fill();\n    context.stroke();\n}\n\nexport function LoadingIcon(props) {\n    return (\n        <div id='loading-button-wrapper'>\n            {!props.isLoading && <button\n                id='loading-button'\n                disabled={props.isLoading}\n                style={{\n                    cursor: props.isLoading ? 'none' : 'pointer',\n                }}\n            > <h2>Enter</h2> </button>}\n            <CustomSongIcon\n                name={props.name}\n                id=\"custom-loading-icon\"\n                animate={props.isLoading ? animateLoading : animateReady}\n            />\n        </div>\n    );\n}","// libs\nimport React from 'react';\n\n// components\nimport { LoadingIcon } from '../components/custom-song-icons/LoadingIcon';\n\n// contexts\nimport { MusicPlayerContext } from '../contexts/contexts';\n\n// styles\nimport '../styles/components/LandingPage.scss';\n\nexport const LoadingScreen = () => {\n\n    const { isLoading } = React.useContext(MusicPlayerContext);\n\n    return (\n        <div id='loading-screen' className='front-most off-black fullscreen'>\n            <div className='landing-page-header'>\n                <div className='flex-row'><h1 id='landing-page-soundscape-title'>Soundscape</h1></div>\n                <div className='flex-row'><span>Loading...</span></div>\n                <LoadingIcon\n                    isLoading={isLoading}\n                />\n            </div>\n        </div>\n    )\n}","// libs\nimport React from 'react';\n\n// scenes\nimport { Moonrise } from '../viz/scenes/moonrise/Moonrise';\nimport { Mornings } from '../viz/scenes/mornings/Mornings';\nimport { Swamp } from '../viz/scenes/swamp/Swamp';\n\n// components\nimport { LoadingScreen } from '../components/LoadingScreen';\n\n// context\nimport { SongContext } from '../contexts/contexts';\nimport { TestingContext } from '../contexts/contexts';\nimport { MusicPlayerContext } from '../contexts/contexts';\nimport { ThemeContext } from '../contexts/contexts';\n\n// styles\nimport '../styles/components/CanvasViz.scss';\n\nexport const CanvasViz = () => {\n\n    const { spectrumFunction } = React.useContext(ThemeContext);\n    const { id, groups, bpm } = React.useContext(SongContext);\n    const { players, analysers, dispatch, isLoading, pauseVisuals } = React.useContext(MusicPlayerContext);\n    const { flags } = React.useContext(TestingContext);\n\n    const canvasRef = React.useRef(null);\n    const sceneRef = React.useRef(null);\n\n    React.useEffect(() => {\n        sceneRef.current && (sceneRef.current.pauseVisuals = pauseVisuals);\n    }, [pauseVisuals])\n\n    // tell the scene which players are active so it can render elements selectively\n    React.useEffect(() => {\n        if (sceneRef.current) {\n            const playerState = {}\n            groups.forEach((g) => {\n                playerState[g.name] = players.filter((p) => p.groupName === g.name && p.playerState === 'active').length > 0;\n            });\n            sceneRef.current.playerState = playerState;\n        }\n    }, [groups, players])\n\n    React.useEffect(() => {\n        if (groups.length === analysers.length) {\n\n            let newScene;\n\n            switch (id) {\n                case 'moonrise':\n                    if (flags.showVisuals) {\n                        newScene = new Moonrise(\n                            canvasRef.current,\n                            analysers,\n                            () => dispatch({ type: 'setIsLoading', payload: false })\n                        );\n                        sceneRef.current = newScene;\n                    } else {\n                        dispatch({ type: 'setIsLoading', payload: false });\n                    }\n                    break;\n                case 'mornings':\n                    if (flags.showVisuals) {\n                        newScene = new Mornings(\n                            canvasRef.current,\n                            analysers,\n                            () => dispatch({ type: 'setIsLoading', payload: false }), {\n                            spectrumFunction,\n                            bpm\n                        });\n                        sceneRef.current = newScene\n                    } else {\n                        dispatch({ type: 'setIsLoading', payload: false });\n                    }\n                    break;\n                case 'swamp':\n                    if (flags.showVisuals) {\n                        newScene = new Swamp(\n                            canvasRef.current,\n                            null,\n                            () => dispatch({ type: 'setIsLoading', payload: false }), {\n                        }\n                        )\n                        sceneRef.current = newScene;\n                    }\n                    break;\n                default:\n                    throw new Error('Song not found');\n            }\n\n            if (flags.showVisuals) {\n                window.addEventListener('resize', sceneRef.current.onWindowResize);\n                window.addEventListener('orientationchange', sceneRef.current.onWindowResize);\n                window.addEventListener('fullscreenchange', sceneRef.current.onWindowResize);\n                window.visualViewport && (window.visualViewport.addEventListener('scroll', sceneRef.current.onWindowResize));\n                window.visualViewport && (window.visualViewport.addEventListener('resize', sceneRef.current.onWindowResize));\n            }\n\n            return () => {\n                if (flags.showVisuals) {\n                    newScene.stop();\n                    newScene.disposeAll(newScene.scene);\n                    window.removeEventListener('resize', sceneRef.current.onWindowResize);\n                    window.removeEventListener('orientationchange', sceneRef.current.onWindowResize);\n                    window.removeEventListener('fullscreenchange', sceneRef.current.onWindowResize);\n                    window.visualViewport && (window.visualViewport.removeEventListener('scroll', sceneRef.current.onWindowResize));\n                    window.visualViewport && (window.visualViewport.removeEventListener('resize', sceneRef.current.onWindowResize));\n                }\n            }\n\n        }\n    }, [bpm, groups, spectrumFunction, flags.showVisuals, id, analysers, dispatch]);\n\n    return (<>\n        {isLoading && <LoadingScreen />}\n        <canvas id='canvas-viz' className='fullscreen' ref={canvasRef}></canvas>\n    </>)\n\n}","// libs\nimport React from 'react';\n// import anime from 'animejs';\n\n// context\nimport { MusicPlayerContext } from '../contexts/contexts';\n\n// styles\nimport '../styles/components/EffectsPanel.scss';\n\nexport const EffectsPanel = (props) => {\n\n    const hpRef = React.useRef();\n    const lpRef = React.useRef();\n    const ambienceRef = React.useRef();\n    const effectsBackgroundModeEventRef = React.useRef();\n\n    const {\n        audioCtx,\n        dispatch,\n        randomizeEffects,\n        scheduler,\n        highpass,\n        lowpass,\n        ambience\n    } = React.useContext(MusicPlayerContext);\n\n    const [effectsBackgroundMode, setEffectsBackgroundMode] = React.useState(false);\n\n    const handleReset = React.useCallback(() => {\n\n        // reset hp\n        hpRef.current.value = 1;\n        dispatch({ type: 'setHighpass', payload: { value: 1 } })\n\n        // reset lp\n        lpRef.current.value = 100;\n        dispatch({ type: 'setLowpass', payload: { value: 100 } })\n\n        // reset spaciousness\n        ambienceRef.current.value = 1;\n        dispatch({ type: 'setAmbience', payload: { value: 1 } })\n\n    }, [dispatch]);\n\n    React.useEffect(() => handleReset(), [handleReset]);\n\n    /* Background Mode Callback */\n    const triggerRandomEffects = React.useCallback(() => {\n\n        let h, l, a;\n\n        if (highpass < 25) {\n            h = Math.random() * 2;\n        } else if (highpass > 75) {\n            h = Math.random() * -2;\n        } else {\n            h = -1 + Math.random() * 2;\n        }\n\n        if (lowpass < 25) {\n            l = Math.random() * 2;\n        } else if (lowpass > 75) {\n            l = Math.random() * -2;\n        } else {\n            l = -1 + Math.random() * 2;\n        }\n\n        if (ambience < 25) {\n            a = Math.random() * 2;\n        } else if (ambience > 75) {\n            a = Math.random() * -2;\n        } else {\n            a = -1 + Math.random() * 2;\n        }\n\n        dispatch({ type: 'setHighpass', payload: { value: highpass + h } });\n        dispatch({ type: 'setLowpass', payload: { value: lowpass + l } });\n        dispatch({ type: 'setAmbience', payload: { value: ambience + a } });\n\n        hpRef.current.value = highpass + h;\n        lpRef.current.value = lowpass + h;\n        ambienceRef.current.value = ambience + h;\n\n    }, [dispatch, highpass, lowpass, ambience]);\n\n    /* Background Mode Hook */\n    React.useEffect(() => {\n        // init event\n        if (effectsBackgroundMode && !scheduler.repeatingQueue.find((e) => e.id === effectsBackgroundModeEventRef.current)) {\n            effectsBackgroundModeEventRef.current = scheduler.scheduleRepeating(\n                audioCtx.currentTime + .5,\n                1,\n                triggerRandomEffects\n            )\n            // update event\n        } else if (effectsBackgroundMode) {\n            scheduler.updateCallback(effectsBackgroundModeEventRef.current, triggerRandomEffects);\n            // stop event\n        } else if (!effectsBackgroundMode) {\n            scheduler.cancel(effectsBackgroundModeEventRef.current);\n        }\n\n    }, [effectsBackgroundMode, scheduler, audioCtx, triggerRandomEffects])\n\n    return (\n\n        <div id='effects-panel' className='flex-panel'>\n\n            <h2>Background Mode</h2>\n            <p>Automatically varies the music over time. Ideal for extended listening.</p>\n\n            <div className='flex-row slider-row'>\n                <div className='flex-col' style={{ justifyContent: 'flex-end' }}>\n                    <label className=\"switch\">\n                        <input type=\"checkbox\" onInput={(e) => {\n                            const checked = e.target.checked;\n                            dispatch({ type: 'setBackgroundMode', payload: checked })\n                        }} />\n                        <span className=\"slider round\"></span>\n                    </label>\n                </div>\n                <div className='flex-col'>\n                    <span><h3 style={{ marginLeft: '1rem' }}>Voices</h3></span>\n                </div>\n            </div>\n            {/* <div className='flex-row slider-row'>\n                <div className='flex-col'>\n                    <label className=\"switch\">\n                        <input type=\"checkbox\" onInput={(e) => {\n                            const checked = e.target.checked;\n                            setEffectsBackgroundMode(checked);\n                        }} />\n                        <span className=\"slider round\"></span>\n                    </label>\n                </div>\n                <div className='flex-col'>\n                    <span><h3 style={{ marginLeft: '1rem' }}>Effects</h3></span>\n                </div>\n            </div> */}\n\n            <h2 id='effects-controls-row'>Visuals</h2>\n            <p>Change visual settings to improve performance and save power.</p>\n\n            <div className='flex-row slider-row'>\n                <div className='flex-col' style={{ justifyContent: 'flex-end' }}>\n                    <label className=\"switch\">\n                        <input type=\"checkbox\" onInput={(e) => {\n                            const checked = e.target.checked;\n                            dispatch({ type: 'setPauseVisuals', payload: checked })\n                        }} />\n                        <span className=\"slider round\"></span>\n                    </label>\n                </div>\n                <div className='flex-col'>\n                    <span><h3 style={{ marginLeft: '1rem' }}>Pause Visuals</h3></span>\n                </div>\n            </div>\n\n            <div id='effects-controls-row' className='flex-row' style={{ justifyContent: 'space-between' }}>\n                <div className='flex-col'>\n                    <h2>Effects</h2>\n                </div>\n                <div className='flex-col'>\n                    {effectsBackgroundMode && <p className='hot-green'>background mode: on</p>}\n                </div>\n            </div>\n\n            <div className='flex-row'>\n                <button\n                    className='button-white grouped-buttons'\n                    id='effects-panel-reset'\n                    onClick={() => handleReset()}\n                >\n                    Reset\n                    </button>\n\n                <button\n                    className='button-white grouped-buttons'\n                    id='effects-panel-randomize'\n                    onClick={() => {\n\n                        const h = 1 + 99 * Math.random();\n                        const l = 1 + 99 * Math.random();\n                        const a = 1 + 99 * Math.random();\n\n                        dispatch({ type: 'setHighpass', payload: { value: h } });\n                        dispatch({ type: 'setLowpass', payload: { value: l } });\n                        dispatch({ type: 'setAmbience', payload: { value: a } });\n\n                        hpRef.current.value = h;\n                        lpRef.current.value = l;\n                        ambienceRef.current.value = a;\n\n                    }\n                    }>\n                    Randomize\n                    </button>\n            </div>\n\n            <div className='flex-row'>\n                <h3 className='slider-label'>highpass filter</h3>\n            </div>\n            <div className='flex-row'>\n                <input type=\"range\" min=\"1\" max=\"100\" disabled={randomizeEffects} id=\"hp-slider\" ref={hpRef}\n                    onInput={(e) => {\n                        dispatch({ type: 'setHighpass', payload: { value: parseInt(e.target.value) } });\n                    }}\n                ></input>\n            </div>\n            <div className='flex-row'>\n                <h3 className='slider-label'>lowpass filter</h3>\n            </div>\n            <div className='flex-row'>\n                <input type=\"range\" min=\"1\" max=\"100\" disabled={randomizeEffects} id=\"lp-slider\" ref={lpRef}\n                    onInput={(e) => {\n                        dispatch({ type: 'setLowpass', payload: { value: parseInt(e.target.value) } });\n                    }}\n                ></input>\n            </div>\n            <div className='flex-row'>\n                <h3 className='slider-label'>ambience</h3>\n            </div>\n            <div className='flex-row'>\n                <input type=\"range\" min=\"1\" max=\"100\" disabled={randomizeEffects} id=\"spaciousness-slider\" ref={ambienceRef}\n                    onInput={(e) => {\n                        dispatch({ type: 'setAmbience', payload: { value: parseInt(e.target.value) } });\n                    }}\n                ></input>\n            </div>\n\n        </div >\n    );\n}","// libs\nimport React from 'react';\n\nexport const useAnimationFrame = (render) => {\n\n    const requestRef = React.useRef();\n    const previousTimeRef = React.useRef();\n\n    React.useEffect(() => {\n\n        const animate = (time) => {\n            if (previousTimeRef.current !== undefined) {\n                const delta = time - previousTimeRef.current;\n                render({ delta, time });\n            }\n            previousTimeRef.current = time;\n            requestRef.current = window.requestAnimationFrame(animate);\n        }\n\n        requestRef.current = window.requestAnimationFrame(animate);\n        return () => window.cancelAnimationFrame(requestRef.current);\n\n    }, [render]);\n\n}","import * as d3 from 'd3-ease';\n\nexport class Analyser {\n\n    constructor(context, input, params) {\n\n        this.input = input;\n        this.context = context;\n\n        const defaults = {\n            id: null,\n            power: 13,\n            minDecibels: -130,\n            maxDecibels: 0,\n            minFrequency: 20,\n            maxFrequency: 16500,\n            smoothingTimeConstant: 0.8,\n            numBuckets: 10,\n            split: false,\n            xEasing: undefined,\n            yEasing: undefined,\n            binMethod: 'center'\n        }\n\n        Object.assign(this, { ...defaults, ...params });\n        this.fftSize = Math.pow(2, this.power);\n        this.frequencyBinCount = this.fftSize / 2;\n        this.nyquist = this.context.sampleRate / 2;\n        this.binSize = this.nyquist / this.frequencyBinCount;\n        this.adj =\n            this.binMethod === 'center' ? 0.5 :\n                this.binMethod === 'start' ? 0 :\n                    this.binMethod === 'end' ? 1 : 0.5;\n\n        // represents the first and last bin to take to stay true to frequency bounds\n        // errs on the side of preserving more data\n        this.binMin = Math.floor(this.minFrequency / this.binSize);\n        this.binMax = this.frequencyBinCount - Math.floor((this.nyquist - this.maxFrequency) / this.binSize);\n\n        // create once to optimize render loops\n        this.bucketCounts = new Array(this.numBuckets).fill(0, 0, this.numBuckets);\n        this.bucketData = new Array(this.numBuckets).fill(0, 0, this.numBuckets);\n\n        // update the min / max according to the actual calculated above\n        this.minFrequency = (this.binMin + this.adj) * this.binSize;\n        this.maxFrequency = (this.binMax + this.adj) * this.binSize;\n\n        // convert any string easing params into functions\n        if (typeof this.xEasing === 'string') {\n            switch (this.xEasing) {\n                case 'polyIn': this.xEasing = d3.easePolyIn.exponent(this.xExponent); break;\n                case 'polyOut': this.xEasing = d3.easePolyOut.exponent(this.xExponent); break;\n                case 'polyInOut': this.xEasing = d3.easePolyInOut.exponent(this.xExponent); break;\n                default: this.xEasing = (n) => n; break;\n            }\n        }\n\n        if (typeof this.yEasing === 'string') {\n            switch (this.yEasing) {\n                case 'polyIn': this.yEasing = d3.easePolyIn.exponent(this.yExponent); break;\n                case 'polyOut': this.yEasing = d3.easePolyOut.exponent(this.yExponent); break;\n                case 'polyInOut': this.yEasing = d3.easePolyInOut.exponent(this.yExponent); break;\n                default: this.yEasing = (n) => n; break;\n            }\n        }\n\n        this.createAudioNodes();\n        this.createDataStructure();\n\n    }\n\n    createAudioNodes(split = this.split) {\n\n        if (split) {\n\n            // if split === true, this.analyser is an obj with 'left' and 'right' properties\n            const splitter = this.context.createChannelSplitter(2);\n\n            // feed in the input\n            this.input.connect(splitter);\n\n            this.analyser = {};\n            this.analyser.left = this.context.createAnalyser();\n            this.analyser.right = this.context.createAnalyser();\n\n            splitter.connect(this.analyser.left, 0);\n            splitter.connect(this.analyser.right, 1);\n\n            // web audio parameters\n            this.analyser.left.fftSize = Math.pow(2, this.power);\n            this.analyser.left.minDecibels = this.minDecibels;\n            this.analyser.left.maxDecibels = this.maxDecibels;\n            this.analyser.left.smoothingTimeConstant = this.smoothingTimeConstant;\n\n            // web audio parameters\n            this.analyser.right.fftSize = Math.pow(2, this.power);\n            this.analyser.right.minDecibels = this.minDecibels;\n            this.analyser.right.maxDecibels = this.maxDecibels;\n            this.analyser.right.smoothingTimeConstant = this.smoothingTimeConstant;\n\n        } else {\n\n            // if split === false, this.analser is a single stereo analyser\n            this.analyser = this.context.createAnalyser();\n            this.analyser.fftSize = Math.pow(2, this.power);\n            this.analyser.minDecibels = this.minDecibels;\n            this.analyser.maxDecibels = this.maxDecibels;\n            this.analyser.smoothingTimeConstant = this.smoothingTimeConstant;\n\n            // feed in the input\n            this.input.connect(this.analyser);\n\n        }\n\n    }\n\n    createDataStructure(split = this.split) {\n\n        if (split) {\n\n            this.fftData = {};\n            this.timeData = {};\n            this.fftData.left = new Uint8Array(this.analyser.left.frequencyBinCount);\n            this.fftData.right = new Uint8Array(this.analyser.right.frequencyBinCount);\n            this.timeData.left = new Uint8Array(this.analyser.left.fftSize);\n            this.timeData.right = new Uint8Array(this.analyser.right.fftSize);\n\n        } else {\n\n            this.fftData = new Uint8Array(this.analyser.frequencyBinCount);\n            this.timeData = new Uint8Array(this.analyser.fftSize);\n\n        }\n\n    }\n\n    getFrequencyData(channel) {\n\n        if (channel === 'left' || channel === 'right') {\n            this.analyser[channel].getByteFrequencyData(this.fftData[channel]); // refresh in place\n            this.yEasing && this.fftData[channel].forEach((d, i, a) => a[i] = 255 * this.yEasing(d / 255)); // map in place\n        } else {\n            this.analyser.getByteFrequencyData(this.fftData); // refresh in place\n            this.yEasing && this.fftData.forEach((d, i, a) => a[i] = 255 * this.yEasing(d / 255)); // map in place\n        }\n\n    }\n\n    getFrequencyBins(channel) {\n\n        const fBins = [];\n        const data = this.getFrequencyData(channel).slice(this.binMin, this.binMax + 1);\n\n        data.forEach((d, i) => {\n            fBins.push({\n                data: d,\n                freq: (this.binMin + i + this.adj) * this.binSize\n            });\n        });\n\n        return fBins;\n\n    }\n\n    getFrequencyBuckets(channel) {\n\n        this.getFrequencyData(channel);\n\n        // reset buckets\n        this.bucketData.forEach((d, i, a) => {\n            a[i] = 0\n            this.bucketCounts[i] = 0;\n        });\n\n        for (let i = this.binMin; i <= this.binMax; i++) {\n            const n = this.xEasing ?\n                Math.floor(this.xEasing(i / (this.binMax - this.binMin + 1)) * this.numBuckets) :\n                Math.floor((i / (this.binMax - this.binMin + 1)) * this.numBuckets);\n\n            this.bucketData[n] += this.fftData[i];\n            this.bucketCounts[n] += 1;\n\n        }\n\n        this.bucketData.forEach((d, i, a) => a[i] = d / this.bucketCounts[i]);\n\n    }\n\n    getTimeData(channel) {\n\n        if (channel === 'left' || channel === 'right') {\n            this.analyser[channel].getByteTimeDomainData(this.timeData[channel]);\n            return this.timeData[channel];\n        } else {\n            this.analyser.getByteTimeDomainData(this.timeData);\n            return this.timeData;\n        }\n\n    }\n\n    reconnect(newInput) {\n        this.input.disconnect();\n        newInput.connect(this.analyser);\n    }\n\n}","// libs\nimport React from 'react';\n\n// components\nimport { Canvas } from '../components/Canvas';\n\n// hooks\nimport { useAnimationFrame } from '../hooks/useAnimationFrame';\n\n// contexts\nimport { ThemeContext } from '../contexts/contexts';\nimport { SongContext } from '../contexts/contexts';\nimport { MusicPlayerContext } from '../contexts/contexts';\n\n// other\nimport { Analyser } from '../classes/Analyser';\n\n// styles\nimport '../styles/components/FreqBands.scss';\n\nexport const FreqBands = () => {\n\n    const { audioCtx, premaster } = React.useContext(MusicPlayerContext);\n    const { spectrumFunction } = React.useContext(ThemeContext);\n    const { bpm, timeSignature } = React.useContext(SongContext);\n\n    const secondsPerBar = 60 / bpm * timeSignature;\n\n    const canvasRef = React.useRef(null);\n    const contextRef = React.useRef(null);\n    const analyserRef = React.useRef(new Analyser(\n        audioCtx,\n        premaster,\n        {\n            power: 6,\n            minDecibels: -120,\n            maxDecibels: 0,\n            smoothingTimeConstanct: 0.25\n        }))\n\n    const render = React.useCallback((canvas, context, time) => {\n\n        const radius = canvas.height / 2 - (canvas.height / analyserRef.current.frequencyBinCount);\n\n        // calculate cycle time \n        const cycleTime = (time / 1000) / (secondsPerBar * 4);\n\n        // clear previous draw\n        context.clearRect(0, 0, canvas.height, canvas.height);\n\n        // refresh fft data\n        analyserRef.current.getFrequencyData();\n\n        // map time domain data to canvas draw actions\n        analyserRef.current.fftData.forEach((d, i) => {\n\n            const vol = (d / 255);\n            const cx = canvas.width / 2 + radius * Math.cos((i / analyserRef.current.frequencyBinCount * 2 * Math.PI + (cycleTime * Math.PI * 2)));\n            const cy = canvas.height / 2 + radius * Math.sin((i / analyserRef.current.frequencyBinCount * 2 * Math.PI + (cycleTime * Math.PI * 2)));\n\n            context.beginPath();\n\n            context.fillStyle = spectrumFunction(i / analyserRef.current.frequencyBinCount);\n\n            context.globalAlphs = vol;\n\n            context.moveTo(cx, cy);\n\n            context.arc(\n                cx,\n                cy,\n                (canvas.height / analyserRef.current.frequencyBinCount) * vol,\n                0,\n                Math.PI * 2\n            );\n\n            context.fill();\n\n        });\n\n    }, [spectrumFunction, secondsPerBar]);\n\n    useAnimationFrame((t) => render(canvasRef.current, contextRef.current, t.time))\n\n    return React.useMemo(() => (\n        <div id='freq-bands'>\n            <Canvas\n                id='freq-bands-canvas'\n                onLoad={(canvas) => {\n                    canvasRef.current = canvas;\n                    contextRef.current = canvas.getContext('2d');\n                }}\n            />\n        </div>\n    ), []);\n\n}","// libs\nimport React, { useContext } from 'react';\n\n// contexts\nimport { LayoutContext } from '../../contexts/contexts';\nimport { ThemeContext } from '../../contexts/contexts';\n\n// styles\nimport '../../styles/components/MenuButtonContentWrapper.scss';\n\nexport const MenuButtonContentWrapper = (props) => {\n\n    const { vw, vh } = useContext(LayoutContext);\n    const { contentPanelColor } = useContext(ThemeContext);\n\n    return (\n        <div\n            className='menu-button-content'\n            style={{\n                visibility: !props.parentIsOpen && 'hidden',\n                background: contentPanelColor,\n                top: props.marginTop,\n                minWidth: props.minWidth,\n                maxHeight: 82 * vh,\n                maxWidth: 95 * vw,\n                padding: 4 * vh,\n            }}\n        >\n\n            {props.content}\n\n        </div>\n    );\n}","import React from 'react'\n\nimport icons from '../assets/svg/iconList.svg';\n\nimport '../styles/components/Icon.scss';\n\nexport const Icon = (props) => {\n\n    const iconRef = React.useRef(null);\n\n    if (props.handleAddIconRef) { props.handleAddIconRef(iconRef) };\n\n    return (\n        <div className={props.divClassList}>\n\n            {props.link ?\n                <a href={props.link}>\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                        className={props.svgClassList}\n                        style={props.style}\n                        id={props.name}\n                    >\n                        <use ref={iconRef} xlinkHref={`${icons}#${props.name}`} />\n                    </svg>\n                </a> :\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                    className={props.svgClassList}\n                    style={props.style}\n                    id={props.name}\n                >\n                    <use ref={iconRef} xlinkHref={`${icons}#${props.name}`} />\n                </svg>\n            }\n        </div>\n    )\n}","// libs\nimport React from 'react';\n\n// components\nimport { MenuButtonContentWrapper } from './MenuButtonContentWrapper';\nimport { Icon } from '../../components/Icon';\n\n// contexts\nimport { ThemeContext } from '../../contexts/contexts';\n\n// hooks\nimport { useOutsideClick } from '../../hooks/useOutsideClick';\n\n// styles\nimport '../../styles/components/MenuButtonChild.scss';\n\nexport const MenuButtonChild = (props) => {\n\n    const { buttonColor, openButtonColor, contentPanelColor } = React.useContext(ThemeContext);\n\n    const [isOpen, setIsOpen] = React.useState(props.autoOpen);\n\n    const nodeRef = React.useRef();\n\n    // calculate the margin needed to expand this child to its outward position\n    const marginStyle = props.parentIsOpen ? ((props.parentWidth + props.width) / 2) + props.separation + (2 * props.separation * (props.index - 1)) : 0;\n\n    useOutsideClick(nodeRef,\n        React.useCallback(() => { if (!isOpen) setIsOpen(true) }, [isOpen]),\n        React.useCallback(() => { if (isOpen) setIsOpen(false) }, [isOpen]),\n        ['menu-button-child']\n    );\n\n    return (<>\n\n        <div id='test' ref={nodeRef}>\n\n            <button\n                id='menu-button-child'\n                className='menu-button-child'\n                style={{\n                    background: isOpen ? openButtonColor : buttonColor,\n                    opacity: props.parentIsOpen ? 1 : 0,\n                    width: props.width,\n                    height: props.height,\n                    top: (props.parentHeight - props.height) / 2,\n                    left: marginStyle + (props.parentWidth - props.width) / 2,\n                    zIndex: props.zIndex\n                }}\n            >\n\n                <Icon\n                    divClassList={'icon scale-div'}\n                    svgClassList={'icon menu-button-icon icon-white'}\n                    name={props.iconName}\n                />\n\n            </button>\n\n            {/* Arrow\n            - connects button to content\n            - size matches button size\n            - uses a CSS trick to create an arrow with borders https://css-tricks.com/snippets/css/css-triangle/\n            - TODO: implement arrow directionality based on which side the content is display and how the menu opens\n            */}\n            <div\n                className='arrow'\n                style={{\n                    borderBottomColor: contentPanelColor,\n                    display: !isOpen && 'none',\n                    top: props.height + (props.parentHeight - props.height) / 2,\n                    left: marginStyle + (props.parentWidth - props.width) / 2,\n                    borderWidth: props.width / 2,\n                    borderTop: 0,\n                }}\n            />\n            <MenuButtonContentWrapper\n                content={props.content}\n                config={props.config}\n                minWidth={props.menuWidth + props.width}\n                marginTop={props.height / 2 + props.height + (props.parentHeight - props.height) / 2}\n                parentIsOpen={isOpen}\n            />\n\n        </div>\n\n    </>\n    )\n\n}","import React from 'react';\n\nexport const useOutsideClick = (nodeRef, insideCallback, outsideCallback) => {\n\n    const handleOutsideClick = React.useCallback((e) => {\n\n        if (nodeRef.current.contains(e.target)) {\n            // the click was inside of the nodeRef hierarchy\n            insideCallback && insideCallback();\n        } else {\n            // the click was outside of the nodeRef hierarchy\n            outsideCallback && outsideCallback();\n        }\n\n    }, [insideCallback, outsideCallback, nodeRef])\n\n    React.useEffect(() => {\n\n        document.addEventListener('mousedown', handleOutsideClick);\n\n        return () => {\n            document.removeEventListener('mousedown', handleOutsideClick);\n        };\n\n    }, [handleOutsideClick]);\n\n}","// libs\nimport React, { useState, useContext } from 'react';\n\n// components\nimport { MenuButtonChild } from './MenuButtonChild';\nimport { Icon } from './../Icon';\n\n// contexts\nimport { ThemeContext } from '../../contexts/contexts';\nimport { LayoutContext } from '../../contexts/contexts';\nimport { MusicPlayerContext } from '../../contexts/contexts';\n\n// styles\nimport '../../styles/components/MenuButtonParent.scss';\n\nexport const MenuButtonParent = (props) => {\n\n    const { vh } = useContext(LayoutContext);\n    const { buttonColor } = useContext(ThemeContext);\n    const { isLoading } = useContext(MusicPlayerContext);\n\n    // parent button dimensions\n    const height = 7 * vh;\n    const width = height;\n\n    // div position\n    const top = 2.5 * vh;\n    const left = top;\n\n    const childHeight = 0.7 * height;\n    const childWidth = childHeight;\n\n    const separation = childWidth;\n\n    // set state\n    const [isOpen, setIsOpen] = useState(true);\n    const numOfChildren = props.childButtonProps.length;\n\n    return (\n\n        <div\n            className='menu-button'\n            style={{\n                top,\n                left,\n                visibility: isLoading ? 'hidden' : 'visible'\n            }}\n        >\n            <button\n                className={isOpen ? `menu-button-parent menu-button-parent-open` : `menu-button-parent`}\n                style={{\n                    zIndex: numOfChildren + 1,\n                    width,\n                    height,\n                    background: buttonColor\n                }}\n                onClick={(e) => {\n                    e.preventDefault();\n                    setIsOpen(!isOpen);\n                }}\n            >\n                <Icon\n                    divClassList={`scale-div menu-button-icon icon-white ${isOpen ? 'rotate45' : ''}`}\n                    svgClassList={'icon menu-button-icon icon-white'}\n                    name='icon-plus'\n                />\n            </button>\n\n            {props.childButtonProps.map((child, index) => (\n\n                <MenuButtonChild\n\n                    // button content\n                    id={child.id}\n                    key={child.id}\n                    content={props.childButtonProps[index].content}\n\n                    // button behavior\n                    index={index + 1}\n                    parentIsOpen={isOpen}\n                    // autoOpen={child.autoOpen}\n\n                    // button appearance\n                    iconName={child.iconName}\n                    icon={child.icon}\n                    zIndex={numOfChildren - index}\n                    separation={separation}\n                    width={childWidth}\n                    height={childHeight}\n                    parentWidth={width}\n                    parentHeight={height}\n                    menuWidth={width + (childWidth + separation) * (numOfChildren - 1)}\n\n                />\n\n            ))}\n\n        </div>\n    )\n\n}","// libs\nimport React from 'react';\n\n// components\nimport { Icon } from '../../components/Icon';\n\n// styles\nimport '../../styles/components/Icon.scss';\n\nexport const SocialIcons = (props) => {\n\n    return (\n        <div id='social-icons' className={'icon-row flex-row ' + props.divClassList}>\n            <Icon\n                divClassList={'icon-row-child'}\n                svgClassList={props.svgClassList || 'icon-white'}\n                name='icon-envelope'\n                link='mailto:mark@soundscape.world'\n            />\n            <Icon\n                divClassList={'icon-row-child'}\n                svgClassList={props.svgClassList || 'icon-white'}\n                name='icon-twitter'\n                link='https://twitter.com/markracette'\n            />\n            <Icon\n                divClassList={'icon-row-child'}\n                svgClassList={props.svgClassList || 'icon-white'}\n                name='icon-instagram'\n                link='https://instagram.com/rgb.ig'\n            />\n            <Icon\n                divClassList={'icon-row-child'}\n                svgClassList={props.svgClassList || 'icon-white'}\n                name='icon-github'\n                link='https://github.com/mracette'\n            />\n        </div>\n    );\n\n}","// libs\nimport React from 'react';\n\n// styles\nimport '../../styles/components/Icon.scss';\n\nexport const SharingIcons = (props) => {\n\n    const url = \"https://soundscape.world\";\n    const tagline = \"Soundscape: the immersive music visualizer that lets you build your own beats.\";\n\n    return (\n        < div id='sharing-icons' className={'icon-row flex-row ' + props.divClassList} >\n            {<>\n                <a className='sharing-link' href={`https://twitter.com/share?url=${url};text=${tagline};via=markracette`} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img src=\"https://simplesharebuttons.com/images/somacro/twitter.png\" alt=\"Twitter\" />\n                </a>\n                <a className='sharing-link' href={`http://www.facebook.com/sharer.php?u=${url}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img src=\"https://simplesharebuttons.com/images/somacro/facebook.png\" alt=\"Facebook\" />\n                </a>\n                <a className='sharing-link' href={`http://reddit.com/submit?url=${url}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img src=\"https://simplesharebuttons.com/images/somacro/reddit.png\" alt=\"Reddit\" />\n                </a>\n                <a className='sharing-link' href={`http://pinterest.com/pin/create/link/?url=${url}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img src=\"https://simplesharebuttons.com/images/somacro/pinterest.png\" alt=\"Pinterest\" />\n                </a>\n                <a className='sharing-link' href={`https://www.tumblr.com/widgets/share/tool?canonicalUrl=${url}&title=Soundscape&caption=${tagline}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img src=\"https://simplesharebuttons.com/images/somacro/tumblr.png\" alt=\"Tumblr\" />\n                </a>\n            </>}\n        </div >\n    );\n\n}","// libs\nimport React from 'react';\n\n// components\nimport { SocialIcons } from './iconography/SocialIcons';\nimport { SharingIcons } from './iconography/SharingIcons';\n\n// context\nimport { SongContext } from '../contexts/contexts';\nimport { InfoContext } from '../contexts/contexts';\n\n// styles\nimport '../styles/components/SongInfoPanel.scss';\n\nexport const SongInfoPanel = (props) => {\n\n    const { name } = React.useContext(SongContext)\n    const { credits } = React.useContext(InfoContext);\n\n    return (\n        <div id='song-info-panel'>\n            <h2>\"{name}\"</h2>\n            {credits.map((c) => {\n                return <p key={c.type}><u>{c.type}</u>&nbsp;{c.content}</p>\n            })}\n            <h2 className='padded-row'>Share</h2>\n            {/* <a href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\" class=\"twitter-share-button\" data-text=\"Soundscape: a beautiful and relaxing music visualizer for the web.\" data-url=\"https://soundscape.world\" data-via=\"markracette\" data-show-count=\"false\">Tweet</a>\n            <div class=\"fb-share-button\" data-href=\"https://soundscape.world\" data-layout=\"button\" data-size=\"small\"><a target=\"_blank\" href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fsoundscape.world%2F&amp;src=sdkpreparse\" class=\"fb-xfbml-parse-ignore\">Share</a></div> */}\n            <SharingIcons />\n            <h2 className='padded-row'>Connect</h2>\n            <p className='flex-row'>We are seeking<span className='hot-green'>&nbsp;3D artists&nbsp;</span>to collaborate with on new content. Please get in touch if you have any leads!</p>\n            <SocialIcons\n                divClassList='info-panel-icon-row'\n                svgClassList='icon icon-white'\n            />\n        </div>\n    )\n\n}","import { solveExpEquation } from './mathUtils';\n\nexport const nextSubdivision = (audioCtx, bpm, beats) => {\n\n    const timeElapsed = audioCtx.currentTime;\n    const beatsElapsed = timeElapsed / (60 / bpm);\n    const subdivisionsElapsed = Math.floor(beatsElapsed / beats);\n    const nextSubdivision = (subdivisionsElapsed + 1) * beats * (60 / bpm);\n\n    return nextSubdivision;\n\n}\n\n// effects chain parameters\nexport const effectParams = {\n    lpFilter: {\n        minFreq: 320,\n        maxFreq: 20000,\n        minQ: 0.71,\n        maxQ: 3,\n        expFreqParams: solveExpEquation(1, 320, 100, 20000),\n        expQParams: solveExpEquation(1, 0.71, 100, 3)\n    },\n    hpFilter: {\n        minFreq: 20,\n        maxFreq: 4500,\n        minQ: 0.71,\n        maxQ: 1.5,\n        expFreqParams: solveExpEquation(1, 20, 100, 4500),\n        expQParams: solveExpEquation(1, 0.71, 100, 1.5)\n    },\n    ambience: {\n        minWet: 0,\n        maxWet: 0.55\n    }\n}\n\nexport const initGain = (audioCtx, gain) => {\n    const a = audioCtx.createGain();\n    a.gain.value = gain;\n    return a;\n}\n\nexport const initLowpass = (audioCtx) => {\n    const a = audioCtx.createBiquadFilter();\n    a.type = 'lowpass';\n    a.frequency.value = 20000;\n    a.Q.value = 0.71;\n    return a;\n}\n\nexport const initHighpass = (audioCtx) => {\n    const a = audioCtx.createBiquadFilter();\n    a.type = 'highpass';\n    a.frequency.value = 20000;\n    a.Q.value = 0.71;\n    return a;\n}","\nexport class AudioPlayerWrapper {\n\n    constructor(context, bufferSource, options) {\n\n        // bind\n        this.context = context;\n        this.bufferSource = bufferSource;\n        this.buffer = this.bufferSource.buffer;\n\n        // defaults\n        const defaults = {\n            destination: context.destination,\n            loop: true\n        }\n\n        Object.assign(this, { ...defaults, ...options });\n\n        // setup\n        this.bufferSource.loop = this.loop;\n        this.bufferSource.loopStart = 0;\n        this.bufferSource.loopEnd = bufferSource.buffer.duration;\n        this.bufferSource.connect(this.destination);\n\n    }\n\n    disconnect() {\n        this.bufferSource.disconnect();\n    }\n\n    start(time) {\n        try {\n            this.bufferSource.start(time);\n        } catch (err) {\n            this.reload();\n            this.bufferSource.start(time);\n        }\n    }\n\n    stop(time) {\n        try {\n            this.bufferSource.stop(time);\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    reload() {\n        // disconnect buffer source to allow garbage collection\n        this.disconnect();\n\n        const newSource = this.context.createBufferSource();\n        newSource.buffer = this.buffer;\n        newSource.loop = this.loop;\n        newSource.loopStart = 0;\n        newSource.loopEnd = this.buffer.duration;\n        newSource.connect(this.destination);\n        \n        this.bufferSource = newSource;\n    }\n\n}","export class Scheduler {\n\n    constructor(audioCtx) {\n\n        // bind audio context\n        this.audioCtx = audioCtx\n\n        // for scheduleOnce\n        this.queue = [];\n\n        // for scheduleRepeating\n        this.repeatingQueue = [];\n\n        // event id\n        this.eventId = 0;\n\n    }\n\n    scheduleOnce(time, name, callback) {\n\n        // increment for the next event\n        this.eventId++;\n\n        // grab the current value of the event id\n        const newEventId = this.eventId;\n\n        // create a dummy buffer to trigger the event\n        const dummyBuffer = this.audioCtx.createBuffer(1, 1, 44100);\n        const dummySource = this.audioCtx.createBufferSource();\n        dummySource.buffer = dummyBuffer;\n\n        // add to schedule queue\n        this.queue.push({\n            id: newEventId,\n            name: name || null,\n            time,\n            type: 'single',\n            source: dummySource\n        });\n\n        if (callback) {\n\n            dummySource.onended = callback;\n\n            // start buffer\n            dummySource.start(time - dummyBuffer.duration);\n\n            return newEventId;\n\n        } else {\n\n            const promise = new Promise(resolve => dummySource.onended = () => { resolve(newEventId) });\n\n            // start buffer\n            dummySource.start(time - dummyBuffer.duration);\n\n            return promise;\n\n        }\n\n    }\n\n    scheduleRepeating(time, frequency, callback) {\n\n        // increment for the next event\n        this.eventId++;\n\n        // grab the current value of the event id\n        const newEventId = this.eventId;\n\n        // create a dummy buffer to trigger the event\n        const dummyBuffer = this.audioCtx.createBuffer(1, 1, 44100);\n        const dummySource = this.audioCtx.createBufferSource();\n        dummySource.buffer = dummyBuffer;\n\n        // assign callback\n        dummySource.onended = () => {\n            callback();\n            // add the next occurence\n            const {time, frequency} = this.getEvent(newEventId);\n            this.scheduleRepeating(time + frequency, frequency, callback)\n        };\n\n        dummySource.start(\n            // ensure the start time is positive\n            Math.max(0, time - dummyBuffer.duration)\n        );\n\n        // initialize the event queue with the first event\n        this.repeatingQueue.push({\n            id: newEventId,\n            time,\n            type: 'repeating',\n            frequency,\n            source: dummySource\n        });\n\n        return newEventId;\n\n    }\n\n    updateCallback(id, callback) {\n\n        let event;\n\n        event = this.queue.find((e) => e.id === id);\n\n        if (!event) {\n            event = this.repeatingQueue.find((e) => e.id === id);\n        }\n\n        if (event) {\n            event.source.onended = callback;\n        }\n\n    }\n\n    updateQueue() {\n\n        for (let i = this.repeatingQueue.length - 1; i >= 0; i--) {\n\n            const event = this.repeatingQueue[i];\n\n            if (event.time < this.audioCtx.currentTime) {\n\n                this.repeatingQueue.splice(i, 1);\n\n                // create a dummy buffer to trigger the event\n                const dummyBuffer = this.audioCtx.createBuffer(1, 1, 44100);\n                const dummySource = this.audioCtx.createBufferSource();\n                dummySource.buffer = dummyBuffer;\n\n                // assign callback (same as previous event)\n                dummySource.onended = event.source.onended;\n\n                // start\n                dummySource.start(\n                    // ensure the start time is positive\n                    Math.max(0, event.time + event.frequency - dummyBuffer.duration)\n                );\n\n                // update the parameters and push a copy of the event to the queue\n                this.repeatingQueue.push({\n                    id: event.id,\n                    time: event.time + event.frequency,\n                    type: 'repeating',\n                    frequency: event.frequency,\n                    source: dummySource\n                });\n\n            }\n\n        }\n\n    }\n\n    getEvent(id) {\n\n        let event = this.queue.find((e) => e.id === id);\n\n        if (event) {\n            return event;\n        } else {\n            let event = this.repeatingQueue.find((e) => e.id === id);\n            if (event) {\n                return event;\n            } else {\n                return false;\n            }\n        }\n\n    }\n\n    clear() {\n\n        this.queue.forEach((event) => {\n            event.source.onended = null;\n            event.source.stop();\n        });\n\n        this.repeatingQueue.forEach((event) => {\n            event.source.onended = null;\n            event.source.stop();\n        })\n\n        this.queue = [];\n        this.repeatingQueue = [];\n\n    }\n\n    cancel(id) {\n\n        if (typeof id !== 'undefined') {\n\n            const event = this.getEvent(id);\n\n            if (event) {\n\n                event.source.onended = null;\n                event.source.stop();\n\n                this.queue = this.queue.filter((e) => e.id !== event.id);\n                this.repeatingQueue = this.repeatingQueue.filter((e) => e.id !== event.id);\n\n            }\n\n        }\n\n    }\n\n}\n\nexport default Scheduler;","// libs\nimport React from 'react';\nimport anime from 'animejs/lib/anime.es.js';\n\n// context\nimport { MusicPlayerContext } from '../../contexts/contexts';\nimport { SongContext } from '../../contexts/contexts';\nimport { TestingContext } from '../../contexts/contexts';\nimport { LayoutContext } from '../../contexts/contexts';\n\n// other\nimport { createAudioPlayer } from 'crco-utils';\nimport { nextSubdivision } from '../../utils/audioUtils';\nimport { AudioPlayerWrapper } from '../../classes/AudioPlayerWrapper';\nimport { Scheduler } from '../../classes/Scheduler';\n\n// styles\nimport '../../styles/components/Icon.scss';\nimport '../../styles/components/ToggleButton.scss';\n\nexport const ToggleButton = (props) => {\n\n    const buttonRef = React.useRef();\n    const animationTargetsRef = React.useRef();\n    const schedulerRef = React.useRef();\n\n    const { vh } = React.useContext(LayoutContext);\n    const { id, timeSignature, bpm } = React.useContext(SongContext);\n    const { audioCtx, dispatch } = React.useContext(MusicPlayerContext);\n    const { flags } = React.useContext(TestingContext);\n    const { handleUpdatePlayerOrder, handleUpdateOverrides, name, groupName, groupNode, override, length } = props;\n\n    const [playerState, setPlayerState] = React.useState('stopped');\n    const [player, setPlayer] = React.useState(null);\n\n    const quantizedStartBeats = flags.quantizeSamples ? 4 * timeSignature : 1;\n    const buttonRadius = vh ? vh * 3.5 : 0;\n    const buttonBorder = vh ? vh * 3.5 / 15 : 0;\n\n    const changePlayerState = React.useCallback((newState) => {\n\n        const runAnimation = (type, duration) => {\n\n            // clear queue\n            anime.remove(animationTargetsRef.current.circleSvg);\n            anime.remove(animationTargetsRef.current.iconPoly);\n            anime.remove(animationTargetsRef.current.iconDiv);\n            anime.remove(animationTargetsRef.current.iconDiv.children);\n            anime.remove(animationTargetsRef.current.button);\n\n            let strokeDashoffset, points, backgroundColor, rotateZ;\n\n            if (type === 'start') {\n\n                rotateZ = '-180';\n                backgroundColor = 'rgba(255, 255, 255, .3)';\n                strokeDashoffset = [0, 2 * Math.PI * (buttonRadius - buttonBorder / 2)];\n                points = [{ value: \"6.69872981 6.69872981 93.01270188 6.69872981 93.01270188 50 93.01270188 93.01270188 6.69872981 93.01270188\" }];\n\n            } else if (type === 'stop') {\n\n                rotateZ = '0';\n                backgroundColor = 'rgba(255, 255, 255, 0)';\n                strokeDashoffset = [animationTargetsRef.current.circleSvg.style.strokeDashoffset, 0];\n                points = [{ value: \"6.69872981 0 6.69872981 0 93.01270188 50 6.69872981 100 6.69872981 100\" }];\n\n            }\n\n            // run cirle animation\n            anime({\n                targets: animationTargetsRef.current.circleSvg,\n                strokeDashoffset,\n                duration,\n                easing: 'linear'\n            });\n\n            // run icon animation\n            anime({\n                targets: animationTargetsRef.current.iconPoly,\n                points,\n                duration,\n                easing: 'linear'\n            });\n\n            // run rotate animation\n            anime({\n                targets: [animationTargetsRef.current.iconDiv, animationTargetsRef.current.iconDiv.children],\n                rotateZ,\n                duration,\n                easing: 'linear'\n            });\n\n            // run button animation\n            anime({\n                targets: animationTargetsRef.current.button,\n                backgroundColor,\n                duration,\n                easing: 'easeInCubic'\n            });\n\n        }\n\n        // clicking a button on pending stop does nothing\n        if (playerState !== 'pending-stop') {\n\n            // clear future events for this toggle (necessary to stop a pending start)\n            schedulerRef.current.clear();\n\n            const initialState = newState === 'active' ? 'pending-start' : 'pending-stop';\n\n            // dispatch initial update to music player\n            dispatch({\n                type: 'updatePlayerState',\n                payload: {\n                    id: name,\n                    newState: initialState\n                }\n            });\n\n            // set local state\n            setPlayerState(initialState);\n\n            // update poly count for the group\n            handleUpdatePlayerOrder(name, initialState);\n\n            // calculate time till next loop start\n            const quantizedStartSeconds = nextSubdivision(\n                audioCtx,\n                bpm,\n                quantizedStartBeats\n            );\n\n            switch (newState) {\n                case 'active': player.start(quantizedStartSeconds); break;\n                case 'stopped': player.stop(quantizedStartSeconds); break;\n                default: break;\n            }\n\n            // schedule a status change\n            schedulerRef.current.scheduleOnce(quantizedStartSeconds).then(() => {\n\n                // update local state\n                setPlayerState(newState);\n\n                // dispatch final update to music player\n                dispatch({\n                    type: 'updatePlayerState',\n                    payload: {\n                        id: name,\n                        newState: newState\n                    }\n                });\n\n            });\n\n            // convert to millis for animations\n            const quantizedStartMillis = (quantizedStartSeconds - audioCtx.currentTime) * 1000;\n            const animationType = newState === 'stopped' ? 'stop' : 'start';\n            runAnimation(animationType, quantizedStartMillis);\n\n        }\n\n    }, [playerState, player, audioCtx, bpm, buttonBorder, buttonRadius, dispatch, quantizedStartBeats, handleUpdatePlayerOrder, name])\n\n    /* Initialize Player Hook */\n    React.useEffect(() => {\n\n        schedulerRef.current = new Scheduler(audioCtx, name);\n        const pathToAudio = require(`../../audio/${id}/${name}.mp3`);\n\n        createAudioPlayer(audioCtx, pathToAudio, {\n            offlineRendering: true,\n            renderLength: audioCtx.sampleRate * parseInt(length) * timeSignature * 60 / bpm,\n            fade: true,\n            fadeLength: .025\n        }).then((audioPlayer) => {\n\n            // create the player\n            setPlayer(new AudioPlayerWrapper(audioCtx, audioPlayer, {\n                destination: groupNode,\n                loop: true\n            }));\n\n            // send reference to music player\n            dispatch({\n                type: 'addPlayer',\n                payload: {\n                    player: {\n                        id: name,\n                        groupName: groupName,\n                        playerState,\n                        buttonRef: buttonRef.current\n                    }\n                }\n            });\n\n        });\n\n        // store the animation targets based on their relative positions in the DOM\n        animationTargetsRef.current = {\n            button: buttonRef.current,\n            circleSvg: buttonRef.current.children[0],\n            iconDiv: buttonRef.current.children[1],\n            iconSvg: buttonRef.current.children[1].children[0],\n            iconPoly: buttonRef.current.children[1].children[0].children[0],\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    /* Override Hook */\n    React.useEffect(() => {\n        if (override && (playerState === 'active' || playerState === 'pending-start')) {\n            // stop player and remove from the override list\n            changePlayerState('stopped');\n            handleUpdateOverrides(name);\n        }\n    }, [playerState, changePlayerState, handleUpdateOverrides, name, override]);\n\n    /* Cleanup Hook */\n    React.useEffect(() => {\n        if (player) {\n            return () => {\n                player.stop();\n                player.disconnect();\n            }\n        }\n    }, [player])\n\n    return (\n\n        <button\n            className='toggle-button'\n            ref={buttonRef}\n            onClick={(e) => {\n                // e.preventDefault();\n                switch (playerState) {\n                    case 'stopped': // start if stopped\n                        changePlayerState('active');\n                        break;\n                    case 'active': // stop if active\n                        changePlayerState('stopped');\n                        break;\n                    case 'pending-start': // cancel start if triggered on pending-start\n                        changePlayerState('stopped');\n                        break;\n                    case 'pending-stop': break; // do nothing if triggered on pending-stop\n                    default: break;\n                }\n            }}\n            style={{\n                cursor: 'pointer',\n                height: buttonRadius * 2,\n                width: buttonRadius * 2\n            }}\n        >\n\n            <svg\n                className='svg'\n                width={2 * buttonRadius}\n                height={2 * buttonRadius}\n                style={{\n                    strokeDashoffset: playerState === 'active' ? 2 * Math.PI * (buttonRadius - buttonBorder / 2) : 0\n                }}\n            >\n\n                <circle\n                    className='svg-circle'\n                    cx={buttonRadius}\n                    cy={buttonRadius}\n                    r={buttonRadius - buttonBorder / 2}\n                    style={{\n                        strokeWidth: buttonBorder,\n                        strokeDasharray: 2 * Math.PI * (buttonRadius - buttonBorder / 2)\n                    }}\n                />\n\n            </svg>\n\n            <div className={`scale-div-morph toggle-icon`}>\n\n                <svg\n                    viewBox=\"0 0 100 100\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                    className={`toggle-icon icon-white`}\n                >\n\n                    <polygon\n                        id='icon-play3-poly'\n                        className={`icon icon-white`}\n                        points=\"6.69872981 0 46.650635094 25 93.01270188 50 46.650635094 75 6.69872981 100\"\n                    />\n\n                </svg>\n\n            </div>\n\n        </button>\n    );\n}\n","// libs\nimport React from 'react';\n\n// components\nimport { Canvas } from '../components/Canvas';\n\n// context\nimport { ThemeContext } from '../contexts/contexts';\nimport { MusicPlayerContext } from '../contexts/contexts';\n\n// hooks\nimport { useAnimationFrame } from '../hooks/useAnimationFrame';\n\n// other\nimport { Analyser } from '../classes/Analyser';\n\n// styles\nimport '../styles/components/Oscilloscope.scss';\n\nexport const Oscilloscope = (props) => {\n\n    const { audioCtx } = React.useContext(MusicPlayerContext);\n\n    const filter = React.useRef((() => {\n        const filter = audioCtx.createBiquadFilter();\n        filter.type = 'lowshelf';\n        filter.frequency.value = 120;\n        filter.gain.value = -12;\n        props.input.connect(filter);\n        return filter;\n    })());\n\n    const canvasRef = React.useRef(null);\n    const contextRef = React.useRef(null);\n    const analyserRef = React.useRef(new Analyser(\n        audioCtx,\n        filter.current, {\n        id: `${props.name}-oscilloscope-analyser`,\n        power: 5,\n        minDecibels: -120,\n        maxDecibels: 0,\n        smoothingTimeConstant: 0\n    }));\n\n\n\n    const { spectrumFunction } = React.useContext(ThemeContext);\n\n    const render = React.useCallback((canvas, context) => {\n\n        contextRef.current.lineWidth = canvas.height / 20;\n\n        // clear previous draw\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        // get time domain data\n        const dataArray = analyserRef.current.getTimeData();\n\n        const sliceWidth = canvas.width / (dataArray.length - 1);\n\n        let x = 0;\n        let prevX, prevY\n\n\n        dataArray.forEach((d, i) => {\n\n            context.beginPath();\n\n            if (props.gradient) {\n                context.strokeStyle = spectrumFunction(props.index / props.groupCount + i / (dataArray.length * props.groupCount));\n            }\n\n            const v = d / 128.0;\n\n            const y = v * canvas.height / 2;\n\n            if (x === 0) {\n                context.moveTo(x, y);\n            } else {\n                context.moveTo(prevX, prevY);\n            }\n\n            context.lineTo(x, y);\n\n            prevX = x;\n            prevY = y;\n\n            x += sliceWidth;\n\n            context.stroke();\n\n        });\n\n    }, [props, spectrumFunction]);\n\n    useAnimationFrame(() => render(canvasRef.current, contextRef.current));\n\n    return React.useMemo(() => (\n        <div id='oscilloscope'>\n            <Canvas\n                id='oscilloscope-canvas'\n                onLoad={(canvas) => {\n                    canvasRef.current = canvas;\n                    contextRef.current = canvas.getContext('2d');\n                }}\n            />\n        </div>\n    ), []);\n\n}","// libs\nimport React from 'react';\n\n// components\nimport { ToggleButton } from './ToggleButton';\nimport { Oscilloscope } from '../Oscilloscope';\n\n// contexts\nimport { ThemeContext } from '../../contexts/contexts';\nimport { MusicPlayerContext } from '../../contexts/contexts';\n\n// other\nimport { Analyser } from '../../classes/Analyser';\nimport { loadArrayBuffer } from 'crco-utils';\nimport { initGain, initHighpass, initLowpass, effectParams } from '../../utils/audioUtils';\n\n// styles\nimport '../../styles/components/ToggleButtonGroup.scss';\nimport '../../styles/components/Oscilloscope.scss';\n\nexport const ToggleButtonGroup = (props) => {\n\n    const { groupMuteButton, groupSoloButton } = React.useContext(ThemeContext);\n    const { audioCtx, premaster, dispatch, lowpass, highpass, ambience } = React.useContext(MusicPlayerContext);\n\n    // initialize audio effects\n    const groupNodeRef = React.useRef(initGain(audioCtx, 1));\n    const effectsChainEntryRef = React.useRef(initGain(audioCtx, 1));\n    const effectsChainExitRef = React.useRef(initGain(audioCtx, 1));\n    const hpFilterRef = React.useRef(initHighpass(audioCtx));\n    const lpFilterRef = React.useRef(initLowpass(audioCtx));\n    const reverbDryRef = React.useRef(initGain(audioCtx, 1));\n    const reverbWetRef = React.useRef(initGain(audioCtx, 0));\n    const reverbRef = React.useRef(audioCtx.createConvolver());\n\n    const [solo, setSolo] = React.useState(false);\n    const [mute, setMute] = React.useState(false);\n    const [playerOrder, setPlayerOrder] = React.useState([]);\n    const [playerOverrides, setPlayerOverrides] = React.useState([]);\n\n    /* Audio effects setup */\n    React.useEffect(() => {\n\n        // load impulse response to be used in convolution reverb\n        const pathToAudio = require('../../audio/application/impulse-response.wav');\n\n        loadArrayBuffer(pathToAudio).then((arrayBuffer) => {\n            audioCtx.decodeAudioData(arrayBuffer, (audioBuffer) => {\n                reverbRef.current.buffer = audioBuffer;\n                dispatch({\n                    type: 'impulseResponse',\n                    payload: {\n                        name: 'standard',\n                        buffer: audioBuffer\n                    }\n                })\n            })\n        });\n\n        // link effects chain\n        groupNodeRef.current.connect(effectsChainEntryRef.current);\n        effectsChainEntryRef.current.connect(lpFilterRef.current);\n        lpFilterRef.current.connect(hpFilterRef.current);\n        hpFilterRef.current.connect(reverbDryRef.current);\n        hpFilterRef.current.connect(reverbWetRef.current);\n        reverbDryRef.current.connect(effectsChainExitRef.current);\n        reverbWetRef.current.connect(reverbRef.current);\n        reverbRef.current.connect(effectsChainExitRef.current);\n        effectsChainExitRef.current.connect(premaster);\n\n        const groupAnalyser = new Analyser(audioCtx, effectsChainExitRef.current, {\n            id: `${props.name}-analyser`,\n            ...props.analyserParams\n        });\n\n        dispatch({\n            type: 'addAnalyser', payload: {\n                analyser: groupAnalyser\n            }\n        });\n\n    }, [audioCtx, dispatch, props.analyserParams, props.name, premaster])\n\n    /* Effects Hooks */\n    React.useEffect(() => {\n\n        const freqParams = effectParams.hpFilter.expFreqParams;\n        const QParams = effectParams.hpFilter.expQParams;\n        hpFilterRef.current.frequency.value = freqParams.a * Math.pow(freqParams.b, highpass);\n        hpFilterRef.current.Q.value = QParams.a * Math.pow(QParams.b, highpass);\n\n    }, [highpass]);\n\n    React.useEffect(() => {\n\n        const freqParams = effectParams.lpFilter.expFreqParams;\n        const QParams = effectParams.lpFilter.expQParams;\n        lpFilterRef.current.frequency.value = freqParams.a * Math.pow(freqParams.b, lowpass);\n        lpFilterRef.current.Q.value = QParams.a * Math.pow(QParams.b, lowpass);\n\n    }, [lowpass]);\n\n    React.useEffect(() => {\n\n        const wet = effectParams.ambience.minWet +\n            (effectParams.ambience.maxWet - effectParams.ambience.minWet) *\n            (ambience - 1) / 99;\n\n        reverbDryRef.current.gain.value = 1 - wet;\n        reverbWetRef.current.gain.value = wet;\n\n    }, [ambience]);\n\n    React.useEffect(() => {\n\n        // solo overrides mute, so only mute when it's exclusive state\n        if (mute && !solo) {\n            groupNodeRef.current.gain.value = 0;\n\n            // when mute is turned off, add volume if group is not also overridden by another group's solo\n        } else if (!mute && !props.soloOverride) {\n            groupNodeRef.current.gain.value = 1;\n        }\n\n        // if solo is turned on ...\n        if (solo) {\n            // add override and turn volume on\n            props.handleAddSolo(props.name);\n            groupNodeRef.current.gain.value = 1;\n        }\n\n        if (props.soloOverride === props.name && !solo) {\n            // turn off override\n            props.handleAddSolo(false);\n            // if this group was also on mute, return the volume to that state\n            if (mute) {\n                groupNodeRef.current.gain.value = 0;\n            }\n        }\n\n    }, [mute, solo, props]);\n\n    React.useEffect(() => {\n\n        // if this group has been overriden by another solo ...\n        if (props.soloOverride && props.soloOverride !== props.name) {\n            setSolo(false);\n            groupNodeRef.current.gain.value = 0;\n        }\n\n        // if override has been undone\n        if (!props.soloOverride && !mute) {\n            groupNodeRef.current.gain.value = 1;\n        }\n\n\n    }, [props.soloOverride, mute, props.name]);\n\n    const handleUpdatePlayerOrder = React.useCallback((playerId, newState) => {\n\n        if (newState === 'pending-start') {\n\n            if (props.currentPolyphony < props.polyphony || props.polyphony === -1) {\n\n                // add this player to the end of the playerOrder list\n                setPlayerOrder(playerOrder.concat([playerId]));\n\n            } else {\n\n                // override the latest player to be added to the list, then append the new one\n                setPlayerOverrides(playerOverrides.concat(playerOrder[0]));\n                setPlayerOrder(playerOrder.slice(1).concat([playerId]));\n\n            }\n\n        } else if (newState === 'pending-stop') {\n\n            // remove the player from the playerOrder list\n            setPlayerOrder(playerOrder.filter(p => p !== playerId));\n\n        }\n\n    }, [props.currentPolyphony, props.polyphony, playerOrder, playerOverrides]);\n\n    const handleUpdateOverrides = React.useCallback((playerId) => {\n\n        setPlayerOverrides(playerOverrides.filter(p => p !== playerId));\n\n    }, [playerOverrides]);\n\n    return (\n        <div className='toggle-button-group flex-col'>\n\n            <div className='flex-row'>\n\n                <h3>{props.name} ({props.currentPolyphony} / {\n                    props.polyphony === -1 ? props.voices.length : props.polyphony\n                })</h3>\n\n                <Oscilloscope\n                    input={effectsChainExitRef.current}\n                    index={props.index}\n                    groupCount={props.groupCount}\n                    gradient={true}\n                    name={props.name}\n                />\n\n                <button\n                    className='solo-button'\n                    style={solo ? {\n                        background: groupSoloButton\n                    } : undefined}\n                    onClick={() => setSolo(!solo)}\n                >S</button>\n\n                <button\n                    className='mute-button'\n                    style={mute ? {\n                        background: groupMuteButton\n                    } : undefined}\n                    onClick={() => setMute(!mute)}\n                >M</button>\n\n            </div>\n\n            <div className='toggle-buttons flex-row'>\n\n                {props.voices.map((voice) => (\n                    <ToggleButton\n                        key={voice.name}\n                        name={voice.name}\n                        groupName={props.name}\n                        length={voice.length}\n                        quantizeLength={voice.quantizeLength}\n                        handleUpdatePlayerOrder={handleUpdatePlayerOrder}\n                        handleUpdateOverrides={handleUpdateOverrides}\n                        override={playerOverrides.indexOf(voice.name) !== -1}\n                        groupNode={groupNodeRef.current}\n                    />\n                ))}\n\n            </div>\n\n        </div>\n    );\n}","// libs\nimport React from 'react';\n\n// components\nimport { ToggleButtonGroup } from './ToggleButtonGroup';\n\n// contexts\nimport { ThemeContext } from '../../contexts/contexts';\nimport { MusicPlayerContext } from '../../contexts/contexts';\nimport { SongContext } from '../../contexts/contexts';\n\n// styles\nimport '../../styles/components/ToggleButtonPanel.scss';\n\nexport const ToggleButtonPanel = (props) => {\n\n    const {\n        panelMuteButton,\n    } = React.useContext(ThemeContext);\n\n    const { dispatch, mute, backgroundMode } = React.useContext(MusicPlayerContext);\n\n    const { groups } = React.useContext(SongContext);\n\n    const [soloOverride, setSoloOverride] = React.useState(false);\n\n    const handleAddSolo = React.useCallback((value) => {\n        setSoloOverride(value);\n    }, []);\n\n    return (\n\n        <div\n            id='toggle-button-panel'\n            className='flex-panel'\n        >\n\n            <div className='flex-row' style={{ justifyContent: 'space-between' }}>\n                <div className='flex-col'>\n                    <h2>Voices</h2>\n                </div>\n                <div className='flex-col'>\n                    {backgroundMode && <p className='hot-green'>background mode: on</p>}\n                </div>\n            </div>\n\n            <div className='flex-row'>\n\n                <button\n                    className='button-white grouped-buttons'\n                    id='toggle-button-panel-reset'\n                    onClick={props.handleReset}\n                >\n                    Reset\n                    </button>\n\n                <button\n                    id='toggle-button-panel-randomize'\n                    className='button-white grouped-buttons'\n                    onClick={props.handleRandomize}\n                >\n                    Randomize\n                    </button>\n\n                {/* <button\n                    id='toggle-button-panel-randomize'\n                    className='button-white grouped-buttons'\n                    style={randomize ? {\n                        background: panelRandomizeButton\n                    } : undefined}\n                    onClick={() => randomize ? dispatch({ type: 'stopRandomize' }) : dispatch({ type: 'startRandomize' })}\n                >\n                    Background Mode\n                    </button> */}\n\n                <button\n                    id='toggle-button-panel-mute'\n                    className='button-white grouped-buttons'\n                    style={mute ? {\n                        background: panelMuteButton\n                    } : undefined}\n                    onClick={() => mute ? dispatch({ type: 'stopMute' }) : dispatch({ type: 'startMute' })}\n                >\n                    Mute\n                    </button>\n\n            </div>\n\n            {groups.map((group, index) => (\n                <ToggleButtonGroup\n                    index={index}\n                    handleAddSolo={handleAddSolo}\n                    soloOverride={soloOverride}\n                    key={group.name}\n                    name={group.name}\n                    groupCount={groups.length}\n                    currentPolyphony={props.players.filter((p) => (\n                        p.groupName === group.name && (\n                            p.playerState === 'active' || p.playerState === 'pending-start'\n                        ))).length}\n                    polyphony={group.polyphony}\n                    voices={group.voices}\n                    analyserParams={group.analyser}\n                />\n            ))}\n\n        </div>\n    );\n}","// libs\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n// styles\nimport '../styles/components/MenuButtonContentWrapper.scss';\n\nexport const HomePanel = (props) => {\n\n    return (\n\n        <div id='home-panel' className='flex-panel'>\n\n            <h2>Return Home?</h2>\n            <p>This will stop your current session.</p>\n            <div className='flex-row'>\n                <Link to=\"/\">\n                    <button style={{ width: '20rem' }} className=\"grouped-buttons button-white\">Proceed</button>\n                </Link>\n            </div>\n\n        </div >\n    );\n}","export const MusicPlayerReducer = (state, action) => {\n    switch (action.type) {\n        case 'setIsLoading':\n            return {\n                ...state,\n                isLoading: action.payload\n            }\n        case 'startBackgroundMode':\n            return {\n                ...state,\n                backgroundMode: true\n            };\n        case 'stopBackgroundMode':\n            return {\n                ...state,\n                backgroundMode: false\n            };\n        case 'setBackgroundMode':\n            return {\n                ...state,\n                backgroundMode: action.payload\n            };\n        case 'addPlayer':\n            if (state.players.find(p => p.id === action.payload.player.id)) {\n                return state;\n            } else {\n                return {\n                    ...state,\n                    players: [...state.players, action.payload.player]\n                };\n            }\n        case 'addAnalyser':\n            if (state.analysers.find(a => a.id === action.payload.analyser.id)) {\n                return state;\n            } else {\n                return {\n                    ...state,\n                    analysers: [...state.analysers, action.payload.analyser]\n                };\n            }\n        case 'updatePlayerState':\n            return {\n                ...state,\n                players: [\n                    ...state.players.filter((p) => p.id !== action.payload.id),\n                    { ...state.players.find((p) => p.id === action.payload.id), playerState: action.payload.newState }\n                ]\n            };\n        case 'startMute':\n            return {\n                ...state,\n                mute: true\n            };\n        case 'stopMute':\n            return {\n                ...state,\n                mute: false\n            };\n        case 'addImpulseResponse':\n            return {\n                ...state,\n                impulseResponses: [\n                    ...state.impulseResponses,\n                    action.payload.impulseResponse\n                ]\n            };\n        case 'incrementHighpass':\n            return {\n                ...state,\n                highpass: state.highpass + action.payload.value\n            };\n        case 'incrementLowpass':\n            return {\n                ...state,\n                lowpass: state.lowpass + action.payload.value\n            };\n        case 'incrementAmbience':\n            return {\n                ...state,\n                ambience: state.ambience + action.payload.value\n            };\n        case 'setHighpass':\n            return {\n                ...state,\n                highpass: action.payload.value\n            }\n        case 'setLowpass':\n            return {\n                ...state,\n                lowpass: action.payload.value\n            }\n        case 'setAmbience':\n            return {\n                ...state,\n                ambience: action.payload.value\n            }\n        case 'setPauseVisuals':\n            return {\n                ...state,\n                pauseVisuals: action.payload\n            }\n        default: return state;\n    }\n}","// libs\nimport React from 'react';\n\n// components\nimport { CanvasViz } from './CanvasViz';\nimport { EffectsPanel } from './EffectsPanel';\nimport { FreqBands } from './FreqBands';\nimport { MenuButtonParent } from './menu-button/MenuButtonParent';\nimport { SongInfoPanel } from './SongInfoPanel';\nimport { ToggleButtonPanel } from './toggle-button/ToggleButtonPanel';\nimport { HomePanel } from './HomePanel';\nimport { AudioPlayerWrapper } from '../classes/AudioPlayerWrapper';\n\n// context\nimport { MusicPlayerContext } from '../contexts/contexts';\nimport { SongContext } from '../contexts/contexts';\nimport { TestingContext } from '../contexts/contexts';\n\n// reducers\nimport { MusicPlayerReducer } from '../reducers/MusicPlayerReducer';\n\n// other\nimport { createAudioPlayer } from 'crco-utils';\n\n// styles\nimport '../styles/components/MusicPlayer.scss';\n\nexport const MusicPlayer = (props) => {\n\n    const { flags } = React.useContext(TestingContext);\n\n    const {\n        id,\n        timeSignature,\n        bpm,\n        groups,\n        ambientTrack,\n        ambientTrackLength,\n    } = React.useContext(SongContext);\n\n    const [state, dispatch] = React.useReducer(MusicPlayerReducer, {\n        audioCtx: props.audioCtx,\n        scheduler: props.scheduler,\n        premaster: props.premaster,\n        isLoading: true,\n        backgroundMode: false,\n        randomizeEffects: false,\n        pauseVisuals: false,\n        mute: false,\n        players: [],\n        analysers: [],\n        highpass: 1,\n        lowpass: 100,\n        ambience: 1\n    });\n\n    const backgroundModeEventRef = React.useRef(null);\n\n    /* Randomize Callback */\n    const handleRandomize = React.useCallback(() => {\n\n        const voicesToEnable = [];\n\n        groups.forEach((g) => {\n\n            // get the effective poly; the max number of voices to enable\n            const ePoly = g.polyphony === -1 ? g.voices.length : g.polyphony;\n\n            // ensures 1 voice from each group is enabled\n            const count = Math.ceil(Math.random() * ePoly);\n\n            // keep track of how many are enabled in each group\n            const groupCount = []\n\n            while (groupCount.length < count) {\n                const rand = Math.floor(Math.random() * g.voices.length);\n                const id = g.voices[rand].name;\n                if (groupCount.indexOf(id) === -1) {\n                    groupCount.push(id);\n                    voicesToEnable.push(id);\n                }\n            }\n\n        });\n\n        state.players.forEach((p) => {\n            if (voicesToEnable.indexOf(p.id) !== -1) {\n                if (p.playerState === 'stopped') {\n                    p.buttonRef.click();\n                }\n            } else {\n                if (p.playerState !== 'stopped') {\n                    p.buttonRef.click();\n                }\n            }\n        });\n\n    }, [state.players, groups]);\n\n    /* Reset Callback */\n    const handleReset = React.useCallback(() => {\n\n        // take the simple route - click the players!\n        const activePlayers = state.players.filter((p) => (p.playerState === 'active' || p.playerState === 'pending-start'));\n        activePlayers.forEach((p) => p.buttonRef.click());\n\n    }, [state.players]);\n\n    /* Background Mode Callback */\n    const triggerRandomVoice = React.useCallback(() => {\n\n        const viableOne = state.players.filter((p) => !p.playerState.includes('pending'));\n        const randomOne = Math.floor(Math.random() * viableOne.length);\n        state.players[randomOne].buttonRef.click();\n\n        // trigger an additional voice when less than 1/2 are active\n        if (viableOne.length >= state.players.length) {\n            const viableTwo = viableOne.filter((p, i) => i !== randomOne && p.groupName !== randomOne.groupName);\n            const randomTwo = Math.floor(Math.random() * viableTwo.length);\n            state.players[randomTwo].buttonRef.click();\n        }\n\n    }, [state.players]);\n\n    /* Ambient Track Hook */\n    React.useEffect(() => {\n\n        let ambientPlayer;\n\n        if (flags.playAmbientTrack && ambientTrack) {\n\n            const pathToAudio = require(`../audio/${id}/ambient-track.mp3`);\n\n            createAudioPlayer(state.audioCtx, pathToAudio, {\n                offlineRendering: true,\n                renderLength: state.sampleRate * parseInt(ambientTrackLength) * timeSignature * 60 / bpm,\n                fade: true,\n                fadeLength: 0.01\n            }).then((audioPlayer) => {\n\n                ambientPlayer = new AudioPlayerWrapper(state.audioCtx, audioPlayer, {\n                    destination: state.premaster,\n                    loop: true\n                });\n\n                // should be safe to resume and take the init time here (after user gesture)\n                state.audioCtx.resume();\n                ambientPlayer.start();\n\n            });\n\n        }\n\n        return () => {\n            state.scheduler.clear();\n            state.audioCtx.suspend();\n            flags.playAmbientTrack && ambientPlayer.stop();\n        };\n\n    }, [bpm, id, flags.playAmbientTrack, ambientTrack, ambientTrackLength, timeSignature, state.scheduler, state.audioCtx, state.premaster, state.sampleRate]);\n\n    /* Background Mode Hook */\n    React.useEffect(() => {\n        // init event\n        if (state.backgroundMode && !state.scheduler.repeatingQueue.find((e) => e.id === backgroundModeEventRef.current)) {\n            backgroundModeEventRef.current = state.scheduler.scheduleRepeating(\n                state.audioCtx.currentTime + (60 / bpm),\n                32 * 60 / bpm,\n                triggerRandomVoice\n            )\n            // update event\n        } else if (state.backgroundMode) {\n            state.scheduler.updateCallback(backgroundModeEventRef.current, triggerRandomVoice);\n            // stop event\n        } else if (!state.backgroundMode) {\n            state.scheduler.cancel(backgroundModeEventRef.current);\n        }\n\n    }, [bpm, state.backgroundMode, triggerRandomVoice, state.audioCtx, state.scheduler]);\n\n    /* Mute Hook */\n    React.useEffect(() => {\n\n        const startMute = () => {\n            state.premaster.gain.value = 0;\n        }\n\n        const stopMute = () => {\n            state.premaster.gain.value = 1;\n        }\n\n        if (state.mute) {\n            startMute();\n        } else {\n            stopMute();\n        }\n\n    }, [state.mute, state.premaster]);\n\n    return (\n\n        <MusicPlayerContext.Provider value={{\n            ...state,\n            dispatch\n        }}>\n\n            <FreqBands />\n\n            <MenuButtonParent\n                name='Menu'\n                direction='right'\n                separation='6rem'\n                parentSize='5rem'\n                childButtonProps={[{\n                    id: 'home',\n                    iconName: 'icon-home',\n                    content:\n                        React.useMemo(() => <HomePanel />, [])\n                }, {\n                    autoOpen: true,\n                    id: 'toggles',\n                    iconName: 'icon-music',\n                    content:\n                        React.useMemo(() => <ToggleButtonPanel\n                            handleRandomize={handleRandomize}\n                            handleReset={handleReset}\n                            players={state.players}\n                        />, [handleRandomize, handleReset, state.players])\n                }, {\n                    id: 'effects',\n                    iconName: 'icon-equalizer',\n                    content: React.useMemo(() => <EffectsPanel\n                        impulseResponse={state.impulseResponse}\n                        dispatch={dispatch}\n                    />, [state.impulseResponse, dispatch])\n                }, {\n                    id: 'song-info',\n                    iconName: 'icon-info',\n                    content:\n                        React.useMemo(() => <SongInfoPanel\n                        />, [])\n                }]}\n            />\n\n            <CanvasViz />\n\n        </MusicPlayerContext.Provider>\n    );\n\n}\n","// libs\nimport React from 'react';\nimport { TAU, rotatePoint } from 'crco-utils';\n\n// components\nimport { CustomSongIcon } from './CustomSongIcon';\n\n// styles\nimport '../../styles/components/LandingPage.scss';\n\nconst animate = (context, cycle, coords) => {\n    for (let i = 0; i < 5; i++) {\n        context.beginPath();\n        context.arc(\n            coords.nx(rotatePoint(.2, 0, 0, 0, cycle + TAU * i / 5).x),\n            coords.ny(rotatePoint(.2, 0, 0, 0, cycle + TAU * i / 5).y),\n            coords.getWidth() / 4,\n            0, TAU\n        );\n        context.stroke();\n    }\n}\n\nexport function MoonriseIcon(props) {\n    return <CustomSongIcon\n        dispatch={props.dispatch}\n        name={props.name}\n        id=\"custom-moonrise-icon\"\n        animate={animate}\n        listen={true}\n    />\n}","// libs\nimport React from 'react';\nimport { boundedSin } from 'crco-utils';\n\n// components\nimport { CustomSongIcon } from './CustomSongIcon';\n\n// styles\nimport '../../styles/components/LandingPage.scss';\n\nconst bsin = boundedSin(2, 0, 1, -1.5);\n\nconst animate = (context, cycle, coords) => {\n    const panelWidth = coords.getWidth() / 8;\n    const centerPoint = coords.nx(0) - panelWidth / 2;\n    for (let i = 0; i < 5; i++) {\n        const panelHeight = coords.getHeight() * (.6 - Math.abs(2 - i) * .1);\n        context.beginPath();\n        context.strokeRect(\n            centerPoint - (2 - i) * panelWidth * bsin(cycle),\n            coords.ny(-.6 + Math.abs(2 - i) * .1),\n            panelWidth,\n            panelHeight\n        );\n    }\n}\n\nexport function MorningsIcon(props) {\n    return (\n        <CustomSongIcon\n            dispatch={props.dispatch}\n            name={props.name}\n            id=\"custom-mornings-icon\"\n            animate={animate}\n            listen={true}\n        />\n    );\n}","// libs\nimport React from 'react';\nimport { rotatePoint, TAU } from 'crco-utils';\n\n// components\nimport { CustomSongIcon } from './CustomSongIcon';\n\n// styles\nimport '../../styles/components/LandingPage.scss';\n\nconst addPad = .8;\n\nconst animate = (context, cycle, coords) => {\n    const count = 3;\n    const rows = 3;\n    const rect = coords.getWidth() / 2.5;\n    for (let r = 0; r < rows; r++) {\n        for (let i = 0; i < count; i++) {\n            const x = (1 - addPad) * -1 + (1 - addPad) * 2 * (i + .5) / count;\n            const y = (1 - addPad) * -1 + (1 - addPad) * 2 * (r + .5) / rows;\n            const mod = 1 - 2 * ((i + r) % 2);\n            const rot = rotatePoint(x, y, 0, 0, 0 + mod * cycle + TAU);\n            context.beginPath();\n            context.rect(\n                coords.nx(rot.x) - rect / 2,\n                coords.ny(rot.y) - rect / 2,\n                rect,\n                rect\n            );\n            context.stroke();\n        }\n    }\n}\n\nexport function ComingSoonIcon(props) {\n    return (\n        <CustomSongIcon\n            dispatch={props.dispatch}\n            name={props.name}\n            id=\"coming-soon-icon\"\n            animate={animate}\n            listen={true}\n        />\n    );\n}","// libs\nimport React from 'react';\nimport * as d3Chromatic from 'd3-scale-chromatic';\nimport * as d3Color from 'd3-color';\nimport { ColorPalette } from 'color-curves'\n\n// components\nimport { AppRouter } from './AppRouter';\n\n// others\nimport { initGain } from '../utils/audioUtils';\nimport { Scheduler } from '../classes/Scheduler';\n\n// context\nimport { LayoutContext } from '../contexts/contexts';\nimport { TestingContext } from '../contexts/contexts';\n\nconst morningsPalette = new ColorPalette('{\"type\":\"arc\",\"overflow\":\"clamp\",\"reverse\":false,\"translation\":{\"x\":-0.125,\"y\":-0.081},\"scale\":{\"x\":1,\"y\":1},\"rotation\":0,\"angleStart\":0,\"angleEnd\":3.142,\"angleOffset\":5.781,\"radius\":0.5}', '{\"type\":\"arc\",\"overflow\":\"clamp\",\"reverse\":false,\"translation\":{\"x\":0.5,\"y\":0.5},\"scale\":{\"x\":1,\"y\":1},\"rotation\":0,\"angleStart\":0,\"angleEnd\":3.424,\"angleOffset\":0.628,\"radius\":0.25}', '{\"start\":0,\"end\":1}');// load the app config flat file\nconst morningsPaletteDiscrete = [];\nconst moonrisePaletteDiscrete = [];\n\n// instead of querying the full palettes, use a discrete, in-memory versions to save compute\nfor (let i = 0; i <= 255; i++) {\n  morningsPaletteDiscrete.push(morningsPalette.rgbValueAt(i / 255));\n  moonrisePaletteDiscrete.push(new d3Color.color(d3Chromatic.interpolateViridis(i / 255)).brighter(1.5));\n}\n\nconst appConfig = require('../app-config.json');\n\n// global behavior flags for testing\nconst flags = {\n  quantizeSamples: true,\n  showVisuals: true,\n  playAmbientTrack: true\n};\n\n// define spectrum functions here since they don't do well in json\nconst spectrumFunctions = {\n  'moonrise': (n) => moonrisePaletteDiscrete[Math.round(n * 255)],\n  'mornings': (n) => morningsPaletteDiscrete[Math.round(n * 255)],\n  'swamp': (n) => '#000000'\n};\n\n// globals\nconst audioCtx = new (window.AudioContext || window.webkitAudioContext)({ latencyHint: 'balanced' });\nconst premaster = initGain(audioCtx, 1);\npremaster.connect(audioCtx.destination);\nconst scheduler = new Scheduler(audioCtx);\n\n// inits globals vars, adds listeners, and manages some other settings\nexport const AppWrap = () => {\n\n  // run once before the dom is drawn\n  const viewportWidth = window.innerWidth;\n  const viewportHeight = window.innerHeight;\n  document.documentElement.style.setProperty('--vw', `${viewportWidth / 100}px`);\n  document.documentElement.style.setProperty('--vh', `${viewportHeight / 100}px`);\n\n  // custom vw and vh vars\n  const [vw, setvw] = React.useState(viewportWidth / 100);\n  const [vh, setvh] = React.useState(viewportHeight / 100);\n\n  // check for mobile\n  const [isMobile, setIsMobile] = React.useState(viewportWidth <= 760);\n\n  const resumeAudio = () => { audioCtx.state === 'suspended' && audioCtx.resume(); }\n\n  React.useEffect(() => {\n\n    // gets the inner height/width to act as viewport dimensions (cross-platform benefits)\n    const setViewportVars = () => {\n\n      const viewportWidth = window.innerWidth;\n      const viewportHeight = window.innerHeight;\n\n      // can be accessed in scss as vw(n), vh(n) OR in css as --vw * n, --vh * n\n      document.documentElement.style.setProperty('--vw', `${viewportWidth / 100}px`);\n      document.documentElement.style.setProperty('--vh', `${viewportHeight / 100}px`);\n\n      // can be accessed in the theme context as vw * n or wh * n\n      setvw(viewportWidth / 100);\n      setvh(viewportHeight / 100);\n      setIsMobile(viewportWidth <= 760);\n\n    }\n\n    // add resize listeners\n    window.addEventListener('resize', setViewportVars);\n    window.addEventListener('orientationchange', setViewportVars);\n    window.addEventListener('fullscreenchange', setViewportVars);\n    window.visualViewport && (window.visualViewport.addEventListener('scroll', setViewportVars));\n    window.visualViewport && (window.visualViewport.addEventListener('resize', setViewportVars));\n\n    // add listeners to unlock audio\n    document.body.addEventListener('touchstart', resumeAudio);\n    document.body.addEventListener('click', resumeAudio);\n\n    return () => {\n      window.removeEventListener('resize', setViewportVars);\n      window.removeEventListener('orientationchange', setViewportVars);\n      window.removeEventListener('fullscreenchange', setViewportVars);\n      window.visualViewport && (window.visualViewport.removeEventListener('scroll', setViewportVars));\n      window.visualViewport && (window.visualViewport.removeEventListener('resize', setViewportVars));\n      document.body.removeEventListener('touchstart', resumeAudio);\n      document.body.removeEventListener('click', resumeAudio);\n    }\n\n  }, []);\n\n  return (\n    <TestingContext.Provider value={{ flags }}>\n      <LayoutContext.Provider value={{ vw, vh, isMobile }}>\n        <AppRouter\n          appConfig={appConfig}\n          spectrumFunctions={spectrumFunctions}\n          audioCtx={audioCtx}\n          scheduler={scheduler}\n          premaster={premaster}\n        />\n      </LayoutContext.Provider>\n    </TestingContext.Provider>\n  );\n\n}","import * as THREE from 'three';\n\n/**\n * Creates a set of 'stars' using an efficient buffer geometry implementation. \n * The stars move together in orbit around a center point.\n * @module Stars\n */\n\nexport class Stars {\n    /**\n    * @param {object} scene - the THREE.js scene\n    * @param {object} center - Vector3: the center of the star field (which is a sphere)\n    * @param {number} number - the number of stars to display\n    * @param {object} params - optional parameters (see documentation)\n    */\n    constructor(scene, center, number, params) {\n\n        // required parameters\n        this.scene = scene;\n        this.center = center;\n        this.number = number;\n\n        // assign given parameters or defaults to class object\n        Object.assign(this, {\n            color: 0xffffff,\n            colorPalette: null,\n            intensityMap: [[0, 1, 1, 1]],\n            radiusSpread: 0,\n            minOrbitRadius: 500,\n            maxOrbitRadius: 1000,\n            orbitSpeed: 0.1,\n            rotateVector: new THREE.Vector3(1, 1, 1),\n        }, params);\n\n        // add THREE elements\n        this.group = new THREE.Group();\n        this.starField = this.createSpheres(this.number);\n        this.group.position.copy(this.center);\n        this.scene.add(this.group);\n    }\n\n    guassianRand() {\n        var rand = 0;\n        for (var i = 0; i < 6; i += 1) {\n            rand += Math.random();\n        }\n        return rand / 6;\n    }\n\n    normalize(x, y, z, r) {\n        const nX = r * x / Math.sqrt(x * x + y * y + z * z)\n        const nY = r * y / Math.sqrt(x * x + y * y + z * z)\n        const nZ = r * z / Math.sqrt(x * x + y * y + z * z)\n        return {\n            x: nX,\n            y: nY,\n            z: nZ\n        };\n    }\n\n    createSpheres(n) {\n\n        let geometry = new THREE.BufferGeometry();\n        let positions = [];\n        let intensities = [];\n        let color;\n        let colors = [];\n\n        for (let i = 0; i < n; i++) {\n            let randomCoords = this.normalize(\n                -1 + 2 * this.guassianRand(),\n                -1 + 2 * this.guassianRand(),\n                -1 + 2 * this.guassianRand(),\n                this.minOrbitRadius + Math.random() * (this.maxOrbitRadius - this.minOrbitRadius)\n            );\n            positions.push(randomCoords.x);\n            positions.push(randomCoords.y);\n            positions.push(randomCoords.z);\n            intensities.push(1);\n            if (this.colorPalette) {\n                color = new THREE.Color(this.colorPalette(Math.random()));\n            } else {\n                color = new THREE.Color(this.color);\n            }\n            colors.push(color.r, color.g, color.b, 1);\n        }\n\n        geometry.addAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\n        geometry.addAttribute('color', new THREE.Float32BufferAttribute(colors, 4));\n        geometry.addAttribute('intensity', new THREE.Float32BufferAttribute(intensities, 1));\n        geometry.setDrawRange(0, n);\n\n        let material = new THREE.PointsMaterial({\n            vertexColors: THREE.VertexColors,\n            transparent: true,\n            opacity: 1\n        });\n\n        let starField = new THREE.Points(geometry, material);\n\n        starField.geometry.attributes.position.needsUpdate = true;\n\n        this.group.add(starField);\n\n        return starField;\n    }\n\n    update(delta) {\n        this.group.rotateOnAxis(this.rotateVector.normalize(), (delta * this.orbitSpeed * 2 * Math.PI) / 60);\n    }\n\n    lerp(v0, v1, t) {\n        return v0 * (1 - t) + v1 * t;\n    }\n\n}","import * as THREE from 'three';\nimport { Stars } from '../../subjects/Stars';\nimport { SceneManager } from '../../SceneManager';\nimport { ColorPalette } from 'color-curves'\n\nexport class LandingPageScene extends SceneManager {\n\n    constructor(canvas) {\n        super(canvas);\n        this.DPRMax = 2.5;\n    }\n\n    initScene() {\n        const scene = new THREE.Scene();\n        scene.background = new THREE.Color('#1f262f');\n        return scene;\n    }\n\n    initCamera() {\n        const fieldOfView = 60;\n        const nearPlane = 1;\n        const farPlane = 1000;\n        const aspect = this.screenDimensions.width / this.screenDimensions.height;\n        let camera;\n        camera = new THREE.PerspectiveCamera(fieldOfView, 1, nearPlane, farPlane);\n        camera.aspect = aspect;\n        camera.position.set(0, 0, 0);\n        camera.lookAt(new THREE.Vector3(0, 1, 0));\n        camera.updateProjectionMatrix();\n        return camera;\n    }\n\n    initSubjects() {\n        const palette = new ColorPalette('{\"type\":\"arc\",\"overflow\":\"clamp\",\"reverse\":false,\"translation\":{\"x\":-0.182,\"y\":-0.138},\"scale\":{\"x\":1,\"y\":1},\"rotation\":0,\"angleStart\":2.105,\"angleEnd\":6.283,\"angleOffset\":0,\"radius\":0.5}', '{\"type\":\"linear\",\"overflow\":\"clamp\",\"reverse\":false,\"translation\":{\"x\":-0.003,\"y\":0.758},\"scale\":{\"x\":1.053,\"y\":-0.13},\"rotation\":0}', '{\"start\":0,\"end\":1}');\n        const subjects = {};\n        subjects.stars = new Stars(\n            this.scene,\n            new THREE.Vector3(0, 0, 0),\n            1600, {\n            colorPalette: (n) => palette.rgbValueAt(n),\n            minOrbitRadius: 300,\n            maxOrbitRadius: 600\n        }\n        );\n        return subjects;\n    }\n\n    render() {\n        this.subjects.stars.update(this.clock.getDelta());\n        this.renderer.render(this.scene, this.camera);\n    }\n\n}","// libs\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n// components\nimport { MoonriseIcon } from './custom-song-icons/MoonriseIcon';\nimport { MorningsIcon } from './custom-song-icons/MorningsIcon';\nimport { ComingSoonIcon } from './custom-song-icons/ComingSoonIcon';\n\n// context\nimport { LayoutContext } from '../contexts/contexts';\n\n// styles\nimport '../styles/components/LandingPage.scss';\n\n// other\nimport { LandingPageScene } from '../viz/scenes/landing/LandingPageScene';\n\nexport const landingPageReducer = (state, action) => {\n    switch (action.type) {\n        case 'moonrise':\n            return {\n                name: 'Moonrise',\n                bpm: '120',\n                key: 'G Minor'\n            };\n        case 'mornings':\n            return {\n                name: 'Mornings',\n                bpm: '92',\n                key: 'Eb Major'\n            };\n        case 'coming-soon':\n            return {\n                name: 'The future of Soundscape...',\n                bpm: null,\n                key: null\n            };\n        default:\n            return {\n                name: null,\n                bpm: null,\n                key: null\n            };\n    }\n}\n\nexport const LandingPage = () => {\n\n    const [selected, dispatch] = React.useReducer(landingPageReducer, { name: null, bpm: null, key: null });\n\n    const canvasRef = React.useRef(null);\n\n    const { isMobile } = React.useContext(LayoutContext);\n\n    React.useEffect(() => {\n\n        let scene;\n\n        if (canvasRef.current) {\n            scene = new LandingPageScene(canvasRef.current)\n            scene.init().then(() => scene.animate());\n            window.addEventListener('resize', scene.onWindowResize);\n            window.addEventListener('orientationchange', scene.onWindowResize);\n            window.addEventListener('fullscreenchange', scene.onWindowResize);\n            window.visualViewport && (window.visualViewport.addEventListener('scroll', scene.onWindowResize));\n            window.visualViewport && (window.visualViewport.addEventListener('resize', scene.onWindowResize));\n        }\n\n        return () => {\n            scene.stop();\n            scene.disposeAll(scene.scene);\n            window.removeEventListener('resize', scene.onWindowResize);\n            window.removeEventListener('orientationchange', scene.onWindowResize);\n            window.removeEventListener('fullscreenchange', scene.onWindowResize);\n            window.visualViewport && (window.visualViewport.removeEventListener('scroll', scene.onWindowResize));\n            window.visualViewport && (window.visualViewport.removeEventListener('resize', scene.onWindowResize));\n        }\n\n    }, [])\n\n    return (<>\n        <canvas\n            id='star-canvas'\n            className='fullscreen'\n            ref={canvasRef}\n        />\n        <div id='landing-page' className='fullscreen transparent'>\n            <div className='landing-page-header'>\n                <div className='flex-row'><h1 id='landing-page-soundscape-title'>Soundscape</h1></div>\n                <div className='flex-row'><span>This application uses audio.</span></div>\n                <div className='flex-row'><span>Use speakers or headphones for the best experience.</span></div>\n                <div className='flex-row'><p>\n                    {isMobile ? <span id='choose-a-song'>Choose a song to begin.</span> :\n                        (<>\n                            <span id={selected.name ? 'landing-page-song-title' : 'choose-a-song'}>{selected.name || \"Choose a song to begin.\"}</span>\n                            {selected.bpm && (<><span>&nbsp;|&nbsp;</span> <span id='landing-page-bpm'>{` ${selected.bpm} bpm`}</span></>)}\n                            {selected.key && (<><span>&nbsp;|&nbsp;</span> <span id='landing-page-key'>{selected.key}</span></>)}\n                        </>)}\n                </p></div>\n            </div>\n            <div id='song-selection-panel'>\n                <Link className='song-link' id='song-link-mornings' to=\"/play/mornings\">\n                    {isMobile && <div className='landing-page-header'>\n                        <div className='flex-row'>\n                            <span id=\"landing-page-song-title\">Mornings</span>&nbsp;|&nbsp;\n                            <span id='landing-page-bpm'>92</span>&nbsp;|&nbsp;\n                            <span id='landing-page-key'>Eb Major</span>\n                        </div>\n                    </div>}\n                    <MorningsIcon\n                        name='mornings'\n                        dispatch={dispatch}\n                    />\n                </Link>\n                <Link className='song-link' id='song-link-moonrise' to=\"/play/moonrise\">\n                    {isMobile && <div className='landing-page-header'>\n                        <div className='flex-row'>\n                            <span id=\"landing-page-song-title\">Moonrise</span>&nbsp;|&nbsp;\n                            <span id='landing-page-bpm'>120</span>&nbsp;|&nbsp;\n                            <span id='landing-page-key'>G Minor</span>\n                        </div>\n                    </div>}\n                    <MoonriseIcon\n                        name='moonrise'\n                        dispatch={dispatch}\n                    />\n                </Link>\n                <Link className='song-link' id='song-link-coming-soon' to=\"/coming-soon\">\n                    {isMobile && <div className='landing-page-header'>\n                        <div className='flex-row'>\n                            <span id=\"landing-page-song-title\">The future of Soundscape...</span>\n                        </div>\n                    </div>}\n                    <ComingSoonIcon\n                        name='coming-soon'\n                        dispatch={dispatch}\n                    />\n                </Link>\n                {/* fillers to get the botton link visible on mobile */}\n                <div className='filler'></div>\n            </div>\n        </div>\n    </>)\n}","// libs\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n// components\nimport { SocialIcons } from '../components/iconography/SocialIcons';\n\n// styles\nimport '../styles/components/LandingPage.scss';\nimport '../styles/components/ComingSoon.scss';\n\nexport const ComingSoon = () => {\n\n    return (\n        <div id='coming-soon' className='fullscreen off-black'>\n            <div className='landing-page-header'>\n                <div className='flex-row'><h1 id='landing-page-soundscape-title'>Soundscape</h1></div>\n                <div id='coming-soon-panel' className='flex-col'>\n                    <div className='flex-row'><span>Additional content is coming to Soundscape.</span></div>\n                    <div className='flex-row'><span>To stay in the loop, sign up for<span className='hot-pink'>&nbsp;email updates&nbsp;</span>below.</span></div>\n                    <div id=\"mc_embed_signup\">\n                        <form action=\"https://world.us4.list-manage.com/subscribe/post?u=4d5488d441c94ac4c98944eb9&amp;id=f3e8462184\" method=\"post\" id=\"mc-embedded-subscribe-form\" name=\"mc-embedded-subscribe-form\" className=\"validate\" target=\"_blank\" noValidate>\n                            <div id=\"mc_embed_signup_scroll\" className='flex-row'>\n                                <input type=\"email\" name=\"EMAIL\" className=\"email\" id=\"mce-EMAIL\" placeholder=\"email address\" required />\n                                <div style={{ position: 'absolute', left: '-5000px' }} aria-hidden=\"true\"><input type=\"text\" name=\"b_4d5488d441c94ac4c98944eb9_f3e8462184\" tabIndex=\"-1\" value=\"\" onChange={() => null} /></div>\n                                <div className=\"clear\"><input type=\"submit\" value=\"Subscribe\" name=\"subscribe\" id=\"mc-embedded-subscribe\" className=\"button\" /></div>\n                            </div>\n                        </form>\n                    </div>\n                    <span className='flex-row'>We are also seeking<span className='hot-pink'>&nbsp;3D artists&nbsp;</span> to collaborate with.</span>\n                    <span className='flex-row'>Please&nbsp;<a className='hot-blue' href=\"mailto:mark@soundscape.world\">get in touch</a>&nbsp;if you have any leads!</span>\n                    <SocialIcons\n                        divClassList='coming-soon-icon-row'\n                        svgClassList='icon icon-moon'\n                    />\n                </div>\n                <div>\n                    <Link to=\"/\">\n                        <button className='button-white'>Return Home</button>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}","// libs\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\n// context\nimport { ThemeContext } from '../contexts/contexts';\nimport { SongContext } from '../contexts/contexts';\nimport { InfoContext } from '../contexts/contexts';\n\n// components\nimport { MusicPlayer } from './MusicPlayer';\nimport { LandingPage } from './LandingPage';\nimport { ComingSoon } from './ComingSoon';\n\nexport const AppRouter = (props) => {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path='/' component={LandingPage} />\n                <Route exact path='/coming-soon' component={ComingSoon} />\n                <Route exact path={'/play/:songId'} render={routeProps =>\n\n                    <ThemeContext.Provider value={{\n                        // provide the song's theme context\n                        id: routeProps.match.params.songId,\n                        spectrumFunction: props.spectrumFunctions[routeProps.match.params.songId],\n                        ...props.appConfig.find((song) => {\n                            return song.id === routeProps.match.params.songId;\n                        })[\"themes\"]\n                    }}>\n\n                        <SongContext.Provider value={{\n                            // provide the song context\n                            id: routeProps.match.params.songId,\n                            ...props.appConfig.find((song) => {\n                                return song.id === routeProps.match.params.songId;\n                            })[\"audio\"]\n                        }}>\n\n                            <InfoContext.Provider value={{\n                                // provide extra information about the song\n                                id: routeProps.match.params.songId,\n                                ...props.appConfig.find((song) => {\n                                    return song.id === routeProps.match.params.songId;\n                                })[\"info\"]\n                            }}>\n\n                                <MusicPlayer\n                                    audioCtx={props.audioCtx}\n                                    scheduler={props.scheduler}\n                                    premaster={props.premaster}\n                                />\n\n                            </InfoContext.Provider>\n\n                        </SongContext.Provider>\n\n                    </ThemeContext.Provider>\n\n                } />\n                <Redirect to='/' />\n            </Switch>\n        </Router>\n    )\n}","import React from 'react';\n\nexport const WebGLUnavailable = () => {\n\n    const unsupportedType = !!window.WebGLRenderingContext ? 'graphics card' : 'browser';\n\n    return (\n        <div>\n            <p>Your {unsupportedType} does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\">WebGL</a>.</p>\n            <p>In order to access this application, you will need to use a supported device.</p>\n        </div>\n    )\n\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\n\nReactDOM.render(<App />, document.getElementById('app'));\n","// libs\nimport React from 'react';\n\n// components\nimport { AppWrap } from './AppWrap';\nimport { WebGLUnavailable } from './WebGLUnavailable';\n\n// other\nimport { WEBGL } from 'three/examples/jsm/WebGL';\n\n// styles\nimport '../styles/app.scss';\n\nexport const App = () => {\n\n  // check if webgl is available, if not, show the error page\n  if (WEBGL.isWebGLAvailable()) {\n\n    // return the application JSX\n    return (\n\n      <div id='app-container' className='fullscreen'>\n\n        <AppWrap />\n\n      </div>\n\n    );\n\n  } else {\n\n    return <WebGLUnavailable />\n\n  }\n\n}"],"sourceRoot":""}