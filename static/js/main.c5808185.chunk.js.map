{"version":3,"sources":["audio/moonrise/ambient-track.mp3","audio/mornings/ambient-track.mp3","viz/models/moonrise/lily.gltf","viz/models/moonrise/landscape.gltf","viz/models/moonrise/pine-tree.gltf","viz/models/mornings/house.glb","viz/models/mornings/table.glb","viz/models/mornings/flowers.glb","viz/models/mornings/spiral_plant.glb","viz/models/mornings/bookcase.glb","viz/models/mornings/paintings.glb","assets/svg/iconList.svg","audio sync /^/.//.*/.mp3$","audio/moonrise/atmo-crunch[8].mp3","audio/moonrise/atmo-photay[4].mp3","audio/moonrise/atmo-swirl[16].mp3","audio/moonrise/atmo-water[4].mp3","audio/moonrise/belly-percs[4].mp3","audio/moonrise/fast-hats[4].mp3","audio/moonrise/kick-snare[4].mp3","audio/moonrise/melody-bluesy[8].mp3","audio/moonrise/melody-soft[8].mp3","audio/moonrise/melody-trance[4].mp3","audio/moonrise/rhodes-arps[4].mp3","audio/moonrise/rhodes-chords[4].mp3","audio/moonrise/rhodes-sad[8].mp3","audio/moonrise/rides[4].mp3","audio/moonrise/sub-bouncey[8].mp3","audio/moonrise/sub-desc[8].mp3","audio/moonrise/sub-simple[4].mp3","audio/moonrise/sub-simple[8].mp3","audio/mornings/bass-one[8].mp3","audio/mornings/bass-three[4].mp3","audio/mornings/bass-two[4].mp3","audio/mornings/extra-jammy[8].mp3","audio/mornings/extra-pad[8].mp3","audio/mornings/extra-sweep[4].mp3","audio/mornings/harmony-one[4].mp3","audio/mornings/harmony-three[4].mp3","audio/mornings/harmony-two[4].mp3","audio/mornings/melody-one[8].mp3","audio/mornings/melody-three[4].mp3","audio/mornings/melody-two[8].mp3","audio/mornings/rhythm-drums[4].mp3","audio/mornings/rhythm-kick[8].mp3","audio/mornings/rhythm-reverse[4].mp3","audio/mornings/rhythm-tops[8].mp3","audio/application/impulse-response.wav","audio sync /^/.//.*//ambient/-track/.mp3$","contexts/contexts.js","utils/mathUtils.js","utils/crco-utils.module.js","viz/controls/FirstPersonControls.js","viz/SceneManager.js","viz/subjects/StarQuandrants.js","viz/scenes/moonrise/Moonrise.js","viz/scenes/mornings/renderRhythm.js","viz/scenes/mornings/renderMelody.js","viz/scenes/mornings/Mornings.js","viz/shaders/rgba.js","viz/scenes/mornings/renderBass.js","viz/scenes/mornings/renderHarmony.js","components/Canvas.js","components/CanvasViz.js","components/EffectsPanel.js","hooks/useAnimationFrame.js","components/FreqBands.js","components/MenuButtonContentWrapper.js","components/Icon.js","components/MenuButtonChild.js","components/MenuButtonParent.js","components/SongInfoPanel.js","utils/audioUtils.js","classes/AudioPlayerWrapper.js","classes/Scheduler.js","components/toggle-button/ToggleButton.js","components/Oscilloscope.js","classes/Analyser.js","components/toggle-button/ToggleButtonGroup.js","components/toggle-button/ToggleButtonPanel.js","reducers/MusicPlayerReducer.js","classes/AudioLooper.js","components/MusicPlayer.js","components/custom-song-icons/CustomSongIcon.js","components/custom-song-icons/MoonriseIcon.js","components/custom-song-icons/MorningsIcon.js","components/custom-song-icons/ComingSoonIcon.js","viz/subjects/Stars.js","viz/scenes/landing/LandingPageScene.js","components/LandingPage.js","components/AppRouter.js","components/AppWrap.js","components/WebGLUnavailable.js","index.js","components/App.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","LandingPageContext","React","createContext","LayoutContext","MusicPlayerContext","TestingContext","ThemeContext","SongContext","InfoContext","solveExpEquation","x0","y0","x1","y1","b","Math","pow","a","TAU","PI","clamp","n","min","max","rotatePoint","px","py","cx","cy","angle","x","cos","sin","y","regularPolygon","nSides","size","closedLoop","rotate","twoDim","nPoints","nCoords","points","Float32Array","i","CanvasCoordinates","options","baseHeight","canvas","baseWidth","defaults","nxRange","nyRange","padding","paddingX","paddingY","orientationY","assign","this","width","height","nx","ny","FirstPersonControls","object","target","THREE","enabled","movementSpeed","lookSpeed","lookVertical","autoForward","activeLook","heightLock","constrainVertical","verticalMin","verticalMax","lat","lon","phi","theta","moveForward","moveBackward","moveLeft","moveRight","lookUp","lookDown","lookLeft","lookRight","_onKeyDown","bind","onKeyDown","_onKeyUp","onKeyUp","window","addEventListener","event","keyCode","delta","yClamp","actualMoveSpeed","translateZ","translateX","position","actualLookSpeed","degToRad","mapLinear","targetPosition","z","lookAt","console","log","removeEventListener","scope","fn","apply","arguments","SceneManager","clock","screenDimensions","innerWidth","innerHeight","worldDimensions","depth","currentFrame","animate","render","onWindowResize","showStats","Promise","reject","scene","initScene","renderer","initRender","camera","initCamera","controls","initControls","subjects","initSubjects","lights","initLights","helpers","initHelpers","err","cancelAnimationFrame","obj","children","length","disposeAll","remove","geometry","dispose","material","forEach","prop","stats","begin","end","requestAnimationFrame","alpha","antialias","powerPreference","outputEncoding","DPR","devicePixelRatio","setSize","setPixelRatio","type","frustrum","aspect","f","set","updateProjectionMatrix","fpc","ambient","add","Stats","showPanel","dom","style","left","right","document","body","appendChild","gltfLoader","GLTFLoader","newWidth","newHeight","aspectRatio","fovAdjust","fov","getNewFov","StarQuandrants","levels","skyColor","params","colorPalette","center","leftGroup","rightGroup","group","createStars","count","copy","channel","level","color","positions","colors","random","push","distanceFromMoon","sqrt","lerp","r","g","addAttribute","setDrawRange","vertexColors","transparent","opacity","fog","Moonrise","analysers","players","rhythmAnalyser","find","atmosphereAnalyser","harmonyAnalyser","melodyAnalyser","bassAnalyser","palette","white","rockGrey","lightning","moonYellow","tropicalGreen","deepInk","prevMelodyVolume","currentMelodyVolume","lilyColors","dustyViolet","pansyPurple","funGreen","hibiscus","yellow","then","background","all","initLakeTrees","initLakeScene","initLakeRipples","initLakeStars","initLakeLilies","initLakeMoon","lakeShapePoints","lakeShapeVectors","lakeShape","lakeGeo","rotateX","translate","lakeMat","lakeMesh","lake","groundGeo","groundMat","groundMesh","ground","moonGuard","directionalLight","fireFlyGroup","sphereGeo","sphereMat","userData","cycle","state","fireflies","load","landscapeModel","model","rocks","name","rock","setRGB","undefined","numVertices","fftSize","moonGeo","moonMat","moonMesh","radius","moon","moonRings","moonBeams","j","moonRingGeo","moonRingMat","moonRing","k","newMoonRings","clone","translateY","rotateZ","numMoonRings","pineTreeModel","basePineTree","scenes","pineTreeGroup","xNoise","scale","rotateY","pineTrees","frequencyBinCount","polygonPoints","bandScaleLogConstants","w","exp","linToLog","baseGeoGroup","baseGeo","geo","linScale","logScale","ripples","stars","d3Chromatic","lilyModel","gltf","lowerPetal","upperPetal","sphere","lilyPad","baseLily","petalGroup","upperClone","lowerClone","lilyGroup","flowerMat","padMat","petalColor","petalMat","getObjectByName","firstPattern","secondPattern","floor","ignited","phase","measure","lilies","getFrequencyData","d","damping","atmosphereFreqDataLeft","atmosphereFreqDataRight","slice","harmonyFreqData","child","freqIndex","rawData","transformedData","avgBassVol","reduce","bassFrequencies","moonRingIndex","vertexCount","adj","rot","attributes","array","moonBeam","needsUpdate","melodyFreqData","melodyVolume","melodyCount","avgMelodyVolume","lily","data","increment","fly","flightPath","newX","newY","newZ","intensity","bSin","boundedSin","grey","Mornings","extras","plant","staticObjects","renderList","spectrumFunction","bpm","fpcControl","loadModels","applySceneSettings","mesh","matrixAutoUpdate","catch","shadowMap","TILT","OPP_RATIO","sunlight","pointOne","sunY","castShadow","shadowBias","shadowMapHeight","shadowMapWidth","shadow","top","bottom","modelList","loadPromiseArray","indexOf","godrays","materials","meshes","side","houseModel","receiveShadow","paintingsModel","tableModel","pageGeo","Array","newMesh","vertexShader","fragmentShader","rightPage","leftPage","steam","filter","c","includes","stickLeaves","stickLeavesOne","flowerModel","emissive","emissiveIntensity","spiralPlantModel","leaves","spiralPlantLeaves","books","fill","bookcaseModel","pageMat","parseInt","bookMesh","elapsedBeats","getElapsedTime","update","getDelta","analyser","leftColors","customColor","rightColors","s","beats","ceil","renderMelody","volume","freqData","brightnessFactor","d3","renderBass","getFrequencyBuckets","col","row","mod","p","renderRhythm","fIndex","binMin","round","binMax","renderHarmony","spiralPlantGroup","box","spiralPlantBox","Canvas","props","canvasRef","useRef","useEffect","pixelRatio","setCanvasSize","current","clientWidth","makeSquare","clientHeight","resize","onResize","onLoad","className","ref","CanvasViz","useContext","groups","flagShowVisuals","flags","showVisuals","sceneRef","newScene","stop","EffectsPanel","hpRef","lpRef","ambienceRef","dispatch","randomizeEffects","handleReset","useCallback","value","payload","onClick","h","l","disabled","onInput","onChange","useAnimationFrame","requestRef","previousTimeRef","time","FreqBands","secondsPerBar","timeSignature","contextRef","context","premasterAnalyser","cycleTime","clearRect","vol","beginPath","fillStyle","globalAlphs","moveTo","arc","t","useMemo","getContext","MenuButtonContentWrapper","vw","vh","contentPanelColor","display","parentIsOpen","marginTop","minWidth","maxHeight","maxWidth","content","Icon","iconRef","handleAddIconRef","divClassList","xmlns","xmlnsXlink","svgClassList","xlinkHref","icons","MenuButtonChild","autoOpen","setOpenChildIndex","index","buttonColor","useState","isOpen","setIsOpen","openChildIndex","marginStyle","parentWidth","separation","classList","preventDefault","parentHeight","marginLeft","direction","marginRight","marginBottom","zIndex","iconName","borderBottomColor","borderRightWidth","borderBottomWidth","borderLeftWidth","config","menuWidth","MenuButtonParent","childHeight","childWidth","node","numOfChildren","childButtonProps","handleOutsideClick","contains","clickToOpen","key","icon","SongInfoPanel","keySignature","credits","href","loadArrayBuffer","audioFilePath","request","XMLHttpRequest","responseType","status","response","open","send","AudioPlayerWrapper","bufferSource","loopLengthBeats","destination","fades","loop","secondsPerBeat","loopLengthSeconds","loopStart","loopEnd","buffer","duration","connect","start","onended","reload","newSource","createBufferSource","Scheduler","audioCtx","queue","repeatingQueue","eventId","callback","newEventId","dummyBuffer","createBuffer","dummySource","source","promise","frequency","timer","setInterval","updateQueue","currentTime","splice","clearInterval","getEvent","ToggleButton","buttonRef","playerRef","animationTargetsRef","schedulerRef","audioCtxInitTime","sampleRate","handleUpdatePlayerOrder","handleUpdateOverrides","groupName","groupNode","override","playerState","setPlayerState","quantizedStartBeats","quantizeSamples","buttonRadius","buttonBorder","changePlayerState","newState","clear","initialState","quantizedStartSeconds","beatsElapsed","nextSubdivision","scheduleOnce","quantizedStartMillis","strokeDashoffset","backgroundColor","anime","circleSvg","iconPoly","iconDiv","button","targets","easing","runAnimation","pathToAudio","require","createAudioPlayer","offlineRendering","renderLength","audioPlayer","player","iconSvg","strokeWidth","strokeDasharray","viewBox","Oscilloscope","lineWidth","prevX","prevY","dataArray","getTimeData","sliceWidth","gradient","strokeStyle","groupCount","lineTo","stroke","Analyser","input","power","minDecibels","maxDecibels","minFrequency","maxFrequency","smoothingTimeConstant","numBuckets","split","aWeighted","xEasing","yEasing","binMethod","nyquist","binSize","bucketCounts","bucketData","exponent","xExponent","yExponent","createAudioNodes","createDataStructure","createAWeights","splitter","createChannelSplitter","createAnalyser","fftData","timeData","Uint8Array","bins","aWeights","f2","getByteFrequencyData","fBins","freq","getByteTimeDomainData","newInput","disconnect","ToggleButtonGroup","groupMuteButton","groupSoloButton","premaster","groupNodeRef","createGain","oAnalyser","setOAnalyser","solo","setSolo","mute","setMute","playerOrder","setPlayerOrder","playerOverrides","setPlayerOverrides","createBiquadFilter","gain","effectsChainEntry","effectsChainExit","hpFilter","Q","lpFilter","reverbDryNode","reverbWetNode","reverbNode","createConvolver","arrayBuffer","decodeAudioData","audioBuffer","gAnalyser","analyserParams","effectType","effect","soloOverride","handleAddSolo","playerId","currentPolyphony","polyphony","concat","voices","voice","quantizeLength","ToggleButtonPanel","panelMuteButton","panelRandomizeButton","randomize","setSoloOverride","MusicPlayerReducer","action","instance","stopPlayer","pendingStop","buttons","impulseResponses","impulseResponse","groupEffects","highpass","lowpass","reverbDry","reverbWet","effectValues","ambience","AudioLooper","snapToGrid","refreshRate","fadeInTime","fadeOutTime","garbage","intervalTimer","activeEventTime","prevEventTime","scheduledEvents","onstart","gainNode","setValueAtTime","exponentialRampToValueAtTime","nextEventTime","addEventToQueue","quantizeStartTime","quantizeStopTime","effectParams","minFreq","maxFreq","minQ","maxQ","expFreqParams","expQParams","minWet","maxWet","MusicPlayer","playAmbientTrack","ambientTrack","ambientTrackLength","setPremasterAnalyser","useReducer","randomizeEventRef","ambientPlayerRef","AudioContext","webkitAudioContext","latencyHint","click","triggerRandomVoice","viableOne","randomOne","viableTwo","randomTwo","freqParams","QParams","wet","actx","resume","smoothingTimeConstanct","error","close","scheduleRepeating","updateCallback","cancel","Provider","parentSize","CustomSongIcon","cycleRef","timeRef","animationRef","coordsRef","updateCanvas","reset","getWidth","getHeight","handleSetSelected","handleUnsetSelected","beginAnimation","stopAnimation","coords","MoonriseIcon","bsin","period","yMin","yMax","invert","panelWidth","centerPoint","panelHeight","abs","strokeRect","MorningsIcon","ComingSoonIcon","Stars","number","intensityMap","radiusSpread","minOrbitRadius","maxOrbitRadius","orbitSpeed","rotateVector","starField","createSpheres","rand","intensities","randomCoords","normalize","guassianRand","rotateOnAxis","v0","v1","LandingPageScene","ColorPalette","rgbValueAt","landingPageReducer","LandingPage","selected","init","to","AppRouter","exact","path","component","routeProps","match","songId","spectrumFunctions","appConfig","song","morningsPalette","d3Color","brighter","AppWrap","viewportWidth","viewportHeight","documentElement","setProperty","setvw","setvh","setViewportVars","WebGLUnavailable","unsupportedType","WebGLRenderingContext","ReactDOM","WEBGL","isWebGLAvailable","getElementById"],"mappings":"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","file":"static/js/main.c5808185.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ambient-track.145a3d16.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ambient-track.a09963cc.mp3\";","module.exports = __webpack_public_path__ + \"static/media/lily.0b5b2d2b.gltf\";","module.exports = __webpack_public_path__ + \"static/media/landscape.5137591c.gltf\";","module.exports = __webpack_public_path__ + \"static/media/pine-tree.044015c2.gltf\";","module.exports = __webpack_public_path__ + \"static/media/house.67cce723.glb\";","module.exports = __webpack_public_path__ + \"static/media/table.fa952078.glb\";","module.exports = __webpack_public_path__ + \"static/media/flowers.37c1aabe.glb\";","module.exports = __webpack_public_path__ + \"static/media/spiral_plant.413e56fb.glb\";","module.exports = __webpack_public_path__ + \"static/media/bookcase.d848d042.glb\";","module.exports = __webpack_public_path__ + \"static/media/paintings.33a51d87.glb\";","module.exports = __webpack_public_path__ + \"static/media/iconList.3354d128.svg\";","var map = {\n\t\"./moonrise/ambient-track.mp3\": 33,\n\t\"./moonrise/atmo-crunch[8].mp3\": 69,\n\t\"./moonrise/atmo-photay[4].mp3\": 70,\n\t\"./moonrise/atmo-swirl[16].mp3\": 71,\n\t\"./moonrise/atmo-water[4].mp3\": 72,\n\t\"./moonrise/belly-percs[4].mp3\": 73,\n\t\"./moonrise/fast-hats[4].mp3\": 74,\n\t\"./moonrise/kick-snare[4].mp3\": 75,\n\t\"./moonrise/melody-bluesy[8].mp3\": 76,\n\t\"./moonrise/melody-soft[8].mp3\": 77,\n\t\"./moonrise/melody-trance[4].mp3\": 78,\n\t\"./moonrise/rhodes-arps[4].mp3\": 79,\n\t\"./moonrise/rhodes-chords[4].mp3\": 80,\n\t\"./moonrise/rhodes-sad[8].mp3\": 81,\n\t\"./moonrise/rides[4].mp3\": 82,\n\t\"./moonrise/sub-bouncey[8].mp3\": 83,\n\t\"./moonrise/sub-desc[8].mp3\": 84,\n\t\"./moonrise/sub-simple[4].mp3\": 85,\n\t\"./moonrise/sub-simple[8].mp3\": 86,\n\t\"./mornings/ambient-track.mp3\": 34,\n\t\"./mornings/bass-one[8].mp3\": 87,\n\t\"./mornings/bass-three[4].mp3\": 88,\n\t\"./mornings/bass-two[4].mp3\": 89,\n\t\"./mornings/extra-jammy[8].mp3\": 90,\n\t\"./mornings/extra-pad[8].mp3\": 91,\n\t\"./mornings/extra-sweep[4].mp3\": 92,\n\t\"./mornings/harmony-one[4].mp3\": 93,\n\t\"./mornings/harmony-three[4].mp3\": 94,\n\t\"./mornings/harmony-two[4].mp3\": 95,\n\t\"./mornings/melody-one[8].mp3\": 96,\n\t\"./mornings/melody-three[4].mp3\": 97,\n\t\"./mornings/melody-two[8].mp3\": 98,\n\t\"./mornings/rhythm-drums[4].mp3\": 99,\n\t\"./mornings/rhythm-kick[8].mp3\": 100,\n\t\"./mornings/rhythm-reverse[4].mp3\": 101,\n\t\"./mornings/rhythm-tops[8].mp3\": 102\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 68;","module.exports = __webpack_public_path__ + \"static/media/atmo-crunch[8].3302781f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/atmo-photay[4].b5f62d35.mp3\";","module.exports = __webpack_public_path__ + \"static/media/atmo-swirl[16].071632ea.mp3\";","module.exports = __webpack_public_path__ + \"static/media/atmo-water[4].a3916feb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/belly-percs[4].1b33f275.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fast-hats[4].d36c7762.mp3\";","module.exports = __webpack_public_path__ + \"static/media/kick-snare[4].edf2e08e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/melody-bluesy[8].517f5198.mp3\";","module.exports = __webpack_public_path__ + \"static/media/melody-soft[8].9436f5de.mp3\";","module.exports = __webpack_public_path__ + \"static/media/melody-trance[4].b168cf49.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rhodes-arps[4].836e115a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rhodes-chords[4].b93cc73b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rhodes-sad[8].01f304b2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rides[4].3815bc6b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sub-bouncey[8].39956256.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sub-desc[8].89a6665b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sub-simple[4].83dfe2b6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sub-simple[8].f2c77397.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bass-one[8].9c30c4b5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bass-three[4].50569542.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bass-two[4].2f424017.mp3\";","module.exports = __webpack_public_path__ + \"static/media/extra-jammy[8].cc3705de.mp3\";","module.exports = __webpack_public_path__ + \"static/media/extra-pad[8].2ed7e19c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/extra-sweep[4].87dcb5ea.mp3\";","module.exports = __webpack_public_path__ + \"static/media/harmony-one[4].aecab5c3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/harmony-three[4].d644a18d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/harmony-two[4].0320af2e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/melody-one[8].2ed3dabe.mp3\";","module.exports = __webpack_public_path__ + \"static/media/melody-three[4].f7d05ab9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/melody-two[8].b5530d7d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rhythm-drums[4].643614ec.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rhythm-kick[8].27743ea7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rhythm-reverse[4].4257b53e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rhythm-tops[8].dce46e89.mp3\";","module.exports = __webpack_public_path__ + \"static/media/impulse-response.5ddb346d.wav\";","var map = {\n\t\"./moonrise/ambient-track.mp3\": 33,\n\t\"./mornings/ambient-track.mp3\": 34\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 107;","import React from 'react';\n\nexport const LandingPageContext = React.createContext();\nexport const LayoutContext = React.createContext();\nexport const MusicPlayerContext = React.createContext();\nexport const TestingContext = React.createContext();\nexport const ThemeContext = React.createContext();\nexport const SongContext = React.createContext();\nexport const InfoContext = React.createContext();","const regularPolygon = (nSides, size = 1, cx = 0, cy = 0, closedLoop = true, rotate = false, twoDim = false) => {\n    const nPoints = closedLoop ? (nSides + 1) : nSides;\n    const nCoords = twoDim ? 2 : 3;\n    const points = new Float32Array(nPoints*nCoords);\n    for(let i = 0; i < nPoints; i++) {\n        if(twoDim) {\n            points[i*nCoords] = cx + size * Math.cos(i * 2 * Math.PI / nSides);\n            points[i*nCoords+1] = cy + size * Math.sin(i * 2 * Math.PI / nSides);\n        } else {\n            points[i*nCoords] = cx + size * Math.cos(i * 2 * Math.PI / nSides);\n            points[i*nCoords+1] = rotate ? 0 : cy + size * Math.sin(i * 2 * Math.PI / nSides);\n            points[i*nCoords+2] = rotate ? cy + size * Math.sin(i * 2 * Math.PI / nSides) : 0;\n        }\n    }\n    return points;\n}\n\nconst solveExpEquation = (x0, y0, x1, y1) => {\n\n    // solve the system of equations ...\n    // a*b^(x0) = y0\n    // a*b^(x1) = y1\n\n    const b = Math.pow((y1/y0), (1/(x1-x0)));\n    const a = y0/Math.pow(b, x0);\n    return {a, b}; // to be used y = ab^x\n}\n\n\nconst linToLog = (w) => {\n    /* \n    *\n    * linear scale: [1, w] \n    *    log scale: [1, w] \n    * \n    * (x0, y0): (1, 1)\n    * (x1, y1): (w, w)\n    * \n    * b = log(y0/y1)/(x0-x1)\n    * b = log(1/w)/(1-w)\n    * \n    * a = y1/exp(b*x1)\n    * a = w/exp(b*w)\n    * \n    */\n    let b = Math.log(1/w)/(1 - w);\n    let a = w/Math.exp(b * w);\n\n    return {a,b};\n}\n\nexport {regularPolygon, linToLog, solveExpEquation};","/* eslint-disable */\n\nconst TAU = Math.PI * 2;\n\n/**\n * Returns a sin function that is scaled based on it's period and bounds\n * @param {object} [period = 1] The increment after which the function repeats its behavior\n * @param {number} [yMin = 1] The minimum value of y\n * @param {number} [yMax = 1] The maximum value of y\n * @param {number} [translateY = 0] The translation along the x-axis\n * @param {number} [translateX = 0] The translation along the x-axis\n * @param {bool} [invert = false] If true, mirrors the function around the midpoint of yMin and yMax\n * @returns {object} A function that take x and returns fn(x)\n */\nconst boundedSin = (period = 1, yMin = -1, yMax = 1, translateX = 0, translateY = 0, invert = false) => {\n  return x => yMin + (yMax - yMin) * (0.5 + (invert ? -1 : 1) * Math.sin(-translateX + Math.PI * x / (period / 2)) / 2) + translateY;\n};\n/**\n * Returns a cos function that is scaled based on it's period and bounds\n * @param {object} [period = 1] The increment after which the function repeats its behavior\n * @param {number} [yMin = 1] The minimum value of y\n * @param {number} [yMax = 1] The maximum value of y\n * @param {number} [offset = 0] The translation along the x-axis\n * @param {bool} [invert = false] If true, mirrors the function around the midpoint of yMin and yMax\n * @returns {object} A function that take x and returns fn(x)\n */\n\nconst boundedCos = (period = 1, yMin = -1, yMax = 1, translateX = 0, translateY = 0, invert = false) => {\n  return x => yMin + (yMax - yMin) * (0.5 + (invert ? -1 : 1) * Math.cos(-translateX + Math.PI * x / (period / 2)) / 2) + translateY;\n};\nconst clamp = (n, min, max) => {\n  return Math.max(Math.min(max, n), min);\n};\nconst lerp = (n0, n1, t) => {\n  return n0 * (1 - t) + n1 * t;\n};\nconst cartToPolar = (x, y) => {\n  return {\n    r: Math.sqrt(x * x + y * y),\n    theta: Math.atan2(y, x)\n  };\n};\nconst polarToCart = (r, theta) => {\n  return {\n    x: r * Math.cos(theta),\n    y: r * Math.sin(theta)\n  };\n};\n\n/**\n * @param {object} context The canvas context to draw with\n * @param {*} resolution The number of line segments\n * @param {*} fn A function that takes a normalized input in the [0, 1] range and returns \n * an [x, y] array that describes the coordinates of the line at that point.\n */\nconst drawLine2D = (context, resolution, fn) => {\n  context.beginPath();\n\n  for (let i = 0; i <= resolution; i++) {\n    const coords = fn(i / resolution);\n\n    if (i === 0) {\n      context.moveTo(coords[0], coords[1]);\n    } else {\n      context.lineTo(coords[0], coords[1]);\n    }\n  }\n\n  context.stroke();\n};\n\nconst rotatePoint = (px, py, cx, cy, angle) => {\n  return {\n    x: Math.cos(angle) * (px - cx) - Math.sin(angle) * (py - cy) + cx,\n    y: Math.sin(angle) * (px - cx) + Math.cos(angle) * (py - cy) + cy\n  };\n};\nconst equilateralTriangle = (x, y, side, rotation) => {\n  const v = [];\n  const h = side * Math.sqrt(3) / 2;\n  v.push(rotatePoint(x, y - 2 * h / 3, x, y, rotation));\n  v.push(rotatePoint(x + side / 2, y * (h / 3), x, y, rotation));\n  v.push(rotatePoint(x - side / 2, y * (h / 3), x, y, rotation));\n  return v;\n};\nconst isocelesTriangle = (x, y, sideOne, sideTwo, rotation) => {\n  const v = [];\n  const h = Math.sqrt(sideTwo * sideTwo / 4 - sideOne * sideOne);\n  v.push(rotatePoint(x, y - 2 * h / 3, x, y, rotation));\n  v.push(rotatePoint(x + sideTwo / 2, y * (h / 3), x, y, rotation));\n  v.push(rotatePoint(x - sideTwo / 2, y * (h / 3), x, y, rotation));\n  return v;\n};\nconst star = (x, y, scale, rotation) => {\n};\nconst regularPolygon = (nSides, size = 1, cx = 0, cy = 0, closedLoop = true, rotate = false, twoDim = false) => {\n  const nPoints = closedLoop ? nSides + 1 : nSides;\n  const nCoords = twoDim ? 2 : 3;\n  const points = new Float32Array(nPoints * nCoords);\n\n  for (let i = 0; i < nPoints; i++) {\n    if (twoDim) {\n      points[i * nCoords] = cx + size * Math.cos(i * 2 * Math.PI / nSides);\n      points[i * nCoords + 1] = cy + size * Math.sin(i * 2 * Math.PI / nSides);\n    } else {\n      points[i * nCoords] = cx + size * Math.cos(i * 2 * Math.PI / nSides);\n      points[i * nCoords + 1] = rotate ? 0 : cy + size * Math.sin(i * 2 * Math.PI / nSides);\n      points[i * nCoords + 2] = rotate ? cy + size * Math.sin(i * 2 * Math.PI / nSides) : 0;\n    }\n  }\n\n  return points;\n};\n\nclass Spread {\n  /**\n   * Creates a canvas coordinate system.\n   * @param {object} [options] Optional properties of the system\n   * @param {object|number} [options.anchor = 'spacing'] Defines a method (or array of methods, 1 per dimension), which decide\n   *  which to preserve in the distribution: equal spacing between points, or full range of the distribution from start to \n   *  end point.\n   * @param {object|number} [options.border] The function (or array of functions, 1 per dimension) that include or exclude \n   *  certain points based on a return value.\n   * @param {object|number} [options.count] The count (or array of counts, 1 per dimension), that the spread data will contain.\n   * @param {object} [options.bounds = [0, 10]] Defines the direction of positive Y (either 'up' or 'down').\n   * @param {number} [options.dimensions = 1] Defines how many data dimensions the spread will contain.\n   * @param {object} [options.distribution = (n => n)] A function (or array of functions, 1-per dimension) that determine how\n   *  the spread data will be calculated. Distribution is passed two parameters: value and params.\n   */\n  constructor(options) {\n    const defaults = {\n      anchor: 'spacing',\n      border: undefined,\n      bounds: [0, 1],\n      count: 10,\n      dimensions: 1,\n      distribution: n => n\n    };\n    Object.assign(this, {\n      ...defaults,\n      ...options\n    });\n    this.flatData = [];\n    this.data = this.getData(this.count, this.bounds, this.dimensions);\n  }\n\n  getData() {\n    const ndArray = this.ndArray(this.getDimensionCounts());\n\n    const fillRange = (range, dim, accumulation) => {\n      const bounds = this.getBounds(dim);\n      const anchor = this.getAnchor(dim);\n      const distribution = this.getDistribution(dim);\n      const units = (bounds[1] - bounds[0]) / range.length;\n\n      for (let i = 0; i < range.length; i++) {\n        const clone = [...accumulation];\n        let value;\n\n        switch (anchor) {\n          case 'spacing':\n            value = distribution(bounds[0] + units * (i + 0.5), {\n              d: dim,\n              i\n            });\n            break;\n\n          case 'endpoints':\n            value = distribution(bounds[0] + units * i, {\n              d: dim,\n              i\n            });\n            break;\n\n          default:\n            throw new Error('Anchor type not valid. Choose from (spacing, endpoints).');\n        }\n\n        clone.push(value);\n\n        if (dim < this.dimensions) {\n          fillRange(range[i], dim + 1, clone);\n        } else {\n          if (this.border === undefined || this.border(...clone)) {\n            range[i] = clone;\n            this.flatData.push(clone);\n          }\n        }\n      }\n    };\n\n    fillRange(ndArray, 1, []);\n    return ndArray;\n  }\n\n  ndArray(dimensions) {\n    if (dimensions.length > 0) {\n      const dim = dimensions[0];\n      const rest = dimensions.slice(1);\n      const newArray = new Array();\n\n      for (let i = 0; i < dim; i++) {\n        newArray[i] = this.ndArray(rest);\n      }\n\n      return newArray;\n    } else {\n      return undefined;\n    }\n  }\n\n  getAnchor(d) {\n    if (typeof d === 'number') {\n      if (Array.isArray(this.anchor)) {\n        if (this.anchor[d - 1] !== undefined) {\n          return this.anchor[d - 1];\n        } else {\n          return undefined;\n        }\n      } else {\n        return this.anchor;\n      }\n    }\n  }\n\n  getBounds(d) {\n    if (typeof d === 'number') {\n      if (Array.isArray(this.bounds[0])) {\n        if (this.bounds[d - 1] !== undefined) {\n          return this.bounds[d - 1];\n        } else {\n          return undefined;\n        }\n      } else {\n        return this.bounds;\n      }\n    }\n  }\n\n  getCount(d) {\n    if (typeof d === 'number') {\n      if (Array.isArray(this.count)) {\n        if (this.count[d - 1] !== undefined) {\n          return this.count[d - 1];\n        } else {\n          return undefined;\n        }\n      } else {\n        return this.count;\n      }\n    }\n  }\n\n  getDistribution(d) {\n    if (typeof d === 'number') {\n      if (Array.isArray(this.distribution)) {\n        if (this.distribution[d - 1] !== undefined) {\n          return this.distribution[d - 1];\n        } else {\n          return undefined;\n        }\n      } else {\n        return this.distribution;\n      }\n    }\n  }\n\n  getDimensionCounts() {\n    const counts = [];\n\n    for (let i = 1; i <= this.dimensions; i++) {\n      counts[i - 1] = this.getCount(i);\n    }\n\n    return counts;\n  }\n\n}\n\nclass CanvasCoordinates {\n  /**\n   * Creates a canvas coordinate system.\n   * @param {object} [options] Optional properties of the system\n   * @param {object} [options.nxRange = [-1, 1]] An array that represents the bounds of the normalized x axis\n   * @param {object} [options.nyRange = [-1, 1]] An array that represents the bounds of the normalized y axis\n   * @param {object} [options.canvas] The canvas to map the coordinate system to\n   * @param {number} [options.baseWidth] If specified, coordinates will map to this width instead of the canvas width (px)\n   * @param {number} [options.baseHeight] If specified, coordinates will map to this height instead of the canvas height (px)\n   * @param {boolean} [options.clamp = false] Whether or not to clamp coordinate that are outside of the bounds\n   * @param {number} [options.padding = 0] Defines padding as a proportion of the canvas width\n   * @param {number} [options.paddingX] Defines X padding as a proportion of the canvas width (if defined, overrides options.padding)\n   * @param {number} [options.paddingY] Defines Y padding as a proportion of the canvas height (if defined, overrides options.padding)\n   * @param {number} [options.orientationY = 'up'] Defines the direction of positive Y (either 'up' or 'down').\n   */\n  constructor(options = {}) {\n    if (typeof options.baseHeight === 'undefined' && typeof options.canvas === 'undefined' || typeof options.baseWidth === 'undefined' && typeof options.canvas === 'undefined') {\n      throw new Error('Invalid options. A canvas element must be supplied if baseHeight or baseWidth are not defined.');\n    }\n\n    const defaults = {\n      nxRange: [-1, 1],\n      nyRange: [-1, 1],\n      padding: 0,\n      paddingX: null,\n      paddingY: null,\n      canvas: null,\n      baseHeight: null,\n      baseWidth: null,\n      orientationY: 'down'\n    };\n    Object.assign(this, {\n      ...defaults,\n      ...options\n    });\n    this.width = this.baseWidth || this.canvas.width;\n    this.height = this.baseHeight || this.canvas.height;\n  }\n  /**\n   * Maps a normalized x-value to a canvas x-value\n   * @param {object} n A normalized x-value in the range [0, 1]\n   * @param {number} [options.padding] Defines padding as a proportion of the canvas width (if defined, overrides padding settings for the system)\n   */\n\n\n  nx(n, options = {}) {\n    let padding;\n    this.clamp && (n = clamp(n, this.nxRange[0], this.nxRange[1]));\n\n    if (typeof options.padding === 'number') {\n      padding = options.padding * this.width;\n    } else {\n      padding = (this.paddingX || this.padding) * this.width;\n    }\n\n    return padding + (n - this.nxRange[0]) / (this.nxRange[1] - this.nxRange[0]) * (this.width - 2 * padding);\n  }\n  /**\n   * Maps a canvas x-value to a normalized x-value\n   * @param {object} n A canvas x-value in the range [0, canvas.width]\n   * @param {number} [options.padding] Defines padding as a proportion of the canvas width (if defined, overrides padding settings for the system)\n   */\n\n\n  xn(x, options = {}) {\n    let padding;\n\n    if (typeof options.padding === 'number') {\n      padding = options.padding * this.width;\n    } else {\n      padding = (this.paddingX || this.padding) * this.width;\n    }\n\n    return (x - padding) / (this.width - padding * 2);\n  }\n  /**\n   * Maps a normalized y-value to a canvas y-value\n   * @param {object} n A normalized y-value in the range [0, 1]\n   * @param {number} [options.padding] Defines padding as a proportion of the canvas width (if defined, overrides padding settings for the system)\n   * @param {number} [options.paddingY] Defines padding as a proportion of the canvas height (if defined, overrides padding settings for the system)\n   */\n\n\n  ny(n, options = {}) {\n    let padding;\n    this.clamp && (n = clamp(n, this.nyRange[0], this.nyRange[1]));\n\n    if (typeof options.paddingY === 'number') {\n      padding = options.paddingY * this.height;\n    } else if (typeof options.padding === 'number') {\n      padding = options.padding * this.width;\n    } else {\n      padding = typeof this.paddingY === 'number' ? this.paddingY * this.height : this.padding * this.width;\n    }\n\n    if (this.orientationY === 'down') {\n      return padding + (n - this.nyRange[0]) / (this.nyRange[1] - this.nyRange[0]) * (this.height - 2 * padding);\n    } else if (this.orientationY === 'up') {\n      return this.height - padding - (n - this.nyRange[0]) / (this.nyRange[1] - this.nyRange[0]) * (this.height - 2 * padding);\n    }\n  }\n  /**\n   * Maps a canvas y-value to a normalized y-value\n   * @param {object} n A canvas y-value in the range [0, canvas.height]\n   * @param {number} [options.padding] Defines padding as a proportion of the canvas height (if defined, overrides padding settings for the system)\n   */\n\n\n  yn(y, options = {}) {\n    let padding;\n\n    if (typeof options.paddingY === 'number') {\n      padding = options.paddingY * this.height;\n    } else if (typeof options.padding === 'number') {\n      padding = options.padding * this.width;\n    } else {\n      padding = typeof this.paddingY === 'number' ? this.paddingY * this.height : this.padding * this.width;\n    }\n\n    if (this.orientationY === 'down') {\n      return (y - padding) / (this.height - padding * 2);\n    } else if (this.orientationY === 'up') {\n      return (this.height - y - padding) / (this.height - padding * 2);\n    }\n  }\n\n  getWidth() {\n    return this.nx(this.nxRange[1]) - this.nx(this.nxRange[0]);\n  }\n\n  getHeight() {\n    if (this.orientationY === 'down') {\n      return this.ny(this.nyRange[1]) - this.ny(this.nyRange[0]);\n    } else if (this.orientationY === 'up') {\n      return this.ny(this.nyRange[0]) - this.ny(this.nyRange[1]);\n    } else {\n      return undefined;\n    }\n  }\n\n}\n\nexport { CanvasCoordinates, Spread, TAU, boundedCos, boundedSin, cartToPolar, clamp, drawLine2D, equilateralTriangle, isocelesTriangle, lerp, polarToCart, regularPolygon, rotatePoint, star };\n","/* eslint-disable */\n\nimport * as THREE from 'three';\n\nexport default class FirstPersonControls {\n\tconstructor(object) {\n\t\tthis.object = object;\n\t\tthis.target = new THREE.Vector3(0, 0, 0);\n\n\t\tthis.enabled = true;\n\n\t\tthis.movementSpeed = 20;\n\t\tthis.lookSpeed = 20;\n\n\t\tthis.lookVertical = true;\n\t\tthis.autoForward = false;\n\n\t\tthis.activeLook = true;\n\n\t\tthis.heightLock = false;\n\n\t\tthis.constrainVertical = true;\n\t\tthis.verticalMin = 0;\n\t\tthis.verticalMax = Math.PI;\n\n\t\tthis.lat = 0;\n\t\tthis.lon = -90;\n\t\tthis.phi = 0;\n\t\tthis.theta = 0;\n\n\t\tthis.moveForward = false;\n\t\tthis.moveBackward = false;\n\t\tthis.moveLeft = false;\n\t\tthis.moveRight = false;\n\n\t\tthis.lookUp = false;\n\t\tthis.lookDown = false;\n\t\tthis.lookLeft = false;\n\t\tthis.lookRight = false;\n\n\t\tthis._onKeyDown = this.bind(this, this.onKeyDown);\n\t\tthis._onKeyUp = this.bind(this, this.onKeyUp);\n\t\twindow.addEventListener('keydown', this._onKeyDown, false);\n\t\twindow.addEventListener('keyup', this._onKeyUp, false);\n\t}\n\n\tonKeyDown(event) {\n\t\tswitch (event.keyCode) {\n\t\t\tcase 87: /*W*/ this.moveForward = true; break;\n\t\t\tcase 65: /*A*/ this.moveLeft = true; break;\n\t\t\tcase 83: /*S*/ this.moveBackward = true; break;\n\t\t\tcase 68: /*D*/ this.moveRight = true; break;\n\n\t\t\tcase 38: /*up*/ this.lookUp = true; break;\n\t\t\tcase 37: /*left*/ this.lookLeft = true; break;\n\t\t\tcase 40: /*down*/ this.lookDown = true; break;\n\t\t\tcase 39: /*right*/ this.lookRight = true; break;\n\t\t}\n\t}\n\n\tonKeyUp(event) {\n\t\tswitch (event.keyCode) {\n\t\t\tcase 87: /*W*/ this.moveForward = false; break;\n\t\t\tcase 65: /*A*/ this.moveLeft = false; break;\n\t\t\tcase 83: /*S*/ this.moveBackward = false; break;\n\t\t\tcase 68: /*D*/ this.moveRight = false; break;\n\n\t\t\tcase 38: /*up*/ this.lookUp = false; break;\n\t\t\tcase 37: /*left*/ this.lookLeft = false; break;\n\t\t\tcase 40: /*down*/ this.lookDown = false; break;\n\t\t\tcase 39: /*right*/ this.lookRight = false; break;\n\t\t}\n\t}\n\n\tupdate(delta, yClamp) {\n\t\tif (this.enabled === false) return;\n\n\t\tvar actualMoveSpeed = delta * this.movementSpeed;\n\n\t\t// translate by key press\n\t\tif (this.moveForward || (this.autoForward && !this.moveBackward)) this.object.translateZ(- (actualMoveSpeed));\n\t\tif (this.moveBackward) this.object.translateZ(actualMoveSpeed);\n\t\tif (this.moveLeft) this.object.translateX(- actualMoveSpeed);\n\t\tif (this.moveRight) this.object.translateX(actualMoveSpeed);\n\n\t\t// enforce height lock\n\t\tif (this.heightLock) this.object.position.y = yClamp || 1;\n\n\t\tvar actualLookSpeed = delta * this.lookSpeed;\n\n\t\tif (this.lookUp) this.lat += actualLookSpeed;\n\t\tif (this.lookDown) this.lat -= actualLookSpeed;\n\t\tif (this.lookRight) this.lon += actualLookSpeed; // * verticalLookRatio;\n\t\tif (this.lookLeft) this.lon -= actualLookSpeed; // * verticalLookRatio;\n\n\t\tthis.lat = Math.max(- 85, Math.min(85, this.lat));\n\t\tthis.phi = THREE.Math.degToRad(90 - this.lat);\n\t\tthis.theta = THREE.Math.degToRad(this.lon);\n\n\t\tif (this.constrainVertical) {\n\t\t\tthis.phi = THREE.Math.mapLinear(this.phi, 0, Math.PI, this.verticalMin, this.verticalMax);\n\t\t}\n\n\t\tlet targetPosition = this.target;\n\t\tlet position = this.object.position;\n\n\t\ttargetPosition.x = position.x + 100 * Math.sin(this.phi) * Math.cos(this.theta);\n\t\ttargetPosition.y = position.y + 100 * Math.cos(this.phi);\n\t\ttargetPosition.z = position.z + 100 * Math.sin(this.phi) * Math.sin(this.theta);\n\n\t\tthis.object.lookAt(targetPosition);\n\t\tconsole.log(this.object.position, targetPosition)\n\n\t}\n\n\tdispose() {\n\t\twindow.removeEventListener('keydown', this._onKeyDown, false);\n\t\twindow.removeEventListener('keyup', this._onKeyUp, false);\n\t}\n\n\tbind(scope, fn) {\n\t\treturn function () {\n\t\t\tfn.apply(scope, arguments);\n\t\t};\n\t}\n}","/* eslint-disable */\n\nimport * as THREE from 'three';\nimport Stats from 'stats.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport FirstPersonControls from './controls/FirstPersonControls';\n\nexport class SceneManager {\n\n    constructor(canvas) {\n\n        this.canvas = canvas;\n\n        this.clock = new THREE.Clock(true);\n\n        this.screenDimensions = {\n            width: window.innerWidth,\n            height: window.innerHeight\n        }\n\n        this.worldDimensions = {\n            width: 1000,\n            height: 1000,\n            depth: 1000\n        };\n\n        this.currentFrame;\n        this.animate = this.animate.bind(this);\n        this.render = this.render.bind(this);\n        this.onWindowResize = this.onWindowResize.bind(this);\n        this.showStats = true;\n\n    }\n\n    init() {\n        return new Promise((resolve, reject) => {\n            try {\n                // lights, camera, action\n                this.scene = this.initScene();\n                this.renderer = this.initRender();\n                this.camera = this.initCamera('perspective');\n                this.controls = this.initControls();\n                this.subjects = this.initSubjects();\n                this.lights = this.initLights();\n                this.helpers = this.initHelpers();\n                resolve();\n            } catch (err) {\n                reject(err);\n            }\n        })\n    }\n\n    stop() {\n        window.cancelAnimationFrame(this.currentFrame);\n    }\n\n    disposeAll(obj) {\n        while (obj.children.length > 0) {\n            this.disposeAll(obj.children[0])\n            obj.remove(obj.children[0]);\n        }\n        if (obj.geometry) obj.geometry.dispose()\n\n        if (obj.material) {\n            //in case of map, bumpMap, normalMap, envMap ...\n            Object.keys(obj.material).forEach(prop => {\n                if (!obj.material[prop])\n                    return\n                if (typeof obj.material[prop].dispose === 'function')\n                    obj.material[prop].dispose()\n            })\n            obj.material.dispose()\n        }\n    }\n\n    animate() {\n        this.showStats && this.helpers.stats.begin();\n        this.render();\n        this.showStats && this.helpers.stats.end();\n        this.currentFrame = requestAnimationFrame(this.animate);\n    }\n\n    initScene() {\n        const scene = new THREE.Scene();\n        return scene;\n    }\n\n    initRender() {\n\n        const renderer = new THREE.WebGLRenderer({\n            alpha: true,\n            canvas: this.canvas,\n            antialias: true,\n            powerPreference: \"high-performance\",\n            outputEncoding: THREE.sRGBEncoding\n        });\n\n        const DPR = (window.devicePixelRatio) ? window.devicePixelRatio : 1;\n\n        renderer.setSize(this.screenDimensions.width, this.screenDimensions.height);\n        renderer.setPixelRatio(DPR);\n\n        return renderer;\n    }\n\n    initCamera(type, frustrum) {\n\n        const fieldOfView = 60;\n        const nearPlane = 1;\n        const farPlane = 10000;\n        const aspect = this.screenDimensions.width / this.screenDimensions.height;\n        let camera;\n\n        switch (type || 'perspective') {\n            case 'perspective':\n                camera = new THREE.PerspectiveCamera(fieldOfView, 1, nearPlane, farPlane);\n                break;\n            case 'orthographic':\n                let f = frustrum || 50;\n                camera = new THREE.OrthographicCamera(-f, f, f / aspect, -f / aspect, nearPlane, farPlane);\n                break;\n        }\n\n        camera.aspect = aspect;\n        camera.position.set(0, 10, 115);\n        camera.lookAt(new THREE.Vector3(0, 0, 0));\n        camera.updateProjectionMatrix();\n        return camera;\n    }\n\n    initControls() {\n\n        const controls = {};\n        controls.fpc = new FirstPersonControls(this.camera);\n        return controls;\n\n    }\n\n    initSubjects() {\n\n        const subjects = {};\n        return subjects;\n\n    }\n\n    initLights() {\n        const lights = {\n            ambient: new THREE.AmbientLight(0xffffff, .1)\n        }\n        this.scene.add(lights.ambient);\n        this.lights = lights;\n    }\n\n    initHelpers() {\n\n        let stats = null;\n\n        if (this.showStats) {\n            stats = new Stats();\n            stats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\n            stats.dom.style.left = null;\n            stats.dom.style.right = '0px';\n            document.body.appendChild(stats.dom);\n        }\n\n        const helpers = {\n            stats: stats,\n            gltfLoader: new GLTFLoader()\n        }\n\n        return helpers;\n\n    }\n\n    onWindowResize() {\n        const newWidth = window.innerWidth;\n        const newHeight = window.innerHeight;\n        this.screenDimensions.width = newWidth;\n        this.screenDimensions.height = newHeight;\n        const aspectRatio = newWidth / newHeight;\n\n        if (this.fovAdjust) {\n            this.camera.fov = this.getNewFov(aspectRatio);\n        }\n\n        this.camera.aspect = aspectRatio;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(newWidth, newHeight);\n    }\n};","import * as THREE from 'three';\n\nexport class StarQuandrants {\n\n    constructor(scene, levels, skyColor, params) {\n\n        this.levels = levels;\n\n        this.colorPalette = params.colorPalette;\n        this.width = params.width;\n        this.height = params.height;\n        this.depth = params.depth;\n        this.center = params.center;\n\n        this.leftGroup = new THREE.Group();\n        this.rightGroup = new THREE.Group();\n        this.group = new THREE.Group();\n\n        for (let i = 0; i < levels; i++) {\n            this.createStars(params.count, 'left', i, skyColor);\n            this.createStars(params.count, 'right', i, skyColor);\n        }\n\n        this.group.add(this.leftGroup);\n        this.group.add(this.rightGroup);\n        this.group.position.copy(params.center);\n        scene.add(this.group);\n\n    }\n\n    createStars(n, channel, level, skyColor) {\n\n        let geometry = new THREE.BufferGeometry();\n        let positions = [];\n        let color;\n        let colors = [];\n\n        for (let i = 0; i < n; i++) {\n            const xBound = channel === 'left' ? (this.width / -2) * 1.35 : this.width / 2 * 1.35;\n            const x = xBound * Math.random();\n\n            const yMin = level * this.height / this.levels;\n            const y = yMin + Math.random() * (this.height / this.levels);\n\n            const z = this.depth * Math.random();\n\n            positions.push(x, y, z)\n\n            color = new THREE.Color(this.colorPalette(y / this.height));\n\n            const distanceFromMoon = Math.sqrt(x * x + (y - 15) * (y - 15));\n\n            color.lerp(skyColor, 1 / (distanceFromMoon / 75));\n\n            colors.push(color.r, color.g, color.b);\n        }\n\n        geometry.addAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\n        geometry.addAttribute('color', new THREE.Float32BufferAttribute(colors, 3));\n        geometry.setDrawRange(0, n);\n\n        let material = new THREE.PointsMaterial({\n            vertexColors: THREE.VertexColors,\n            transparent: true,\n            opacity: 0,\n            fog: false\n        });\n\n        if (channel === 'left') {\n            this.leftGroup.add(new THREE.Points(geometry, material));\n        } else {\n            this.rightGroup.add(new THREE.Points(geometry, material));\n        }\n    }\n}","// libs\nimport * as THREE from 'three';\nimport * as d3Chromatic from 'd3-scale-chromatic';\nimport { linToLog } from '../../../utils/mathUtils';\nimport { regularPolygon } from '../../../utils/crco-utils.module.js';\n\n\nimport { SceneManager } from '../../SceneManager';\nimport { StarQuandrants } from '../../subjects/StarQuandrants';\nimport lilyModel from '../../models/moonrise/lily.gltf';\nimport landscapeModel from '../../models/moonrise/landscape.gltf';\nimport pineTreeModel from '../../models/moonrise/pine-tree.gltf';\n\nexport class Moonrise extends SceneManager {\n\n    constructor(canvas, analysers, players) {\n\n        super(canvas);\n\n        console.log(analysers);\n\n        this.rhythmAnalyser = analysers.find(a => a.id === 'rhythm-analyser');\n        this.atmosphereAnalyser = analysers.find(a => a.id === 'atmosphere-analyser');\n        this.harmonyAnalyser = analysers.find(a => a.id === 'harmony-analyser');\n        this.melodyAnalyser = analysers.find(a => a.id === 'melody-analyser');\n        this.bassAnalyser = analysers.find(a => a.id === 'bass-analyser');\n\n        this.palette = {\n            white: 0xffffff,\n            rockGrey: 0x9d978e,\n            lightning: 0xEEE6AB,\n            moonYellow: 0xf6f2d5,\n            tropicalGreen: 0x70A491,\n            deepInk: 0x030C22\n        };\n\n        // lily vars\n        this.prevMelodyVolume = 0;\n        this.currentMelodyVolume = 0;\n        this.lilyColors = [this.palette.dustyViolet, this.palette.pansyPurple, this.palette.funGreen, this.palette.hibiscus, this.palette.yellow]\n\n        // TODO: parameterize\n        super.init().then(() => {\n            window.addEventListener('resize', () => {\n                this.onWindowResize(window.innerWidth, window.innerHeight)\n            });\n            this.scene.fog = new THREE.Fog(0xffffff, 10, 470);\n            this.scene.background = new THREE.Color('#1F262F').lerp(new THREE.Color(0x000000), 0.2);\n            Promise.all([\n                this.initLakeTrees(),\n                this.initLakeScene(),\n                this.initLakeRipples(),\n                this.initLakeStars(),\n                this.initLakeLilies(),\n                this.initLakeMoon()\n            ]).then(() => {\n                super.animate();\n            })\n        })\n    }\n\n    initLakeScene() {\n        return new Promise((resolve, reject) => {\n            try {\n\n                // hexagon shape for the lake body\n                const lakeShapePoints = regularPolygon(6, 110, 0, 0, true, false, true);\n                const lakeShapeVectors = []\n                for (let i = 0; i < lakeShapePoints.length; i += 2) {\n                    lakeShapeVectors.push(new THREE.Vector2(lakeShapePoints[i], lakeShapePoints[i + 1]));\n                }\n                const lakeShape = new THREE.Shape(lakeShapeVectors);\n                const lakeGeo = new THREE.ShapeBufferGeometry(lakeShape);\n                lakeGeo.rotateX(-Math.PI / 2);\n                lakeGeo.translate(0, 0, 70);\n                const lakeMat = new THREE.MeshBasicMaterial({\n                    color: this.palette.deepInk,\n                    fog: false\n                });\n                const lakeMesh = new THREE.Mesh(lakeGeo, lakeMat);\n                this.subjects.lake = lakeMesh;\n                this.scene.add(lakeMesh);\n\n                // basic rectangle for the ground\n                const groundGeo = new THREE.PlaneBufferGeometry(550, 350);\n                groundGeo.rotateX(-Math.PI / 2);\n                groundGeo.translate(0, -1, 0);\n                const groundMat = new THREE.MeshBasicMaterial({\n                    color: 0x022A1E,\n                    fog: false\n                });\n                groundMat.color.lerp(new THREE.Color(0x000000), 0.75); // TODO: figure out the color issue\n                const groundMesh = new THREE.Mesh(groundGeo, groundMat)\n                this.subjects.ground = groundMesh;\n                this.scene.add(groundMesh);\n\n                const moonGuard = new THREE.Mesh(new THREE.PlaneBufferGeometry(60, 30), groundMat);\n                moonGuard.translateZ(-79);\n\n                this.scene.add(moonGuard);\n\n                // directional light\n                const directionalLight = new THREE.DirectionalLight(0xffffff, 0.18);\n                directionalLight.position.set(0, 10, 0);\n                this.scene.add(directionalLight);\n\n                // point light fireflies\n                const fireflyCount = 16;\n                const fireFlyGroup = new THREE.Group();\n                for (let i = 0; i < fireflyCount; i++) {\n                    const g = new THREE.Group();\n                    g.add(new THREE.PointLight(this.palette.moonYellow, 0.1));\n\n                    const sphereGeo = new THREE.SphereBufferGeometry(0.25);\n                    const sphereMat = new THREE.MeshBasicMaterial({\n                        color: this.palette.lightning,\n                        fog: false,\n                        transparent: true\n                    });\n\n                    g.add(new THREE.Mesh(sphereGeo, sphereMat));\n\n                    g.position.set(\n                        -70 + Math.random() * 140,\n                        5 + Math.random() * 15,\n                        40 - Math.random() * 70\n                    );\n\n                    g.userData.cycle = 0;\n                    g.userData.state = 'off';\n                    fireFlyGroup.add(g);\n                }\n\n                this.subjects.fireflies = fireFlyGroup;\n                this.scene.add(fireFlyGroup);\n\n                // add some rocks\n                this.helpers.gltfLoader.load(landscapeModel, (model) => {\n                    this.subjects.rocks = model.scene.children.find((e) => e.name = 'rockGroup');\n                    this.subjects.rocks.children.forEach((rock) => { rock.material.color.setRGB(0.06, 0.06, 0.06) });\n                    this.scene.add(this.subjects.rocks);\n                }, undefined, (err) => {\n                    if (err) { reject(err) }\n                })\n\n                resolve();\n\n            } catch (err) {\n                reject(err)\n            }\n        });\n    }\n\n    initLakeMoon() {\n        return new Promise((resolve, reject) => {\n            try {\n\n                const moonRadius = 25;\n                const numVertices = this.bassAnalyser.fftSize;\n                const numMoonRings = 5;\n\n                const moonGeo = new THREE.CircleBufferGeometry(moonRadius, numVertices, numVertices);\n                const moonMat = new THREE.MeshBasicMaterial({\n                    color: this.palette.moonYellow,\n                    fog: false\n                });\n\n                const moonMesh = new THREE.Mesh(moonGeo, moonMat);\n                moonMesh.userData.radius = moonRadius;\n                moonMesh.position.set(0, 35, -80);\n\n                this.subjects.moon = moonMesh;\n                this.scene.add(moonMesh);\n\n                const moonRings = new THREE.Group(); // moonRings = group of numMoonRings(5) rings\n                const moonBeams = new THREE.Group(); // moonBeams = group of 16 moonRings\n\n                // 5 rings in the moonRings group\n                for (let j = 0; j < numMoonRings; j++) {\n                    const moonRingGeo = new THREE.BufferGeometry();\n                    const positions = new Float32Array(numVertices * 3);\n                    moonRingGeo.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n                    moonRingGeo.setDrawRange(0, 0);\n\n                    const moonRingMat = new THREE.PointsMaterial({\n                        color: this.palette.moonYellow,\n                        transparent: true,\n                        opacity: 0.1 + (j / 7)\n                    });\n\n                    const moonRing = new THREE.Points(moonRingGeo, moonRingMat);\n                    moonRings.add(moonRing);\n                }\n\n                for (let k = 0; k < 8; k++) {\n                    const newMoonRings = moonRings.clone();\n                    newMoonRings.translateY(moonMesh.position.y);\n                    newMoonRings.rotateZ(2 * Math.PI * (k / 16));\n                    moonBeams.add(newMoonRings);\n                }\n\n                this.subjects.moonBeams = moonBeams;\n                this.subjects.moonBeams.userData.numMoonRings = numMoonRings;\n                this.subjects.moonBeams.userData.numVertices = numVertices;\n                this.scene.add(moonBeams);\n\n                resolve();\n            } catch (err) {\n                reject(err)\n            }\n        })\n    }\n\n    initLakeTrees() {\n        return new Promise((resolve, reject) => {\n            // load gltf tree models\n            this.helpers.gltfLoader.load(pineTreeModel, (model) => {\n                const basePineTree = model.scenes[0].children[0];\n\n                // generate simple tree formation\n                const pineTreeGroup = new THREE.Group();\n                const numPineTrees = 64;\n                const xMin = -100;\n                const xMax = 100;\n                const xNoise = 5;\n                const zNoise = 10;\n                const scaleNoise = 0.3;\n\n                for (let i = 1; i <= numPineTrees; i++) {\n                    const x = xMin + i / numPineTrees * (xMax - xMin) + (Math.random() * xNoise - xNoise / 2);\n\n                    // z(x) is piecewise and is calculated using the coordinates of the lake hexagon\n                    let z;\n                    if (x < -55) {\n                        z = -1 * ((95 / 55) * x + 190) - (Math.random() * zNoise);\n                    } else if (x >= -55 && x < 55) {\n                        z = -95 - (Math.random() * zNoise);\n                    } else if (x >= 55) {\n                        z = -1 * (-(95 / 55) * x + 190) - (Math.random() * zNoise);\n                    }\n\n                    const clone = basePineTree.clone();\n                    const scale = 1 - (scaleNoise * Math.random());\n\n                    clone.children[0].material = new THREE.MeshBasicMaterial({\n                        color: new THREE.Color(this.palette.tropicalGreen).lerp(new THREE.Color(this.palette.white), -1.5)\n                    });;\n\n                    clone.position.copy(new THREE.Vector3(x, -2, z + 70));\n                    clone.scale.copy(new THREE.Vector3(scale, scale, scale));\n                    clone.rotateY(Math.random() * 2 * Math.PI);\n                    pineTreeGroup.add(clone);\n                }\n                this.subjects.pineTrees = pineTreeGroup;\n                this.scene.add(pineTreeGroup);\n                resolve();\n            }, undefined, (err) => {\n                reject(err);\n            });\n        });\n    }\n\n    initLakeRipples() {\n        return new Promise((resolve, reject) => {\n            try {\n                const n = this.rhythmAnalyser.frequencyBinCount;\n                const numSides = 6;\n                const baseWidth = 1;\n                const polygonPoints = regularPolygon(numSides, baseWidth, 0, 0, true, true);\n                const bandScale = 100; // how far out the bands will extend\n                const bandScaleLogConstants = linToLog(bandScale);\n\n                const baseGeoGroup = new THREE.Group();\n                const baseGeo = new THREE.BufferGeometry();\n                baseGeo.addAttribute('position', new THREE.BufferAttribute(polygonPoints, 3));\n\n                for (let i = 0; i < n; i++) {\n\n                    // clone and scale\n                    const geo = baseGeo.clone();\n                    const linScale = 1 + (i / n) * bandScale;\n                    const logScale = Math.log(linScale / bandScaleLogConstants.a) / bandScaleLogConstants.b;\n                    geo.scale(logScale, logScale, logScale);\n                    geo.translate(0, 0.05, 50);\n\n                    // add to group\n                    baseGeoGroup.add(new THREE.Line(geo, new THREE.LineBasicMaterial({\n                        color: this.palette.moonYellow,\n                        transparent: true,\n                        opacity: 0\n                    })));\n\n                }\n\n                // bind subject and add to scene\n                this.subjects.ripples = baseGeoGroup;\n                this.scene.add(baseGeoGroup);\n\n                resolve();\n            } catch (err) {\n                reject(err);\n            }\n        });\n    }\n\n    initLakeStars() {\n        return new Promise((resolve, reject) => {\n            try {\n                this.subjects.stars = new StarQuandrants(this.scene, 8, this.scene.background, {\n                    count: 150,\n                    width: 600,\n                    height: 225,\n                    depth: 190,\n                    center: new THREE.Vector3(0, -13, -300),\n                    colorPalette: d3Chromatic.interpolateCool\n                });\n                resolve();\n            } catch (err) {\n                reject(err)\n            }\n        });\n    }\n\n    initLakeLilies() {\n        return new Promise((resolve, reject) => {\n\n            this.helpers.gltfLoader.load(lilyModel, (gltf) => {\n\n                const model = gltf.scene.children[1];\n\n                // breakdown\n                const lowerPetal = model.children[0].clone();\n                const upperPetal = model.children[1].clone();\n                const sphere = model.children[2].clone();\n                sphere.name = 'sphere';\n                const lilyPad = model.children[3].clone();\n                lilyPad.name = 'lilyPad';\n\n                // initialize base lily\n                const baseLily = new THREE.Group();\n                const petalGroup = new THREE.Group();\n                petalGroup.name = 'petalGroup';\n\n\n                // duplicate and rotate petals, adding each to their corresponding group\n                for (let i = 0; i < 18; i++) {\n                    const upperClone = new THREE.Group().add(upperPetal.clone());\n                    upperClone.rotateY(Math.PI * 2 * (i / 8));\n\n                    const lowerClone = new THREE.Group().add(lowerPetal.clone());\n                    lowerClone.rotateY(Math.PI * 2 * (i / 8));\n\n                    petalGroup.add(upperClone);\n                    petalGroup.add(lowerClone);\n                }\n\n                baseLily.add(petalGroup, sphere, lilyPad);\n\n                const numLilies = 23;\n                const lilyGroup = new THREE.Group();\n\n                const flowerMat = new THREE.MeshBasicMaterial({\n                    color: new THREE.Color(0xFFFFFF),\n                });\n\n                const padMat = new THREE.MeshBasicMaterial({\n                    color: new THREE.Color(0x022A1E).lerp(new THREE.Color(0x000000), 1),\n                });\n\n                for (let i = 1; i <= numLilies; i++) {\n\n                    const clone = baseLily.clone();\n\n                    const petalColor = new THREE.Color(d3Chromatic.interpolateViridis(Math.random()));\n                    const petalMat = new THREE.MeshBasicMaterial({\n                        color: petalColor,\n                    });\n\n                    clone.getObjectByName('petalGroup').children.forEach((petalGroup) => {\n                        petalGroup.children[0].material = petalMat;\n                    });\n\n                    clone.getObjectByName('lilyPad').material = padMat;\n                    clone.getObjectByName('sphere').material = flowerMat;\n\n                    const firstPattern = (i % 4 + 1);\n                    const secondPattern = Math.floor(i / 4) % 4;\n\n                    const scale = Math.max(2 * Math.random(), 1.4);\n                    let x = firstPattern / 1.3 * (-1.5 * (7) + secondPattern * (7));\n                    x *= 1 + (-0.20 + Math.random() * 0.20);\n                    const z = 102 - (i % 4) / 3 * 18 - (Math.random() * (10 - 15 * Math.floor(secondPattern / 2)));\n\n                    clone.userData.petalColor = petalColor;\n                    clone.userData.ignited = false;\n                    clone.userData.phase = 'waxing';\n                    clone.userData.measure = 0; // [0 - 1] phase cutoff at 0.5;\n\n                    clone.scale.copy(new THREE.Vector3(scale, scale, scale));\n                    clone.position.copy(new THREE.Vector3(x, 1, z));\n\n                    lilyGroup.add(clone);\n                }\n\n                this.subjects.lilies = lilyGroup;\n                this.scene.add(lilyGroup);\n\n                resolve();\n            }, undefined, (err) => {\n                reject(err);\n            });\n        });\n    }\n\n    render() {\n\n        // this.controls.fpc.update(this.clock.getDelta());\n\n        /* \n         * RIPPLES\n         */\n\n        this.rhythmAnalyser.getFrequencyData().forEach((d, i) => {\n            const damping = 180 * (i / this.rhythmAnalyser.frequencyBinCount);\n            this.subjects.ripples.children[i].material.opacity = (d - damping) / 500;\n        });\n\n        /* \n         * STARS\n         */\n\n        const atmosphereFreqDataLeft = this.atmosphereAnalyser.getFrequencyData('left');\n        const atmosphereFreqDataRight = this.atmosphereAnalyser.getFrequencyData('right');\n\n        atmosphereFreqDataLeft.slice(1, 9).forEach((d, i) => {\n            this.subjects.stars.leftGroup.children[i].material.opacity = (d / 125);\n        });\n\n        atmosphereFreqDataRight.slice(1, 9).forEach((d, i) => {\n            this.subjects.stars.rightGroup.children[i].material.opacity = (d / 125);\n        });\n\n        /* \n         * TREES\n         */\n\n        // only render when sources are on\n        const harmonyFreqData = this.harmonyAnalyser.getFrequencyData();\n        this.subjects.pineTrees.children.forEach((child, i) => {\n            const freqIndex = Math.floor(i / 8);\n            const rawData = harmonyFreqData.slice([1 + freqIndex])[0];\n            const transformedData = Math.pow(rawData, 5) / (Math.pow(255, 5) * 0.060);\n\n            const color = new THREE.Color(this.palette.tropicalGreen);\n            color.lerp(new THREE.Color(this.palette.white), -1.5 + (transformedData));\n\n            child.children[0].material.color.set(color);\n        });\n\n        /* \n         * MOON\n         */\n\n        // only render when meaningful data is coming through the analyser\n        const avgBassVol = this.bassAnalyser.getFrequencyData().reduce((a, b) => { return a + b; }) / this.bassAnalyser.frequencyBinCount;\n\n        if (avgBassVol > 0) {\n\n            const bassFrequencies = this.bassAnalyser.getFrequencyData().slice(0, this.subjects.moonBeams.userData.numMoonRings);\n            const radius = this.subjects.moon.userData.radius * 0.5;\n\n            // set just the first moon beam's geometry\n            for (let moonRingIndex = 0; moonRingIndex < this.subjects.moonBeams.userData.numMoonRings; moonRingIndex++) {\n                for (let vertexCount = 0; vertexCount < this.subjects.moonBeams.userData.numVertices; vertexCount++) {\n                    const adj = (1 / (0.15 * (moonRingIndex + 1)));\n                    const rot = bassFrequencies[moonRingIndex] / 255;\n                    const moonRing = this.subjects.moonBeams.children[0].children[moonRingIndex];\n\n                    // TAKE 1: Really pretty shapes\n                    // moonRing.geometry.attributes.position.array[vertexCount*3] = (radius - 7 + (avgBassVol/3) * adj) * Math.cos(2 * Math.PI * (vertexCount/this.bassAnalyser.fftSize + rot/2));\n                    // moonRing.geometry.attributes.position.array[vertexCount*3+1] = (radius - 7 + (avgBassVol/3) * adj) * Math.sin(2 * Math.PI * (vertexCount/this.bassAnalyser.fftSize + rot));\n\n                    // TAKE 2: Outward fanning\n                    moonRing.geometry.attributes.position.array[vertexCount * 3] = (radius - 7 + (avgBassVol / 3) * adj) * Math.cos(2 * Math.PI * (vertexCount / this.bassAnalyser.fftSize + rot / 12));\n                    moonRing.geometry.attributes.position.array[vertexCount * 3 + 1] = (radius - 7 + (avgBassVol / 3) * adj) * Math.sin(2 * Math.PI * (vertexCount / this.bassAnalyser.fftSize + rot / 6));\n\n                    // TAKE 3: Beam like (original)\n                    // moonRing.geometry.attributes.position.array[vertexCount*3] = (radius - 7 + (avgBassVol/3) * adj) * Math.cos(2 * Math.PI * (vertexCount/this.bassAnalyser.fftSize + rot/6));\n                    // moonRing.geometry.attributes.position.array[vertexCount*3+1] = (radius - 7 + (avgBassVol/3) * adj) * Math.sin(2 * Math.PI * (vertexCount/this.bassAnalyser.fftSize + rot/2));\n\n                    moonRing.geometry.attributes.position.array[vertexCount * 3 + 2] = -81;\n                }\n            }\n\n            // copy the single moon beam's geometry into the other position arrays and update\n            this.subjects.moonBeams.children.forEach((moonBeam) => {\n                moonBeam.children.forEach((moonRing, moonRingIndex) => {\n                    moonRing.geometry.attributes.position.array = this.subjects.moonBeams.children[0].children[moonRingIndex].geometry.attributes.position.array;\n                    moonRing.geometry.setDrawRange(0, moonRing.geometry.attributes.position.count);\n                    moonRing.geometry.attributes.position.needsUpdate = true;\n                })\n            })\n        } else {\n\n        }\n\n\n        /* \n         * LILIES\n         */\n\n        const melodyFreqData = this.melodyAnalyser.getFrequencyData();//.slice(5);\n\n        let melodyVolume = 0;\n        let melodyCount = 0;\n\n        for (let i = 0; i < melodyFreqData.length; i++) {\n            melodyVolume += melodyFreqData[i];\n            melodyCount++;\n        }\n\n        const avgMelodyVolume = melodyVolume / melodyCount;\n\n        this.subjects.lilies.children.forEach((lily) => {\n\n            const data = lily.userData;\n            const increment = 0.11;\n\n            if (!data.ignited && avgMelodyVolume !== 0 & avgMelodyVolume * Math.random() > 55) {\n                data.ignited = true;\n            }\n            if (data.ignited && data.phase === 'waxing' && data.measure < 1) {\n                data.measure = Math.min(2, data.measure + increment * 70);\n            } else if (data.ignited && data.phase === 'waxing' && data.measure > 1) {\n                data.phase = 'waning';\n                data.measure += -1 * increment;\n            } else if (data.ignited && data.phase === 'waning' && data.measure < 0) {\n                data.ignited = false;\n                data.phase = 'waxing';\n            } else if (data.ignited && data.phase === 'waning') {\n                data.measure += -1 * increment;\n            }\n\n            const petalGroup = lily.getObjectByName('petalGroup');\n            petalGroup.children[0].children[0].material.color = lily.userData.petalColor.clone().lerp(new THREE.Color(0xFFFFFF), Math.max(0, (avgMelodyVolume / 105) * data.measure));\n\n        })\n\n        this.prevMelodyVolume = avgMelodyVolume;\n\n        /* \n         * FIREFLIES\n         */\n\n        const flyAmount = .3;\n        const flightNoise = 0.01;\n        this.subjects.fireflies.children.forEach((fly) => {\n            if (fly.userData.state === 'off' && Math.random() < 0.0005) {\n                fly.userData.state = 'lighting';\n                fly.userData.flightPath = new THREE.Vector3(-0.5 + Math.random(), -0.5 + Math.random(), -0.5 + Math.random());\n            }\n\n            if (fly.userData.state === 'lighting') {\n                fly.userData.cycle += 0.1;\n                if (fly.userData.cycle >= 1) {\n                    fly.userData.state = 'dimming';\n                }\n            }\n\n            if (fly.userData.state === 'dimming') {\n                fly.userData.cycle -= 0.025;\n                if (fly.userData.cycle <= 0) {\n                    fly.userData.state = 'off';\n                }\n            }\n\n            if (fly.userData.state === 'dimming' || fly.userData.state === 'lighting') {\n                const newX = Math.min(Math.max(fly.position.x + (fly.userData.flightPath.x + (flightNoise / -2 + flightNoise)) * flyAmount, -70), 140);\n                const newY = Math.min(Math.max(fly.position.y + (fly.userData.flightPath.x + (flightNoise / -2 + flightNoise)) * flyAmount, 5), 20);\n                const newZ = Math.min(Math.max(fly.position.z + (fly.userData.flightPath.x + (flightNoise / -2 + flightNoise)) * flyAmount, -20), 70);\n                fly.position.set(newX, newY, newZ);\n            }\n\n            fly.children[0].intensity = fly.userData.cycle / 2;\n            fly.children[1].material.opacity = fly.userData.cycle;\n\n        })\n\n        this.renderer.render(this.scene, this.camera);\n    }\n\n}","import { boundedSin } from 'crco-utils';\n\nconst period = 2;\nconst bSin = boundedSin(period, .2, .3);\n\nexport const renderRhythm = (subjects, analyser, extras) => {\n\n    const freqData = analyser.getFrequencyBuckets();\n\n    for (let i = 0; i < subjects.length; i++) {\n\n        const col = subjects[i];\n\n        for (let j = 0; j < col.length; j++) {\n\n            const row = col[j];\n\n            for (let k = 0; k < row.length; k++) {\n\n                const mod = (i + k) % 4 / 4;\n                const p = bSin(extras.beats + mod * period / 4)\n                const book = row[k];\n                book.material.emissiveIntensity = p * freqData[j] / 255;\n\n            }\n\n        }\n\n    }\n\n}","import * as THREE from 'three';\nimport { boundedSin } from 'crco-utils';\n\nconst w = 64 + 1;\nconst grey = new THREE.Color(0x333333);\nconst period = 4;\nconst bSin = boundedSin(period, .4, 1);\n\nexport const renderMelody = (subjects, analyser, extras) => {\n\n    const data = analyser.getFrequencyData();\n    const leftColors = subjects.leftPage.geometry.attributes.customColor;\n    const rightColors = subjects.rightPage.geometry.attributes.customColor;\n\n    for (let i = 0, count = leftColors.count; i < count; i++) {\n\n        const y = i % w;\n        const x = Math.floor(i / w);\n        const s = bSin(extras.beats - (x / w) * (y / w) * period);\n        const c = grey.clone().lerp(\n            new THREE.Color(extras.spectrumFunction(1 - (y / w))),\n            data[Math.ceil(y)] / 255\n        );\n\n        if (y % 4 === 0) {\n            leftColors.array[i * 4] = c.r;\n            leftColors.array[i * 4 + 1] = c.g;\n            leftColors.array[i * 4 + 2] = c.b;\n            leftColors.array[i * 4 + 3] = 1 * s;\n        } else {\n            leftColors.array[i * 4] = c.r;\n            leftColors.array[i * 4 + 1] = c.g;\n            leftColors.array[i * 4 + 2] = c.b;\n            leftColors.array[i * 4 + 3] = 0;\n        }\n\n        if (y % 4 === 0) {\n            rightColors.array[i * 4] = c.r;\n            rightColors.array[i * 4 + 1] = c.g;\n            rightColors.array[i * 4 + 2] = c.b;\n            rightColors.array[i * 4 + 3] = 1 * s;\n        } else {\n            rightColors.array[i * 4] = c.r;\n            rightColors.array[i * 4 + 1] = c.g;\n            rightColors.array[i * 4 + 2] = c.b;\n            rightColors.array[i * 4 + 3] = 0;\n        }\n\n    }\n\n    leftColors.needsUpdate = true;\n    rightColors.needsUpdate = true;\n\n}","// libs\nimport * as THREE from 'three';\nimport { SceneManager } from '../../SceneManager';\nimport FirstPersonControls from '../../controls/FirstPersonControls';\n\n// models\nimport houseModel from '../../models/mornings/house.glb';\nimport tableModel from '../../models/mornings/table.glb';\nimport flowerModel from '../../models/mornings/flowers.glb';\nimport spiralPlantModel from '../../models/mornings/spiral_plant.glb';\nimport bookcaseModel from '../../models/mornings/bookcase.glb';\nimport paintingsModel from '../../models/mornings/paintings.glb';\n\n// rendering\nimport { renderBass } from './renderBass';\nimport { renderRhythm } from './renderRhythm';\nimport { renderHarmony } from './renderHarmony';\nimport { renderMelody } from './renderMelody';\n\n// shaders\nimport { rgbaVertex, rgbaFragment } from '../../shaders/rgba';\n\nexport class Mornings extends SceneManager {\n\n    constructor(canvas, analysers, extras) {\n\n        super(canvas);\n\n        this.colors = {\n            plant: new THREE.Color(0x7B9E53),\n            white: new THREE.Color(0xFFFFFF)\n        };\n\n        // after rendering these once, turn off auto-updates to optimize further renders\n        this.staticObjects = [];\n        this.renderList = [\n            'house', 'plant', 'table', 'bookshelf', 'flower'\n            // 'table'\n        ];\n        this.spectrumFunction = extras.spectrumFunction;\n        this.bpm = extras.bpm;\n\n        this.rhythmAnalyser = analysers.find(a => a.id === 'rhythm-analyser');\n        this.atmosphereAnalyser = analysers.find(a => a.id === 'atmosphere-analyser');\n        this.harmonyAnalyser = analysers.find(a => a.id === 'harmony-analyser');\n        this.melodyAnalyser = analysers.find(a => a.id === 'melody-analyser');\n        this.bassAnalyser = analysers.find(a => a.id === 'bass-analyser');\n\n        this.fovAdjust = true;\n        this.fpcControl = false;\n\n        Promise.all([\n            super.init(),\n            this.loadModels(this.renderList)\n        ]).then(() => {\n            this.applySceneSettings();\n            this.render(this.renderList); // render once to get objects in place\n            this.staticObjects.forEach(mesh => mesh.matrixAutoUpdate = false); // freeze static objects\n            super.animate();\n        }).catch((err) => {\n            console.log(err);\n        });\n\n    }\n\n    applySceneSettings() {\n\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.shadowMap.type = THREE.PCFSoftShadowMap; // default THREE.PCFShadowMap\n\n        this.camera.position.set(-36.792147432025736, 12.295984744079584, 19.50565058881036);\n        this.camera.lookAt(46.69487932551039, 2.382592629313793, -34.638979984916375);\n        this.camera.fov = this.getNewFov(window.innerWidth / window.innerHeight);\n        this.camera.updateProjectionMatrix();\n\n    }\n\n    getNewFov(aspectRatio) {\n        const fovMin = 25;\n        const fovMax = 50;\n        const aspectMin = 0.5;\n        const aspectMax = 3;\n        const aspectAdj = Math.max(aspectMin, Math.min(aspectRatio, aspectMax));\n        const newFov = fovMax - (fovMax - fovMin) * (aspectAdj - aspectMin) / (aspectMax - aspectMin);\n        return newFov;\n    }\n\n    initControls() {\n\n        const controls = {};\n\n        if (this.fpcControl) {\n            controls.fpc = new FirstPersonControls(this.camera);\n        }\n\n        return controls;\n\n    }\n\n    initScene() {\n\n        const scene = new THREE.Scene();\n        scene.background = new THREE.Color(0xcccccc);\n        return scene;\n\n    }\n\n    initLights() {\n\n        const MAPSIZE = 512;\n        const CAMERASIZE = 20;\n        const TILT = (10 / 180) * Math.PI;\n        const OPP_RATIO = -1 * Math.sin(TILT);\n\n        const lights = {\n            ambient: new THREE.AmbientLight(0xffffff, .35),\n            sunlight: new THREE.DirectionalLight(0xffffff, 0),\n            pointOne: new THREE.PointLight(0xffffff, .1)\n        }\n\n        const sunX = 20;\n        const sunZ = -100\n        const sunY = sunZ * OPP_RATIO;\n\n        lights.sunlight.position.copy(new THREE.Vector3(sunX, sunY, sunZ));\n        lights.sunlight.target.position.copy(new THREE.Vector3(sunX, 0, 0));\n        lights.sunlight.castShadow = true;\n        lights.sunlight.shadowBias = 0.0001;\n        lights.sunlight.shadowMapHeight = MAPSIZE;\n        lights.sunlight.shadowMapWidth = MAPSIZE;\n        lights.sunlight.shadow.camera.top = CAMERASIZE;\n        lights.sunlight.shadow.camera.bottom = -1 * CAMERASIZE;\n        lights.sunlight.shadow.camera.left = -1 * CAMERASIZE;\n        lights.sunlight.shadow.camera.right = CAMERASIZE;\n\n        lights.pointOne.position.set(-36.792147432025736, 12.295984744079584, 19.50565058881036);\n        lights.pointOne.castShadow = true;\n        lights.pointOne.shadowBias = 0.0001;\n        lights.pointOne.shadowMapHeight = MAPSIZE;\n        lights.pointOne.shadowMapWidth = MAPSIZE;\n\n        this.scene.add(lights.ambient);\n        this.scene.add(lights.sunlight);\n        this.scene.add(lights.sunlight.target);\n        this.scene.add(lights.pointOne);\n\n        return lights;\n\n    }\n\n    loadModels(modelList) {\n\n        return new Promise((resolve, reject) => {\n\n            const loadPromiseArray = []\n\n            // house and god rays\n            modelList.indexOf('house') !== -1 && loadPromiseArray.push(\n                new Promise((resolve, reject) => {\n\n                    this.subjects.godrays = {};\n                    this.subjects.godrays.materials = [];\n                    this.subjects.godrays.meshes = [];\n\n                    this.subjects.godrays.materials.push(new THREE.MeshBasicMaterial({\n                        color: this.colors.white,\n                        opacity: 0.05,\n                        transparent: true,\n                        side: THREE.DoubleSide\n                    }));\n\n                    this.helpers.gltfLoader.load(houseModel, (gltf) => {\n\n                        gltf.scene.children.forEach((mesh) => {\n\n                            // every mesh is static\n                            this.staticObjects.push(mesh);\n\n                            if (mesh.name === 'god_rays_top' || mesh.name === 'god_rays_bottom') {\n                                mesh.material = this.subjects.godrays.materials[0];\n                                this.subjects.godrays.meshes.push(mesh);\n                            }\n\n                            if (mesh.name === 'house_window_structure' || mesh.name === 'house_walls') {\n                                mesh.castShadow = true;\n                            }\n\n                            if (mesh.name === 'house_floor' || mesh.name === 'carpet') {\n                                mesh.receiveShadow = true;\n                            }\n\n                        });\n\n                        this.scene.add(gltf.scene);\n                        resolve();\n\n                    }, null, (err) => reject(err));\n\n                })\n            );\n\n            // paintings\n            modelList.indexOf('house') !== -1 && loadPromiseArray.push(\n                new Promise((resolve, reject) => {\n\n                    this.helpers.gltfLoader.load(paintingsModel, (gltf) => {\n\n                        console.log(gltf);\n\n                        gltf.scene.children.forEach((mesh) => {\n\n                            // every mesh is static\n                            this.staticObjects.push(mesh);\n\n                            mesh.name === 'vonnegut_self_portrait' && (mesh.material.side = THREE.FrontSide);\n                            mesh.name === 'van_gogh' && (mesh.material.side = THREE.BackSide);\n\n                        });\n\n                        this.scene.add(gltf.scene);\n                        resolve();\n\n                    }, null, (err) => reject(err));\n\n                })\n            );\n\n            // table\n            modelList.indexOf('table') !== -1 && loadPromiseArray.push(\n                new Promise((resolve, reject) => {\n\n                    this.helpers.gltfLoader.load(tableModel, (gltf) => {\n\n                        const pageGeo = new THREE.PlaneBufferGeometry(1.9, 1.8, 64, 64);\n                        pageGeo.rotateX(-Math.PI / 2);\n                        console.log(pageGeo.attributes.position);\n\n                        gltf.scene.children.forEach((mesh) => {\n\n                            if (mesh.name === 'left_page_ref' || mesh.name === 'right_page_ref') {\n\n                                const colors = new Array(pageGeo.attributes.position.count * 4)\n\n                                // for (let i = 0; i < pageGeo.attributes.position.count; i++) {\n                                //     const c = i / pageGeo.attributes.position.count;\n                                //     colors.push(c, c, c, 1)\n                                // }\n\n                                const newMesh = mesh.clone();\n                                newMesh.geometry = pageGeo.clone();\n                                newMesh.geometry.addAttribute('customColor', new THREE.Float32BufferAttribute(colors, 4));\n                                newMesh.material = new THREE.ShaderMaterial({\n                                    transparent: true,\n                                    side: THREE.DoubleSide,\n                                    vertexShader: rgbaVertex,\n                                    fragmentShader: rgbaFragment,\n                                    vertexColors: THREE.VertexColors\n                                })\n\n                                this.scene.add(newMesh);\n\n                                mesh.name === 'right_page_ref' && (this.subjects.rightPage = newMesh);\n                                mesh.name === 'left_page_ref' && (this.subjects.leftPage = newMesh);\n\n                            }\n\n                            if (mesh.name === 'steam') {\n                                mesh.material = new THREE.MeshBasicMaterial({\n                                    color: this.colors.white,\n                                    transparent: true,\n                                    side: THREE.DoubleSide,\n                                    opacity: .025\n                                })\n                                this.subjects.steam = mesh;\n                            } else {\n                                // every mesh is static except steam\n                                this.staticObjects.push(mesh);\n                            }\n\n                            mesh.castShadow = true;\n\n                            if (mesh.name === 'table') {\n                                mesh.receiveShadow = true;\n                            }\n\n                        });\n\n                        gltf.scene.children.filter(c => c.name.includes('page')).forEach(mesh => gltf.scene.remove(mesh));\n                        this.scene.add(gltf.scene);\n\n                        resolve();\n\n                    }, null, (err) => reject(err))\n                })\n            );\n\n            // flowers\n            modelList.indexOf('flower') !== -1 && loadPromiseArray.push(\n                new Promise((resolve, reject) => {\n\n                    const stickLeaves = [];\n                    const stickLeavesOne = [];\n\n                    this.helpers.gltfLoader.load(flowerModel, (gltf) => {\n\n                        gltf.scene.children.forEach((mesh) => {\n\n                            // every mesh is static\n                            this.staticObjects.push(mesh);\n\n                            if (mesh.name.includes('stick_leaves_one')) {\n                                mesh.material = new THREE.MeshLambertMaterial({\n                                    color: this.colors.plant,\n                                    emissive: this.colors.plant,\n                                    emissiveIntensity: 0\n                                })\n                                stickLeavesOne.push(mesh);\n                            } else if (mesh.name.includes('stick_leaves')) {\n                                mesh.material = new THREE.MeshLambertMaterial({\n                                    color: this.colors.plant,\n                                    emissive: this.colors.plant,\n                                    emissiveIntensity: 0\n                                })\n                                stickLeaves.push(mesh);\n                            }\n\n                        })\n\n                        this.subjects.stickLeaves = stickLeaves;\n                        this.subjects.stickLeavesOne = stickLeavesOne;\n\n                        this.scene.add(gltf.scene);\n\n                        resolve();\n\n                    }, null, () => reject())\n                })\n            );\n\n            // spiral plant\n            modelList.indexOf('plant') !== -1 && loadPromiseArray.push(\n                new Promise((resolve, reject) => {\n\n                    this.helpers.gltfLoader.load(spiralPlantModel, (gltf) => {\n\n                        const leaves = [];\n\n                        gltf.scene.children\n                            .filter(mesh => mesh.name.includes('spiral_plant_leaf'))\n                            .forEach(mesh => {\n                                mesh.material = new THREE.MeshLambertMaterial({\n                                    color: this.colors.plant,\n                                    emissive: this.colors.plant,\n                                    emissiveIntensity: 0\n                                })\n                                leaves.push(mesh);\n                            });\n\n                        this.subjects.spiralPlantLeaves = leaves;\n\n                        this.scene.add(gltf.scene);\n\n                        resolve();\n\n                    }, null, (err) => reject(err))\n                })\n            );\n\n            // bookshelf\n            modelList.indexOf('bookshelf') !== -1 && loadPromiseArray.push(\n                new Promise((resolve, reject) => {\n\n                    // 3d array: columns, rows, books in cell\n                    this.subjects.books = new Array(4).fill(null).map(d => new Array(5).fill(null).map(d => []));\n\n                    this.helpers.gltfLoader.load(bookcaseModel, (gltf) => {\n\n                        const pageMat = new THREE.MeshLambertMaterial({ color: 0xE7DACA, side: THREE.DoubleSide });\n\n                        gltf.scene.children.forEach((mesh) => {\n\n                            // every mesh is static\n                            this.staticObjects.push(mesh);\n\n                            if (mesh.name.includes('book') && !mesh.name.includes('bookcase') && mesh.type === 'Group') {\n\n                                const name = mesh.name;\n                                const z = parseInt(name.slice(name.length - 1, name.length));\n                                const y = parseInt(name.slice(name.length - 2, name.length - 1));\n                                const x = parseInt(name.slice(name.length - 3, name.length - 2));\n                                const r = -.1 + Math.random() * .2\n                                const c = new THREE.Color(this.spectrumFunction(1 - ((r + y + .5) / 5)));\n\n                                const bookMesh = mesh.children.find(mesh => mesh.material.name.includes('book'));\n                                const pageMesh = mesh.children.find(mesh => mesh.material.name.includes('page'));\n\n                                pageMesh.material = pageMat;\n                                bookMesh.material = new THREE.MeshLambertMaterial({\n                                    color: c,\n                                    side: THREE.DoubleSide,\n                                    emissive: c,\n                                    emissiveIntensity: .1\n                                });\n\n                                this.subjects.books[x][y][z] = bookMesh;\n\n                            }\n\n                        });\n\n                        this.scene.add(gltf.scene);\n\n                        resolve();\n\n                    }, null, (err) => reject(err))\n                })\n            );\n\n            Promise.all(loadPromiseArray).then(() => {\n                resolve();\n            }).catch((err) => {\n                reject(`Error loading models: ${err}`);\n            });\n\n        })\n\n    }\n\n    render() {\n\n        this.elapsedBeats = this.bpm * this.clock.getElapsedTime() / 60;\n        this.fpcControl && this.controls.fpc.update(this.clock.getDelta());\n\n        this.subjects.steam.rotateY(-.05);\n\n        this.renderList.indexOf('table') !== -1 && renderMelody({\n            leftPage: this.subjects.leftPage,\n            rightPage: this.subjects.rightPage\n        }, this.melodyAnalyser, {\n            spectrumFunction: this.spectrumFunction,\n            beats: this.elapsedBeats\n        });\n\n        this.renderList.indexOf('house') !== -1 && renderBass(this.subjects.godrays, this.bassAnalyser, {\n            sunlight: this.lights.sunlight\n        });\n\n        this.renderList.indexOf('bookshelf') !== -1 && renderRhythm(this.subjects.books, this.rhythmAnalyser, {\n            spectrumFunction: this.spectrumFunction,\n            beats: this.elapsedBeats\n        });\n\n        this.renderList.indexOf('plant') !== -1 && renderHarmony({\n            leaves: this.subjects.spiralPlantLeaves,\n            stickLeaves: this.subjects.stickLeaves,\n            stickLeavesOne: this.subjects.stickLeavesOne,\n            group: this.subjects.spiralPlantGroup,\n            box: this.subjects.spiralPlantBox\n        }, this.harmonyAnalyser, {\n            beats: this.elapsedBeats\n        });\n\n        this.renderer.render(this.scene, this.camera);\n    }\n\n}","export const rgbaVertex = `\n    attribute vec4 customColor;\n    varying vec4 vColor;\n    void main() {\n        vColor = customColor;\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n        gl_Position = projectionMatrix * mvPosition;\n    }\n`\n\nexport const rgbaFragment = `\n    varying vec4 vColor;\n    void main() {\n        gl_FragColor = vColor;\n    }\n`","\nimport * as d3 from 'd3-ease';\n\nconst VOL_COEF = .0003;\nconst MAX_OPACITY = .2;\nconst MIN_OPACITY = .025;\nconst MAX_SUN = 1;\nconst MIN_SUN = .25\n\nexport const renderBass = (subjects, analyser, extras) => {\n\n    let volume = 0;\n\n    const freqData = analyser.getFrequencyData();\n\n    for (let i = 0, n = analyser.frequencyBinCount; i < n; i++) {\n\n        volume += freqData[i];\n\n    }\n\n    const brightnessFactor = d3.easeQuadInOut(volume * VOL_COEF);\n\n    subjects.materials[0].opacity = MIN_OPACITY + brightnessFactor * (MAX_OPACITY - MIN_OPACITY);\n    extras.sunlight.intensity = MIN_SUN + brightnessFactor * (MAX_SUN - MIN_SUN);\n\n}","export const renderHarmony = (subjects, analyser, extras) => {\n\n    const data = analyser.getFrequencyData();\n\n    for (let i = 0; i < subjects.leaves.length; i++) {\n        const fIndex = analyser.binMin + Math.round((i / subjects.leaves.length) * (analyser.binMax - analyser.binMin));\n        subjects.leaves[i].material.emissiveIntensity = data[fIndex] / 255;\n    }\n\n    for (let i = 0; i < subjects.stickLeaves.length; i++) {\n        const fIndex = analyser.binMin + Math.round((i / subjects.stickLeaves.length) * (analyser.binMax - analyser.binMin));\n        subjects.stickLeaves[i].material.emissiveIntensity = data[fIndex] / 255;\n    }\n\n    for (let i = 0; i < subjects.stickLeavesOne.length; i++) {\n        const fIndex = analyser.binMin + Math.round((i / subjects.stickLeavesOne.length) * (analyser.binMax - analyser.binMin));\n        subjects.stickLeavesOne[i].material.emissiveIntensity = data[fIndex] / 255;\n    }\n\n}","// libs\nimport React from 'react';\n\nexport const Canvas = (props) => {\n\n    const canvasRef = React.useRef(null);\n\n    React.useEffect(() => {\n\n        const pixelRatio = typeof document !== 'undefined' ? window.devicePixelRatio : 1;\n\n        const setCanvasSize = () => {\n\n            // resize to device pixel ratio\n            canvasRef.current.clientWidth !== 0 && (canvasRef.current.width = pixelRatio * canvasRef.current.clientWidth);\n\n            // height depends on props.makeSquare\n            if (props.makeSquare) {\n                canvasRef.current.clientHeight !== 0 && (canvasRef.current.height = pixelRatio * canvasRef.current.clientWidth);\n            } else {\n                canvasRef.current.clientHeight !== 0 && (canvasRef.current.height = pixelRatio * canvasRef.current.clientHeight);\n            }\n\n            // trigger the resize callback\n            if (props.resize !== false && props.onResize !== undefined) {\n                props.onResize(canvasRef.current);\n            }\n\n        }\n\n        // set initial dimensions\n        setCanvasSize();\n\n        // unless explicity false, add event listener for resize\n        props.resize !== false && window.addEventListener('resize', setCanvasSize);\n\n        // trigger the onload callback\n        props.onLoad !== undefined && props.onLoad(canvasRef.current);\n\n        return () => props.resize !== false && window.removeEventListener('resize', setCanvasSize);\n\n    }, [props])\n\n    return (\n        <canvas\n            id={props.id}\n            className={props.className}\n            ref={canvasRef}\n        />\n    );\n\n}","// libs\nimport React from 'react';\n\n// scenes\nimport { Moonrise } from '../viz/scenes/moonrise/Moonrise';\nimport { Mornings } from '../viz/scenes/mornings/Mornings';\n\n// components\nimport { Canvas } from '../components/Canvas';\n\n// context\nimport { SongContext } from '../contexts/contexts';\nimport { TestingContext } from '../contexts/contexts';\nimport { MusicPlayerContext } from '../contexts/contexts';\nimport { ThemeContext } from '../contexts/contexts';\n\n// styles\nimport '../styles/components/CanvasViz.scss';\n\nexport const CanvasViz = () => {\n\n    const { spectrumFunction } = React.useContext(ThemeContext);\n    const { id, groups, bpm } = React.useContext(SongContext);\n    const { analysers } = React.useContext(MusicPlayerContext);\n    const flagShowVisuals = React.useContext(TestingContext).flags.showVisuals;\n\n    const canvasRef = React.useRef(null);\n    const sceneRef = React.useRef(null);\n\n    React.useEffect(() => {\n        if (groups.length === analysers.length) {\n\n            let newScene;\n\n            switch (id) {\n                case 'moonrise':\n                    if (flagShowVisuals) {\n                        newScene = new Moonrise(canvasRef.current, analysers);\n                        sceneRef.current = newScene;\n                    }\n                    break;\n                case 'mornings':\n                    if (flagShowVisuals) {\n                        newScene = new Mornings(canvasRef.current, analysers, {\n                            spectrumFunction,\n                            bpm\n                        });\n                        sceneRef.current = newScene\n                    }\n                    break;\n                default:\n                    throw new Error('Song not found');\n            }\n\n            if (flagShowVisuals) {\n                window.addEventListener('resize', sceneRef.current.onWindowResize);\n                window.addEventListener('orientationchange', sceneRef.current.onWindowResize);\n                window.addEventListener('fullscreenchange', sceneRef.current.onWindowResize);\n            }\n\n            return () => {\n                newScene.stop();\n                newScene.disposeAll(newScene.scene);\n            }\n\n        }\n    }, [bpm, groups, spectrumFunction, flagShowVisuals, id, analysers]);\n\n    return (\n        <Canvas\n            id='canvas-viz'\n            className='fullscreen'\n            onLoad={(canvas) => canvasRef.current = canvas}\n        />\n    )\n\n}","// libs\nimport React from 'react';\nimport anime from 'animejs';\n\n// context\nimport { MusicPlayerContext } from '../contexts/contexts';\n\n// styles\nimport '../styles/components/EffectsPanel.scss';\n\nexport const EffectsPanel = (props) => {\n\n    const hpRef = React.useRef();\n    const lpRef = React.useRef();\n    const ambienceRef = React.useRef();\n\n    const { dispatch, randomizeEffects } = React.useContext(MusicPlayerContext);\n\n    const handleReset = React.useCallback(() => {\n\n        // reset hp\n        hpRef.current.value = 1;\n        dispatch({ type: 'setHighpass', payload: { value: 1 } })\n\n        // reset lp\n        lpRef.current.value = 100;\n        dispatch({ type: 'setLowpass', payload: { value: 100 } })\n\n        // reset spaciousness\n        ambienceRef.current.value = 1;\n        dispatch({ type: 'setAmbience', payload: { value: 1 } })\n\n    }, [dispatch]);\n\n    React.useEffect(() => handleReset(), [handleReset]);\n\n    return (\n\n        <div id='effects-panel' className='flex-panel'>\n\n            <h2>Effects</h2>\n\n            <div className='flex-row'>\n                <button\n                    className='button-white grouped-buttons'\n                    id='effects-panel-reset'\n                    onClick={() => handleReset()}\n                >\n                    Reset\n                    </button>\n\n                {/* <button\n                    id='effects-panel-randomize'\n                    onClick={() => dispatch({ type: 'setRandomizeEffects', payload: !randomizeEffects })}\n                >\n                    Background Mode\n                    </button> */}\n\n                <button\n                    className='button-white grouped-buttons'\n                    id='effects-panel-randomize'\n                    onClick={() => {\n\n                        const h = 1 + 99 * Math.random();\n                        const l = 1 + 99 * Math.random();\n                        const a = 1 + 99 * Math.random();\n\n                        dispatch({ type: 'setHighpass', payload: { value: h } });\n                        dispatch({ type: 'setLowpass', payload: { value: l } });\n                        dispatch({ type: 'setAmbience', payload: { value: a } });\n\n                        hpRef.current.value = h;\n                        lpRef.current.value = l;\n                        ambienceRef.current.value = a;\n\n                    }\n                    }>\n                    Randomize\n                    </button>\n            </div>\n\n            <div className='flex-row effect-panel-row'>\n                <h3 className='slider-label'>highpass filter</h3>\n            </div>\n            <div className='flex-row effect-panel-row'>\n                <input type=\"range\" min=\"1\" max=\"100\" disabled={randomizeEffects} className=\"slider\" id=\"hp-slider\" ref={hpRef}\n                    onInput={(e) => {\n                        dispatch({ type: 'setHighpass', payload: { value: e.target.value } });\n                    }}\n                ></input>\n            </div>\n            <div className='flex-row effect-panel-row'>\n                <h3 className='slider-label'>lowpass filter</h3>\n            </div>\n            <div className='flex-row effect-panel-row'>\n                <input type=\"range\" min=\"1\" max=\"100\" disabled={randomizeEffects} className=\"slider\" id=\"lp-slider\" ref={lpRef}\n                    onInput={(e) => {\n                        dispatch({ type: 'setLowpass', payload: { value: e.target.value } });\n                    }}\n                ></input>\n            </div>\n            <div className='flex-row effect-panel-row'>\n                <h3 className='slider-label'>ambience</h3>\n            </div>\n            <div className='flex-row effect-panel-row'>\n                <input type=\"range\" min=\"1\" max=\"100\" disabled={randomizeEffects} className=\"slider\" id=\"spaciousness-slider\" ref={ambienceRef}\n                    onChange={(e) => {\n                        dispatch({ type: 'setAmbience', payload: { value: e.target.value } });\n                    }}\n                ></input>\n            </div>\n\n        </div >\n    );\n}","// libs\nimport React from 'react';\n\nexport const useAnimationFrame = (render) => {\n\n    const requestRef = React.useRef();\n    const previousTimeRef = React.useRef();\n\n    React.useEffect(() => {\n\n        const animate = (time) => {\n            if (previousTimeRef.current !== undefined) {\n                const delta = time - previousTimeRef.current;\n                render({ delta, time });\n            }\n            previousTimeRef.current = time;\n            requestRef.current = window.requestAnimationFrame(animate);\n        }\n\n        requestRef.current = window.requestAnimationFrame(animate);\n        return () => window.cancelAnimationFrame(requestRef.current);\n\n    }, [render]);\n\n}","// libs\nimport React from 'react';\n\n// components\nimport { Canvas } from '../components/Canvas';\n\n// hooks\nimport { useAnimationFrame } from '../hooks/useAnimationFrame';\n\n// contexts\nimport { ThemeContext } from '../contexts/contexts';\nimport { SongContext } from '../contexts/contexts';\n\n// styles\nimport '../styles/components/FreqBands.scss';\n\nexport const FreqBands = (props) => {\n\n    const { spectrumFunction } = React.useContext(ThemeContext);\n    const { bpm, timeSignature } = React.useContext(SongContext);\n\n    const secondsPerBar = 60 / bpm * timeSignature;\n\n    const canvasRef = React.useRef(null);\n    const contextRef = React.useRef(null);\n\n    const render = React.useCallback((canvas, context, time) => {\n\n        const radius = canvas.height / 2 - (canvas.height / props.premasterAnalyser.frequencyBinCount);\n\n        // calculate cycle time \n        const cycleTime = (time / 1000) / (secondsPerBar * 4);\n\n        // clear previous draw\n        context.clearRect(0, 0, canvas.height, canvas.height);\n\n        // get time domain data\n        const dataArray = props.premasterAnalyser.getFrequencyData();\n\n        // map time domain data to canvas draw actions\n        dataArray.forEach((d, i) => {\n\n            const vol = (d / 255);\n            const cx = canvas.width / 2 + radius * Math.cos((i / props.premasterAnalyser.frequencyBinCount * 2 * Math.PI + (cycleTime * Math.PI * 2)));\n            const cy = canvas.height / 2 + radius * Math.sin((i / props.premasterAnalyser.frequencyBinCount * 2 * Math.PI + (cycleTime * Math.PI * 2)));\n\n            context.beginPath();\n\n            context.fillStyle = spectrumFunction(i / props.premasterAnalyser.frequencyBinCount);\n\n            context.globalAlphs = vol;\n\n            context.moveTo(cx, cy);\n\n            context.arc(\n                cx,\n                cy,\n                (canvas.height / props.premasterAnalyser.frequencyBinCount) * vol,\n                0,\n                Math.PI * 2\n            );\n\n            context.fill();\n\n        });\n\n    }, [props, spectrumFunction, secondsPerBar]);\n\n    useAnimationFrame((t) => render(canvasRef.current, contextRef.current, t.time))\n\n    return React.useMemo(() => (\n        <div id='freq-bands'>\n            <Canvas\n                id='freq-bands-canvas'\n                onLoad={(canvas) => {\n                    canvasRef.current = canvas;\n                    contextRef.current = canvas.getContext('2d');\n                }}\n            />\n        </div>\n    ), []);\n\n}","// libs\nimport React, { useContext } from 'react';\n\n// contexts\nimport { LayoutContext } from '../contexts/contexts';\nimport { ThemeContext } from '../contexts/contexts';\n\n// styles\nimport '../styles/components/MenuButtonContentWrapper.scss';\n\nexport const MenuButtonContentWrapper = (props) => {\n\n    const { vw, vh } = useContext(LayoutContext);\n    const { contentPanelColor } = useContext(ThemeContext);\n\n    return (\n        <div\n            className='menu-button-content'\n            style={{\n                background: contentPanelColor,\n                display: !props.parentIsOpen && 'none',\n                marginTop: props.marginTop,\n                minWidth: props.minWidth,\n                maxHeight: 82 * vh,\n                maxWidth: 95 * vw,\n                padding: 4 * vh,\n            }}\n        >\n\n            {props.content}\n\n        </div>\n    );\n}","import React from 'react'\n\nimport icons from '../assets/svg/iconList.svg';\n\nimport '../styles/components/Icon.scss';\n\nexport const Icon = (props) => {\n\n    const iconRef = React.useRef(null);\n\n    if (props.handleAddIconRef) { props.handleAddIconRef(iconRef) };\n\n    return (\n        <div id='scale-div' className={props.divClassList ? `icon ${props.divClassList}` : 'icon'}>\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                className={props.svgClassList ? `icon ${props.svgClassList}` : 'icon'}\n                style={props.style}\n                id={props.name}\n            >\n                <use ref={iconRef} xlinkHref={`${icons}#${props.name}`} />\n            </svg>\n        </div>\n    )\n}","// libs\nimport React from 'react';\n\n// components\nimport { MenuButtonContentWrapper } from './MenuButtonContentWrapper';\nimport { Icon } from '../components/Icon';\n\n// contexts\nimport { ThemeContext } from '../contexts/contexts';\n\n// styles\nimport '../styles/components/MenuButtonChild.scss';\n\nexport const MenuButtonChild = (props) => {\n\n    const { autoOpen, setOpenChildIndex, index } = props;\n\n    const { buttonColor, contentPanelColor } = React.useContext(ThemeContext);\n\n    // track state\n    const [isOpen, setIsOpen] = React.useState(false);\n\n    // if another button in the set is open, close this button\n    React.useEffect(() => { props.openChildIndex !== props.index && setIsOpen(false) }, [props.openChildIndex, props.index])\n\n    // open button once if autoOpen === true\n    React.useEffect(() => {\n        if (autoOpen) {\n            setOpenChildIndex(index);\n            setIsOpen(true);\n        }\n    }, [autoOpen, setOpenChildIndex, index])\n\n    // calculate the margin needed to expand this child to its outward position\n    const marginStyle = ((props.parentWidth + props.width) / 2) + props.separation + (2 * props.separation * (props.index - 1));\n\n    // assign classes\n    const classPrefix = 'menu-button-child'\n\n    let classList = classPrefix;\n\n    if (props.parentIsOpen) { classList += ` ${classPrefix}-expand` }\n    if (isOpen) { classList += ` ${classPrefix}-open` }\n\n    return (\n        <>\n            <button\n                className={classList}\n                onClick={(e) => {\n                    e.preventDefault();\n                    if (isOpen) {\n                        // tell the parent that this button is closed\n                        props.setOpenChildIndex(-1);\n                    } else {\n                        // tell the parent that this button is open, which closes other buttons\n                        props.setOpenChildIndex(props.index)\n                    }\n                    setIsOpen(!isOpen);\n                }}\n                style={{\n                    background: buttonColor,\n                    width: props.width,\n                    height: props.height,\n                    top: (props.parentHeight - props.height) / 2,\n                    left: (props.parentWidth - props.width) / 2,\n                    marginLeft: props.direction === 'right' && props.parentIsOpen ? marginStyle : 0,\n                    marginRight: props.direction === 'left' && props.parentIsOpen ? marginStyle : 0,\n                    marginTop: props.direction === 'down' && props.parentIsOpen ? marginStyle : 0,\n                    marginBottom: props.direction === 'down' && props.parentIsOpen ? marginStyle : 0,\n                    zIndex: props.zIndex\n                }}\n            >\n                {props.name}\n\n                <Icon\n                    divClassList={'icon-white'}\n                    svgClassList={'icon-white'}\n                    name={props.iconName}\n                />\n\n            </button>\n\n            {/* Arrow\n            - connects button to content\n            - size matches button size\n            - uses a CSS trick to create an arrow with borders https://css-tricks.com/snippets/css/css-triangle/\n            - TODO: implement arrow directionality based on which side the content is display and how the menu opens\n            */}\n            <div\n                className='arrow'\n                style={{\n                    borderBottomColor: contentPanelColor,\n                    display: !isOpen && 'none',\n                    top: props.height + (props.parentHeight - props.height) / 2,\n                    left: (props.parentWidth - props.width) / 2 - props.parentHeight / 8,\n                    marginLeft: props.direction === 'right' && props.parentIsOpen ? marginStyle : 0,\n                    marginRight: props.direction === 'left' && props.parentIsOpen ? marginStyle : 0,\n                    marginTop: props.direction === 'down' && props.parentIsOpen ? marginStyle : 0,\n                    marginBottom: props.direction === 'down' && props.parentIsOpen ? marginStyle : 0,\n                    borderRightWidth: props.parentHeight / 4 + (props.parentHeight - props.height) / 2,\n                    borderBottomWidth: props.parentHeight / 4 + (props.parentHeight - props.height) / 2,\n                    borderLeftWidth: props.parentHeight / 4 + (props.parentHeight - props.height) / 2\n                }}\n            />\n\n            {/* Content\n            - allows content to be passed down the tree and displayed by the button\n            - width is at least as big as the expanded menu\n            */}\n            <MenuButtonContentWrapper\n                content={props.content}\n                config={props.config}\n                parentIsOpen={isOpen}\n                minWidth={props.menuWidth + props.width}\n                marginTop={props.parentHeight / 4}\n            />\n\n        </>\n    )\n\n}","// libs\nimport React, { useState, useEffect, useRef, useContext } from 'react';\n\n// components\nimport { MenuButtonChild } from './MenuButtonChild';\nimport { Icon } from './Icon';\n\n// contexts\nimport { ThemeContext } from '../contexts/contexts';\nimport { LayoutContext } from '../contexts/contexts';\n\n// styles\nimport '../styles/components/MenuButtonParent.scss';\n\nexport const MenuButtonParent = (props) => {\n\n    const { vh } = useContext(LayoutContext);\n    const { buttonColor } = useContext(ThemeContext);\n\n    // parent button dimensions\n    const height = 7 * vh;\n    const width = height;\n\n    // div position\n    const top = 2.5 * vh;\n    const left = top;\n\n    const childHeight = 0.6 * height;\n    const childWidth = childHeight;\n\n    const separation = childWidth;\n\n    // track elements inside the menu\n    const node = useRef();\n\n    // set state\n    const [isOpen, setIsOpen] = useState(true);\n    const [openChildIndex, setOpenChildIndex] = useState(-1);\n    const numOfChildren = props.childButtonProps.length;\n\n    // add and remove event listeners to handle outside clicks\n    useEffect(() => {\n\n        // handle click events outside of the node's dom\n        const handleOutsideClick = (e) => {\n            if (!node.current.contains(e.target)) {\n                // if a child menu is open, close it\n                if (openChildIndex !== -1) {\n                    setOpenChildIndex(-1);\n                    return;\n                    // if child menus are all close, close the parent menu\n                } else if (isOpen) {\n                    setIsOpen(false);\n                    return;\n                }\n            }\n        }\n\n        if (isOpen) {\n            document.addEventListener('mousedown', handleOutsideClick);\n        } else {\n            document.removeEventListener('mousedown', handleOutsideClick);\n        }\n        return () => {\n            document.removeEventListener('mousedown', handleOutsideClick);\n        };\n    }, [isOpen, openChildIndex]);\n\n    return (\n\n        <div\n            className='menu-button'\n            style={{\n                top,\n                left\n            }}\n            ref={node}\n        >\n\n            <button\n                className={isOpen ? `menu-button-parent menu-button-parent-open` : `menu-button-parent`}\n                style={{\n                    zIndex: numOfChildren + 1,\n                    width,\n                    height,\n                    background: buttonColor\n                }}\n                onClick={(e) => {\n                    e.preventDefault();\n                    isOpen && setOpenChildIndex(-1);\n                    props.clickToOpen && setIsOpen(!isOpen);\n                }}\n            >\n                <Icon\n                    divClassList={isOpen ? 'icon-white rotate45' : 'icon-white'}\n                    svgClassList={'icon-white'}\n                    name='icon-plus'\n                />\n            </button>\n\n            {props.childButtonProps.map((child, index) => (\n\n                <MenuButtonChild\n\n                    // button content\n                    id={child.id}\n                    key={child.id}\n                    content={props.childButtonProps[index].content}\n\n                    // button appearance\n                    iconName={child.iconName}\n                    autoOpen={child.autoOpen}\n                    icon={child.icon}\n                    direction={props.direction}\n                    index={index + 1}\n                    openChildIndex={openChildIndex}\n                    setOpenChildIndex={setOpenChildIndex}\n                    zIndex={numOfChildren - index}\n                    separation={separation}\n                    width={childWidth}\n                    height={childHeight}\n                    parentWidth={width}\n                    parentHeight={height}\n                    menuWidth={width + (childWidth + separation) * (numOfChildren - 1)}\n                    parentIsOpen={isOpen}\n\n                />\n\n            ))}\n\n        </div>\n    )\n\n}","// libs\nimport React from 'react';\n\n// context\nimport { SongContext } from '../contexts/contexts';\nimport { InfoContext } from '../contexts/contexts';\n\n// styles\nimport '../styles/components/SongInfoPanel.scss';\n\nexport const SongInfoPanel = (props) => {\n\n    const { name, bpm, keySignature, timeSignature } = React.useContext(SongContext)\n    const { credits } = React.useContext(InfoContext);\n\n    return (\n        <div id='song-info-panel'>\n            <p>We're looking for 3D artists to partner with. Interested? Know someone who might be? Please get in touch.</p>\n            <h2>Song</h2>\n            <p>Title: {name}</p>\n            <p>BPM: {bpm}</p>\n            <p>Key Signature: {keySignature}</p>\n            <p>Time Signature: {timeSignature}/4 </p>\n            <h2>Credits</h2>\n            {credits.map((c) => {\n                return <p>{c.type}{c.content}</p>\n            })}\n            <h2>Connect</h2>\n            <div className='flex-row'>\n                <a className='social-link' href=\"mailto:markracette@gmail.com\">Email</a>&nbsp;|&nbsp;\n                <a className='social-link' href='https://instagram.com/rgb.ig'>Instagram</a>&nbsp;|&nbsp;\n                <a className='social-link' href='https://twitter.com/markracette'> Twitter</a>&nbsp;|&nbsp;\n                <a className='social-link' href='https://github.com/mracette'> Github</a>\n            </div>\n        </div>\n    )\n\n}","export const createAudioPlayer = (audioCtx, audioFilePath) => {\n\n    return new Promise((resolve, reject) => {\n        \n        loadArrayBuffer(audioFilePath).then((arrayBuffer) => {\n            \n            audioCtx.decodeAudioData(arrayBuffer, (audioBuffer) => {\n                \n                const audioPlayer = audioCtx.createBufferSource();\n                audioPlayer.buffer = audioBuffer;\n                \n                resolve(audioPlayer);\n                \n            }, (err) => {\n                \n                console.error(err);\n                reject(err);\n                \n            })\n            \n        }).catch((err) => {\n            \n            console.error(err);\n            reject(err);\n            \n        })\n\n    })\n        \n}\n\nexport const loadArrayBuffer = (audioFilePath) => {\n\n    return new Promise((resolve, reject) => {\n\n        const request = new XMLHttpRequest();\n        \n        request.responseType = \"arraybuffer\";\n        \n        request.addEventListener('load', () => {\n            if(request.status === 200) {\n                resolve(request.response);\n            }\n        })\n        \n        request.addEventListener('error', (err) => {\n            reject(err);\n        })\n        \n        request.open('GET', audioFilePath, true);\n        request.send();\n\n    });\n\n}\n\nexport const nextSubdivision = (audioCtx, audioCtxInitTime, bpm, beats) => {\n\n    const timeElapsed = audioCtx.currentTime - audioCtxInitTime;\n    const beatsElapsed = timeElapsed / ( 60 / bpm );\n    const subdivisionsElapsed = Math.floor(beatsElapsed / beats);\n    const nextSubdivision = audioCtxInitTime + (subdivisionsElapsed + 1) * beats * (60/bpm);\n\n    return nextSubdivision;\n\n}","\nexport class AudioPlayerWrapper {\n\n    constructor(context, bufferSource, options) {\n\n        // bind\n        this.context = context;\n        this.bufferSource = bufferSource;\n\n        // defaults\n        const defaults = {\n            bpm: 120,\n            loopLengthBeats: 4 * 4,\n            destination: context.destination,\n            fades: false,\n            loop: true\n        }\n\n        Object.assign(this, { ...defaults, ...options });\n\n        // setup\n        this.secondsPerBeat = 60 / this.bpm;\n        this.loopLengthSeconds = this.loopLengthBeats * this.secondsPerBeat;\n        this.bufferSource.loop = this.loop;\n        this.bufferSource.loopStart = 0;\n        this.bufferSource.loopEnd = bufferSource.buffer.duration;\n        this.bufferSource.connect(this.destination);\n\n    }\n\n    start(time) {\n        this.bufferSource.start(time);\n        this.bufferSource.onended = () => this.reload();\n    }\n\n    stop(time) {\n        try {\n            this.bufferSource.stop(time);\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    reload() {\n        console.log('reloading');\n        const newSource = this.context.createBufferSource();\n        newSource.buffer = this.bufferSource.buffer;\n        newSource.connect(this.destination);\n        this.bufferSource = newSource;\n    }\n\n}","export class Scheduler {\n\n    constructor(audioCtx) {\n\n        // bind audio context\n        this.audioCtx = audioCtx\n\n        // for scheduleOnce\n        this.queue = [];\n\n        // for scheduleRepeating\n        this.repeatingQueue = [];\n\n        // event id\n        this.eventId = 0;\n\n    }\n\n    scheduleOnce(time, name, callback) {\n\n        // grab the current value of the event id\n        const newEventId = this.eventId;\n\n        // increment for the next event\n        this.eventId++;\n\n        // create a dummy buffer to trigger the event\n        const dummyBuffer = this.audioCtx.createBuffer(1, 1, 44100);\n        const dummySource = this.audioCtx.createBufferSource();\n        dummySource.buffer = dummyBuffer;\n\n        // add to schedule queue\n        this.queue.push({\n            id: newEventId,\n            name: name || null,\n            time,\n            type: 'single',\n            source: dummySource\n        });\n\n        if (callback) {\n\n            dummySource.onended = callback;\n\n            // start buffer\n            dummySource.start(time - dummyBuffer.duration);\n\n            return newEventId;\n\n        } else {\n\n            const promise = new Promise(resolve => dummySource.onended = () => { resolve(newEventId) });\n\n            // start buffer\n            dummySource.start(time - dummyBuffer.duration);\n\n            return promise;\n\n        }\n\n    }\n\n    scheduleRepeating(time, frequency, callback) {\n\n        // grab the current value of the event id\n        const newEventId = this.eventId;\n\n        // increment for the next event\n        this.eventId++;\n\n        // create a dummy buffer to trigger the event\n        const dummyBuffer = this.audioCtx.createBuffer(1, 1, 44100);\n        const dummySource = this.audioCtx.createBufferSource();\n        dummySource.buffer = dummyBuffer;\n\n        // assign callback\n        dummySource.onended = callback;\n\n        // create timer\n        const timer = window.setInterval(() => { this.updateQueue() }, (frequency / 4) * 1000);\n\n        dummySource.start(\n            // ensure the start time is positive\n            Math.max(0, time - dummyBuffer.duration)\n        );\n\n        // initialize the event queue with the first event\n        this.repeatingQueue.push({\n            id: newEventId,\n            time,\n            type: 'repeating',\n            frequency,\n            timer,\n            source: dummySource\n        });\n\n        return newEventId;\n\n    }\n\n    updateCallback(id, callback) {\n\n        let event;\n\n        event = this.queue.find((e) => e.id === id);\n\n        if (!event) {\n            event = this.repeatingQueue.find((e) => e.id === id);\n        }\n\n        if (event) {\n            event.source.onended = callback;\n        }\n\n    }\n\n    updateQueue() {\n\n        for (let i = this.repeatingQueue.length - 1; i >= 0; i--) {\n\n            const event = this.repeatingQueue[i];\n\n            if (event.time < this.audioCtx.currentTime) {\n\n                this.repeatingQueue.splice(i, 1);\n\n                // create a dummy buffer to trigger the event\n                const dummyBuffer = this.audioCtx.createBuffer(1, 1, 44100);\n                const dummySource = this.audioCtx.createBufferSource();\n                dummySource.buffer = dummyBuffer;\n\n                // assign callback (same as previous event)\n                dummySource.onended = event.source.onended;\n\n                // start\n                dummySource.start(\n                    // ensure the start time is positive\n                    Math.max(0, event.time + event.frequency - dummyBuffer.duration)\n                );\n\n                // update the parameters and push a copy of the event to the queue\n                this.repeatingQueue.push({\n                    id: event.id,\n                    time: event.time + event.frequency,\n                    type: 'repeating',\n                    frequency: event.frequency,\n                    timer: event.timer,\n                    source: dummySource\n                });\n\n            }\n\n        }\n\n    }\n\n    getEvent(id) {\n\n        let event = this.queue.find((e) => e.id === id);\n\n        if (event) {\n            return event;\n        } else {\n            let event = this.repeatingQueue.find((e) => e.id === id);\n            if (event) {\n                return event;\n            } else {\n                return false;\n            }\n        }\n\n    }\n\n    clear() {\n\n        this.queue.forEach((event) => {\n            event.source.onended = null;\n            event.source.stop();\n        });\n\n        this.repeatingQueue.forEach((event) => {\n            window.clearInterval(event.timer);\n            event.source.onended = null;\n            event.source.stop();\n        })\n\n        this.queue = [];\n        this.repeatingQueue = [];\n\n    }\n\n    cancel(id) {\n\n        if (typeof id !== 'undefined') {\n\n            const event = this.getEvent(id);\n            event.source.onended = null;\n            event.source.stop();\n\n            this.queue = this.queue.filter((e) => e.id !== event.id);\n            this.repeatingQueue = this.repeatingQueue.filter((e) => e.id !== event.id);\n\n        }\n\n    }\n\n}\n\nexport default Scheduler;","// libs\nimport React from 'react';\nimport anime from 'animejs/lib/anime.es.js';\n\n// context\nimport { MusicPlayerContext } from '../../contexts/contexts';\nimport { SongContext } from '../../contexts/contexts';\nimport { TestingContext } from '../../contexts/contexts';\nimport { LayoutContext } from '../../contexts/contexts';\n\n// other\nimport { createAudioPlayer } from 'crco-utils';\nimport { nextSubdivision } from '../../utils/audioUtils';\nimport { AudioPlayerWrapper } from '../../classes/AudioPlayerWrapper';\nimport { Scheduler } from '../../classes/Scheduler';\n\n// styles\nimport '../../styles/components/Icon.scss';\nimport '../../styles/components/ToggleButton.scss';\n\nexport const ToggleButton = (props) => {\n\n    const buttonRef = React.useRef();\n    const playerRef = React.useRef();\n    const animationTargetsRef = React.useRef();\n    const schedulerRef = React.useRef();\n\n    const { vh } = React.useContext(LayoutContext);\n    const { id, timeSignature, bpm } = React.useContext(SongContext);\n    const { dispatch, audioCtx, audioCtxInitTime, sampleRate } = React.useContext(MusicPlayerContext);\n    const { flags } = React.useContext(TestingContext);\n    const { handleUpdatePlayerOrder, handleUpdateOverrides, name, groupName, groupNode, override, length } = props;\n\n    const [playerState, setPlayerState] = React.useState('stopped');\n\n    const quantizedStartBeats = flags.quantizeSamples ? 4 * timeSignature : 1;\n    const buttonRadius = vh ? vh * 3.5 : 0;\n    const buttonBorder = vh ? vh * 3.5 / 15 : 0;\n\n    const changePlayerState = React.useCallback((newState) => {\n\n        // clear future events for this toggle (necessary to stop a pending start)\n        schedulerRef.current.clear();\n\n        const runAnimation = (type, duration) => {\n\n            // clear queue\n            anime.remove(animationTargetsRef.current.circleSvg);\n            anime.remove(animationTargetsRef.current.iconPoly);\n            anime.remove(animationTargetsRef.current.iconDiv);\n            anime.remove(animationTargetsRef.current.iconDiv.children);\n            anime.remove(animationTargetsRef.current.button);\n\n            let strokeDashoffset, points, backgroundColor, rotateZ;\n\n            if (type === 'start') {\n\n                rotateZ = '-180';\n                backgroundColor = 'rgba(255, 255, 255, .3)';\n                strokeDashoffset = [0, 2 * Math.PI * (buttonRadius - buttonBorder / 2)];\n                points = [{ value: \"6.69872981 6.69872981 93.01270188 6.69872981 93.01270188 50 93.01270188 93.01270188 6.69872981 93.01270188\" }];\n\n            } else if (type === 'stop') {\n\n                rotateZ = '0';\n                backgroundColor = 'rgba(255, 255, 255, 0)';\n                strokeDashoffset = [animationTargetsRef.current.circleSvg.style.strokeDashoffset, 0];\n                points = [{ value: \"6.69872981 0 6.69872981 0 93.01270188 50 6.69872981 100 6.69872981 100\" }];\n\n            }\n\n            // run cirle animation\n            anime({\n                targets: animationTargetsRef.current.circleSvg,\n                strokeDashoffset,\n                duration,\n                easing: 'linear'\n            });\n\n            // run icon animation\n            anime({\n                targets: animationTargetsRef.current.iconPoly,\n                points,\n                duration,\n                easing: 'linear'\n            });\n\n            // run rotate animation\n            anime({\n                targets: [animationTargetsRef.current.iconDiv, animationTargetsRef.current.iconDiv.children],\n                rotateZ,\n                duration,\n                easing: 'linear'\n            });\n\n            // run button animation\n            anime({\n                targets: animationTargetsRef.current.button,\n                backgroundColor,\n                duration,\n                easing: 'easeInCubic'\n            });\n\n        }\n\n        const initialState = newState === 'active' ? 'pending-start' : 'pending-stop';\n\n        // set local state\n        setPlayerState(initialState);\n\n        // update poly count for the group\n        handleUpdatePlayerOrder(name, initialState);\n\n        // dispatch initial update to music player\n        dispatch({\n            type: 'updatePlayerState',\n            payload: {\n                id: name,\n                newState: initialState\n            }\n        });\n\n        // calculate time till next loop start\n        const quantizedStartSeconds = nextSubdivision(\n            audioCtx,\n            audioCtxInitTime,\n            bpm,\n            quantizedStartBeats\n        );\n\n        switch (newState) {\n            case 'active': playerRef.current.start(quantizedStartSeconds); break;\n            case 'stopped': playerRef.current.stop(quantizedStartSeconds); break;\n            default: break;\n        }\n\n        // schedule a status change\n        schedulerRef.current.scheduleOnce(quantizedStartSeconds).then(() => {\n\n            // update local state\n            setPlayerState(newState);\n\n            // dispatch final update to music player\n            dispatch({\n                type: 'updatePlayerState',\n                payload: {\n                    id: name,\n                    newState: newState\n                }\n            });\n\n        });\n\n        // convert to millis for animations\n        const quantizedStartMillis = (quantizedStartSeconds - audioCtx.currentTime) * 1000;\n        const animationType = newState === 'stopped' ? 'stop' : 'start';\n        runAnimation(animationType, quantizedStartMillis);\n\n    }, [audioCtx, audioCtxInitTime, bpm, buttonBorder, buttonRadius, dispatch, quantizedStartBeats, handleUpdatePlayerOrder, name])\n\n    React.useEffect(() => {\n\n        schedulerRef.current = new Scheduler(audioCtx);\n        const pathToAudio = require(`../../audio/${id}/${name}.mp3`);\n\n        createAudioPlayer(audioCtx, pathToAudio, {\n            offlineRendering: true,\n            renderLength: sampleRate * parseInt(length) * timeSignature * 60 / bpm\n        }).then((audioPlayer) => {\n\n            // create the player\n            playerRef.current = new AudioPlayerWrapper(audioCtx, audioPlayer, {\n                destination: groupNode,\n                loop: true\n            });\n\n            // send reference to music player\n            dispatch({\n                type: 'addPlayer',\n                payload: {\n                    player: {\n                        id: name,\n                        groupName: groupName,\n                        playerState,\n                        buttonRef: buttonRef.current\n                    }\n                }\n            });\n\n            // // send button ref to music player for randomize function\n            // dispatch({\n            //     type: 'addButton',\n            //     payload: {\n            //         button: buttonRef.current\n            //     }\n            // });\n\n        });\n\n        // store the animation targets based on their relative positions in the DOM\n        animationTargetsRef.current = {\n            button: buttonRef.current,\n            circleSvg: buttonRef.current.children[0],\n            iconDiv: buttonRef.current.children[1],\n            iconSvg: buttonRef.current.children[1].children[0],\n            iconPoly: buttonRef.current.children[1].children[0].children[0],\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        if (override && (playerState === 'active' || playerState === 'pending-start')) {\n            // stop player and remove from the override list\n            changePlayerState('stopped');\n            handleUpdateOverrides(name);\n        }\n    }, [playerState, changePlayerState, handleUpdateOverrides, name, override])\n\n    return (\n\n        <button\n            type='button'\n            className='toggle-button'\n            ref={buttonRef}\n            onClick={() => {\n                switch (playerState) {\n                    case 'stopped': // start if stopped\n                        changePlayerState('active');\n                        break;\n                    case 'active': // stop if active\n                        changePlayerState('stopped');\n                        break;\n                    case 'pending-start': // cancel start if triggered on pending-start\n                        changePlayerState('stopped');\n                        break;\n                    case 'pending-stop': break; // do nothing if triggered on pending-stop\n                    default: break;\n                }\n            }}\n            style={{\n                height: buttonRadius * 2,\n                width: buttonRadius * 2\n            }}\n        >\n\n            <svg\n                className='svg'\n                width={2 * buttonRadius}\n                height={2 * buttonRadius}\n                style={{\n                    strokeDashoffset: playerState === 'active' ? 2 * Math.PI * (buttonRadius - buttonBorder / 2) : 0\n                }}\n            >\n\n                <circle\n                    className='svg-circle'\n                    cx={buttonRadius}\n                    cy={buttonRadius}\n                    r={buttonRadius - buttonBorder / 2}\n                    style={{\n                        strokeWidth: buttonBorder,\n                        strokeDasharray: 2 * Math.PI * (buttonRadius - buttonBorder / 2)\n                    }}\n                />\n\n            </svg>\n\n            <div id='scale-div-morph' className={`icon`}>\n\n                <svg\n                    viewBox=\"0 0 100 100\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                    className={`icon icon-white`}\n                >\n\n                    <polygon\n                        id='icon-play3-poly'\n                        className={`icon icon-white`}\n                        points=\"6.69872981 0 46.650635094 25 93.01270188 50 46.650635094 75 6.69872981 100\"\n                    />\n\n                </svg>\n\n            </div>\n\n        </button>\n    );\n}\n","// libs\nimport React from 'react';\n\n// components\nimport { Canvas } from '../components/Canvas';\n\n// context\nimport { ThemeContext } from '../contexts/contexts';\n\n// hooks\nimport { useAnimationFrame } from '../hooks/useAnimationFrame';\n\n// styles\nimport '../styles/components/Oscilloscope.scss';\n\nexport const Oscilloscope = (props) => {\n\n    const canvasRef = React.useRef(null);\n    const contextRef = React.useRef(null);\n    const { spectrumFunction } = React.useContext(ThemeContext);\n\n    const render = React.useCallback((canvas, context) => {\n\n        contextRef.current.lineWidth = canvas.height / 20;\n\n        // clear previous draw\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        // get time domain data\n        const dataArray = props.analyser.getTimeData();\n\n        const sliceWidth = canvas.width / (dataArray.length - 1);\n\n        let x = 0;\n        let prevX, prevY\n\n\n        dataArray.forEach((d, i) => {\n\n            context.beginPath();\n\n            if (props.gradient) {\n                context.strokeStyle = spectrumFunction(props.index / props.groupCount + i / (dataArray.length * props.groupCount));\n            }\n\n            const v = d / 128.0;\n\n            const y = v * canvas.height / 2;\n\n            if (x === 0) {\n                context.moveTo(x, y);\n            } else {\n                context.moveTo(prevX, prevY);\n            }\n\n            context.lineTo(x, y);\n\n            prevX = x;\n            prevY = y;\n\n            x += sliceWidth;\n\n            context.stroke();\n\n        });\n\n    }, [props, spectrumFunction]);\n\n    useAnimationFrame(() => render(canvasRef.current, contextRef.current));\n\n    return React.useMemo(() => (\n        <div id='oscilloscope'>\n            <Canvas\n                id='oscilloscope-canvas'\n                onLoad={(canvas) => {\n                    canvasRef.current = canvas;\n                    contextRef.current = canvas.getContext('2d');\n                }}\n            />\n        </div>\n    ), []);\n\n}","import * as d3 from 'd3-ease';\n\nexport class Analyser {\n\n    constructor(context, input, params) {\n\n        this.input = input;\n        this.context = context;\n\n        const defaults = {\n            id: null,\n            power: 13,\n            minDecibels: -130,\n            maxDecibels: 0,\n            minFrequency: 20,\n            maxFrequency: 16500,\n            smoothingTimeConstant: 0.8,\n            numBuckets: 10,\n            split: false,\n            aWeighted: false,\n            xEasing: undefined,\n            yEasing: undefined,\n            binMethod: 'center'\n        }\n\n        Object.assign(this, { ...defaults, ...params });\n        this.fftSize = Math.pow(2, this.power);\n        this.frequencyBinCount = this.fftSize / 2;\n        this.nyquist = this.context.sampleRate / 2;\n        this.binSize = this.nyquist / this.frequencyBinCount;\n        this.adj =\n            this.binMethod === 'center' ? 0.5 :\n                this.binMethod === 'start' ? 0 :\n                    this.binMethod === 'end' ? 1 : 0.5;\n\n        // represents the first and last bin to take to stay true to frequency bounds\n        // errs on the side of preserving more data\n        this.binMin = Math.floor(this.minFrequency / this.binSize);\n        this.binMax = this.frequencyBinCount - Math.floor((this.nyquist - this.maxFrequency) / this.binSize);\n\n        // create once to optimize render loops\n        this.bucketCounts = new Array(this.numBuckets).fill(0, 0, this.numBuckets);\n        this.bucketData = new Array(this.numBuckets).fill(0, 0, this.numBuckets);\n\n        // update the min / max according to the actual calculated above\n        this.minFrequency = (this.binMin + this.adj) * this.binSize;\n        this.maxFrequency = (this.binMax + this.adj) * this.binSize;\n\n        // convert any string easing params into functions\n        if (typeof this.xEasing === 'string') {\n            switch (this.xEasing) {\n                case 'polyIn': this.xEasing = d3.easePolyIn.exponent(this.xExponent); break;\n                case 'polyOut': this.xEasing = d3.easePolyOut.exponent(this.xExponent); break;\n                case 'polyInOut': this.xEasing = d3.easePolyInOut.exponent(this.xExponent); break;\n                default: this.xEasing = (n) => n; break;\n            }\n        }\n\n        if (typeof this.yEasing === 'string') {\n            switch (this.yEasing) {\n                case 'polyIn': this.yEasing = d3.easePolyIn.exponent(this.yExponent); break;\n                case 'polyOut': this.yEasing = d3.easePolyOut.exponent(this.yExponent); break;\n                case 'polyInOut': this.yEasing = d3.easePolyInOut.exponent(this.yExponent); break;\n                default: this.yEasing = (n) => n; break;\n            }\n        }\n\n        this.createAudioNodes();\n        this.createDataStructure();\n        this.aWeighted && this.createAWeights();\n\n    }\n\n    createAudioNodes(split = this.split) {\n\n        if (split) {\n\n            // if split === true, this.analyser is an obj with 'left' and 'right' properties\n            const splitter = this.context.createChannelSplitter(2);\n\n            // feed in the input\n            this.input.connect(splitter);\n\n            this.analyser = {};\n            this.analyser.left = this.context.createAnalyser();\n            this.analyser.right = this.context.createAnalyser();\n\n            splitter.connect(this.analyser.left, 0);\n            splitter.connect(this.analyser.right, 1);\n\n            // web audio parameters\n            this.analyser.left.fftSize = Math.pow(2, this.power);\n            this.analyser.left.minDecibels = this.minDecibels;\n            this.analyser.left.maxDecibels = this.maxDecibels;\n            this.analyser.left.smoothingTimeConstant = this.smoothingTimeConstant;\n\n            // web audio parameters\n            this.analyser.right.fftSize = Math.pow(2, this.power);\n            this.analyser.right.minDecibels = this.minDecibels;\n            this.analyser.right.maxDecibels = this.maxDecibels;\n            this.analyser.right.smoothingTimeConstant = this.smoothingTimeConstant;\n\n        } else {\n\n            // if split === false, this.analser is a single stereo analyser\n            this.analyser = this.context.createAnalyser();\n            this.analyser.fftSize = Math.pow(2, this.power);\n            this.analyser.minDecibels = this.minDecibels;\n            this.analyser.maxDecibels = this.maxDecibels;\n            this.analyser.smoothingTimeConstant = this.smoothingTimeConstant;\n\n            // feed in the input\n            this.input.connect(this.analyser);\n\n        }\n\n    }\n\n    createDataStructure(split = this.split) {\n\n        if (split) {\n\n            this.fftData = {};\n            this.timeData = {};\n            this.fftData.left = new Uint8Array(this.analyser.left.frequencyBinCount);\n            this.fftData.right = new Uint8Array(this.analyser.right.frequencyBinCount);\n            this.timeData.left = new Uint8Array(this.analyser.left.fftSize);\n            this.timeData.right = new Uint8Array(this.analyser.right.fftSize);\n\n        } else {\n\n            this.fftData = new Uint8Array(this.analyser.frequencyBinCount);\n            this.timeData = new Uint8Array(this.analyser.fftSize);\n\n        }\n\n    }\n\n    createAWeights() {\n\n        const a = (f) => {\n            var f2 = f * f;\n            return 1.2588966 * 148840000 * f2 * f2 /\n                ((f2 + 424.36) * Math.sqrt((f2 + 11599.29) * (f2 + 544496.41)) * (f2 + 148840000));\n        };\n\n        // get the center point of each frequency bin\n        const bins = [];\n        const binSize = this.nyquist / this.frequencyBinCount;\n\n        for (let i = 0; i < this.frequencyBinCount; i++) {\n            bins[i] = (i + 0.5) * binSize;\n        }\n\n        this.aWeights = bins.map(f => a(f));\n\n    }\n\n    getFrequencyData(channel) {\n\n        if (channel === 'left' || channel === 'right') {\n            this.analyser[channel].getByteFrequencyData(this.fftData[channel]); // refresh in place\n            this.yEasing && this.fftData[channel].forEach((d, i, a) => a[i] = 255 * this.yEasing(d / 255)); // map in place\n            this.aWeights && this.fftData[channel].forEach((d, i, a) => a[i] = this.aWeights[i] * d); // map in place\n            return this.fftData[channel];\n        } else {\n            this.analyser.getByteFrequencyData(this.fftData); // refresh in place\n            this.yEasing && this.fftData.forEach((d, i, a) => a[i] = 255 * this.yEasing(d / 255)); // map in place\n            this.aWeighted && this.fftData.forEach((d, i, a) => a[i] = this.aWeights[i] * d); // map in place\n            return this.fftData;\n        }\n\n    }\n\n    getFrequencyBins(channel) {\n\n        const fBins = [];\n        const data = this.getFrequencyData(channel).slice(this.binMin, this.binMax + 1);\n\n        data.forEach((d, i) => {\n            fBins.push({\n                data: d,\n                freq: (this.binMin + i + this.adj) * this.binSize\n            });\n        });\n\n        return fBins;\n\n    }\n\n    getFrequencyBuckets(channel) {\n\n        const data = this.getFrequencyData(channel);\n\n        // reset buckets\n        this.bucketData.forEach((d, i, a) => {\n            a[i] = 0\n            this.bucketCounts[i] = 0;\n        });\n\n        for (let i = this.binMin; i <= this.binMax; i++) {\n            const n = this.xEasing ?\n                Math.floor(this.xEasing(i / (this.binMax - this.binMin + 1)) * this.numBuckets) :\n                Math.floor((i / (this.binMax - this.binMin + 1)) * this.numBuckets);\n\n            this.bucketData[n] += data[i];\n            this.bucketCounts[n] += 1;\n\n        }\n\n        this.bucketData.forEach((d, i, a) => a[i] = d / this.bucketCounts[i]);\n\n        return this.bucketData;\n\n    }\n\n    getTimeData(channel) {\n\n        if (channel === 'left' || channel === 'right') {\n            this.analyser[channel].getByteTimeDomainData(this.timeData[channel]);\n            return this.timeData[channel];\n        } else {\n            this.analyser.getByteTimeDomainData(this.timeData);\n            return this.timeData;\n        }\n\n    }\n\n    reconnect(newInput) {\n        this.input.disconnect();\n        newInput.connect(this.analyser);\n    }\n\n}","// libs\nimport React from 'react';\n\n// components\nimport { ToggleButton } from './ToggleButton';\nimport { Oscilloscope } from '../Oscilloscope';\n\n// contexts\nimport { ThemeContext } from '../../contexts/contexts';\nimport { MusicPlayerContext } from '../../contexts/contexts';\n\n// other\nimport { Analyser } from '../../classes/Analyser';\nimport { loadArrayBuffer } from '../../utils/audioUtils';\n\n// styles\nimport '../../styles/components/ToggleButtonGroup.scss';\nimport '../../styles/components/Oscilloscope.scss';\n\nexport const ToggleButtonGroup = (props) => {\n\n    const { groupMuteButton, groupSoloButton } = React.useContext(ThemeContext);\n    const { dispatch, audioCtx, premaster } = React.useContext(MusicPlayerContext);\n\n    // point that connects voices to group\n    const groupNodeRef = React.useRef(audioCtx.createGain());\n\n    const [oAnalyser, setOAnalyser] = React.useState(null);\n    const [solo, setSolo] = React.useState(false);\n    const [mute, setMute] = React.useState(false);\n    const [playerOrder, setPlayerOrder] = React.useState([]);\n    const [playerOverrides, setPlayerOverrides] = React.useState([]);\n\n    React.useEffect(() => {\n\n        // create a filter to taper the low end analyser output\n        const filter = audioCtx.createBiquadFilter();\n        filter.type = 'lowshelf';\n        filter.frequency.value = 120;\n        filter.gain.value = -12;\n        groupNodeRef.current.connect(filter);\n\n        const effectsChainEntry = audioCtx.createGain();\n        effectsChainEntry.gain.value = 1;\n\n        const effectsChainExit = audioCtx.createGain();\n        effectsChainExit.gain.value = 1;\n\n        const hpFilter = audioCtx.createBiquadFilter()\n        hpFilter.type = 'highpass';\n        hpFilter.frequency.value = 20;\n        hpFilter.Q.value = 0.71;\n\n        const lpFilter = audioCtx.createBiquadFilter()\n        lpFilter.type = 'lowpass';\n        lpFilter.frequency.value = 20000;\n        lpFilter.Q.value = 0.71;\n\n        const reverbDryNode = audioCtx.createGain();\n        reverbDryNode.gain.value = 1;\n\n        const reverbWetNode = audioCtx.createGain();\n        reverbWetNode.gain.value = 0;\n\n        const reverbNode = audioCtx.createConvolver();\n\n        // load impulse response to be used in convolution reverb\n        const pathToAudio = require('../../audio/application/impulse-response.wav');\n\n        loadArrayBuffer(pathToAudio).then((arrayBuffer) => {\n            audioCtx.decodeAudioData(arrayBuffer, (audioBuffer) => {\n                reverbNode.buffer = audioBuffer;\n                dispatch({\n                    type: 'impulseResponse',\n                    payload: {\n                        name: 'standard',\n                        buffer: audioBuffer\n                    }\n                })\n            })\n        });\n\n        // link effects chain\n        groupNodeRef.current.connect(effectsChainEntry);\n        effectsChainEntry.connect(lpFilter);\n        lpFilter.connect(hpFilter);\n        hpFilter.connect(reverbDryNode);\n        hpFilter.connect(reverbWetNode);\n        reverbDryNode.connect(effectsChainExit);\n        reverbWetNode.connect(reverbNode);\n        reverbNode.connect(effectsChainExit);\n        effectsChainExit.connect(premaster);\n\n        // analyser for the oscilloscope\n        const oAnalyser = new Analyser(audioCtx, filter, {\n            id: `${props.name}-oscilloscope-analyser`,\n            power: 5,\n            minDecibels: -120,\n            maxDecibels: 0,\n            smoothingTimeConstant: 0\n        });\n\n        // analyser for the group\n        const gAnalyser = new Analyser(audioCtx, effectsChainExit, {\n            id: `${props.name}-analyser`,\n            ...props.analyserParams\n        });\n\n        setOAnalyser(oAnalyser);\n\n        dispatch({\n            type: 'addAnalyser', payload: { analyser: gAnalyser }\n        });\n\n        dispatch({\n            type: 'addEffect',\n            payload: {\n                effectType: 'reverb-dry',\n                effect: reverbDryNode\n            }\n        });\n\n        dispatch({\n            type: 'addEffect',\n            payload: {\n                effectType: 'reverb-wet',\n                effect: reverbWetNode\n            }\n        });\n\n        dispatch({\n            type: 'addEffect',\n            payload: {\n                effectType: 'lowpass',\n                effect: lpFilter\n            }\n        });\n\n        dispatch({\n            type: 'addEffect',\n            payload: {\n                effectType: 'highpass',\n                effect: hpFilter\n            }\n        });\n\n    }, [audioCtx, dispatch, premaster, props.analyserParams, props.name]);\n\n    React.useEffect(() => {\n\n        // solo overrides mute, so only mute when it's exclusive state\n        if (mute && !solo) {\n            groupNodeRef.current.gain.value = 0;\n\n            // when mute is turned off, add volume if group is not also overridden by another group's solo\n        } else if (!mute && !props.soloOverride) {\n            groupNodeRef.current.gain.value = 1;\n        }\n\n        // if solo is turned on ...\n        if (solo) {\n            // add override and turn volume on\n            props.handleAddSolo(props.name);\n            groupNodeRef.current.gain.value = 1;\n        }\n\n        if (props.soloOverride === props.name && !solo) {\n            // turn off override\n            props.handleAddSolo(false);\n            // if this group was also on mute, return the volume to that state\n            if (mute) {\n                groupNodeRef.current.gain.value = 0;\n            }\n        }\n\n    }, [mute, solo, props]);\n\n    React.useEffect(() => {\n\n        // if this group has been overriden by another solo ...\n        if (props.soloOverride && props.soloOverride !== props.name) {\n            setSolo(false);\n            groupNodeRef.current.gain.value = 0;\n        }\n\n        // if override has been undone\n        if (!props.soloOverride && !mute) {\n            groupNodeRef.current.gain.value = 1;\n        }\n\n\n    }, [props.soloOverride, mute, props.name]);\n\n    const handleUpdatePlayerOrder = React.useCallback((playerId, newState) => {\n\n        if (newState === 'pending-start') {\n\n            if (props.currentPolyphony < props.polyphony || props.polyphony === -1) {\n\n                // add this player to the end of the playerOrder list\n                setPlayerOrder(playerOrder.concat([playerId]));\n\n            } else {\n\n                // override the latest player to be added to the list, then append the new one\n                setPlayerOverrides(playerOverrides.concat(playerOrder[0]));\n                setPlayerOrder(playerOrder.slice(1).concat([playerId]));\n\n            }\n\n        } else if (newState === 'pending-stop') {\n\n            // remove the player from the playerOrder list\n            setPlayerOrder(playerOrder.filter(p => p !== playerId));\n\n        }\n\n    }, [props.currentPolyphony, props.polyphony, playerOrder, playerOverrides]);\n\n    const handleUpdateOverrides = React.useCallback((playerId) => {\n\n        setPlayerOverrides(playerOverrides.filter(p => p !== playerId));\n\n    }, [playerOverrides]);\n\n    return (\n        <div className='toggle-button-group flex-col'>\n\n            <div className='flex-row'>\n\n                <h3>{props.name} ({props.currentPolyphony} / {\n                    props.polyphony === -1 ? props.voices.length : props.polyphony\n                })</h3>\n\n                {oAnalyser && <Oscilloscope\n                    index={props.index}\n                    groupCount={props.groupCount}\n                    gradient={true}\n                    name={props.name}\n                    analyser={oAnalyser}\n                />}\n\n                <button\n                    className='solo-button'\n                    style={solo ? {\n                        background: groupSoloButton\n                    } : undefined}\n                    onClick={() => setSolo(!solo)}\n                >S</button>\n\n                <button\n                    className='mute-button'\n                    style={mute ? {\n                        background: groupMuteButton\n                    } : undefined}\n                    onClick={() => setMute(!mute)}\n                >M</button>\n\n            </div>\n\n            <div className='toggle-buttons flex-row'>\n\n                {props.voices.map((voice) => (\n                    <ToggleButton\n                        key={voice.name}\n                        name={voice.name}\n                        groupName={props.name}\n                        length={voice.length}\n                        quantizeLength={voice.quantizeLength}\n                        handleUpdatePlayerOrder={handleUpdatePlayerOrder}\n                        handleUpdateOverrides={handleUpdateOverrides}\n                        override={playerOverrides.indexOf(voice.name) !== -1}\n                        groupNode={groupNodeRef.current}\n                    />\n                ))}\n\n            </div>\n\n        </div>\n    );\n}","// libs\nimport React from 'react';\n\n// components\nimport { ToggleButtonGroup } from './ToggleButtonGroup';\n\n// contexts\nimport { ThemeContext } from '../../contexts/contexts';\nimport { MusicPlayerContext } from '../../contexts/contexts';\nimport { SongContext } from '../../contexts/contexts';\n\n// styles\nimport '../../styles/components/ToggleButtonPanel.scss';\n\nexport const ToggleButtonPanel = (props) => {\n\n    const {\n        panelMuteButton,\n        panelRandomizeButton,\n    } = React.useContext(ThemeContext);\n\n    const { dispatch, randomize, mute } = React.useContext(MusicPlayerContext);\n\n    const { groups } = React.useContext(SongContext);\n\n    const [soloOverride, setSoloOverride] = React.useState(false);\n\n    const handleAddSolo = (value) => {\n        setSoloOverride(value);\n    };\n\n    return (\n\n        <div\n            id='toggle-button-panel'\n            className='flex-panel'\n        >\n\n            <h2>Voices</h2>\n\n            <div className='flex-row'>\n\n                <button\n                    className='button-white grouped-buttons'\n                    id='toggle-button-panel-reset'\n                    onClick={props.handleReset}\n                >\n                    Reset\n                    </button>\n\n                <button\n                    id='toggle-button-panel-randomize'\n                    className='button-white grouped-buttons'\n                    style={randomize ? {\n                        background: panelRandomizeButton\n                    } : undefined}\n                    onClick={() => randomize ? dispatch({ type: 'stopRandomize' }) : dispatch({ type: 'startRandomize' })}\n                >\n                    Randomize\n                    </button>\n\n                <button\n                    id='toggle-button-panel-mute'\n                    className='button-white grouped-buttons'\n                    style={mute ? {\n                        background: panelMuteButton\n                    } : undefined}\n                    onClick={() => mute ? dispatch({ type: 'stopMute' }) : dispatch({ type: 'startMute' })}\n                >\n                    Mute\n                    </button>\n\n            </div>\n\n            {groups.map((group, index) => (\n                <ToggleButtonGroup\n                    index={index}\n                    handleAddSolo={handleAddSolo}\n                    soloOverride={soloOverride}\n                    key={group.name}\n                    name={group.name}\n                    groupCount={groups.length}\n                    currentPolyphony={props.players.filter((p) => (\n                        p.groupName === group.name && (\n                            p.playerState === 'active' || p.playerState === 'pending-start'\n                        ))).length}\n                    polyphony={group.polyphony}\n                    voices={group.voices}\n                    analyserParams={group.analyser}\n                />\n            ))}\n\n        </div>\n    );\n}","export const MusicPlayerReducer = (state, action) => {\n    switch (action.type) {\n        case 'startRandomize':\n            return {\n                ...state,\n                randomize: true\n            };\n        case 'stopRandomize':\n            return {\n                ...state,\n                randomize: false\n            };\n        case 'setRandomizeEffects':\n            return {\n                ...state,\n                randomizeEffects: action.payload\n            };\n        case 'resetPlayers':\n            state.players.forEach((p) => {\n                if (p.instance.state.playerState === 'active') { p.instance.stopPlayer(false, true); }\n                if (p.instance.state.playerState === 'pending-start') { p.instance.pendingStop(false, true); }\n            })\n            return state;\n        case 'addPlayer':\n            return {\n                ...state,\n                players: [...state.players, action.payload.player]\n            };\n        case 'addButton':\n            return {\n                ...state,\n                buttons: [...state.buttons, action.payload.button]\n            }\n        case 'addAnalyser':\n            return {\n                ...state,\n                analysers: [...state.analysers, action.payload.analyser]\n            };\n        case 'updatePlayerState':\n            return {\n                ...state,\n                players: [\n                    ...state.players.filter((p) => p.id !== action.payload.id),\n                    { ...state.players.find((p) => p.id === action.payload.id), playerState: action.payload.newState }\n                ]\n            };\n        case 'startMute':\n            return {\n                ...state,\n                mute: true\n            };\n        case 'stopMute':\n            return {\n                ...state,\n                mute: false\n            };\n        case 'addImpulseResponse':\n            return {\n                ...state,\n                impulseResponses: [\n                    ...state.impulseResponses,\n                    action.payload.impulseResponse\n                ]\n            };\n        case 'addEffect':\n            switch (action.payload.effectType) {\n                case 'highpass':\n                    return {\n                        ...state,\n                        groupEffects: {\n                            ...state.groupEffects,\n                            highpass: [...state.groupEffects.highpass, action.payload.effect]\n                        }\n                    };\n                case 'lowpass':\n                    return {\n                        ...state,\n                        groupEffects: {\n                            ...state.groupEffects,\n                            lowpass: [...state.groupEffects.lowpass, action.payload.effect]\n                        }\n                    };\n                case 'reverb-dry':\n                    return {\n                        ...state,\n                        groupEffects: {\n                            ...state.groupEffects,\n                            reverbDry: [...state.groupEffects.reverbDry, action.payload.effect]\n                        }\n                    };\n                case 'reverb-wet':\n                    return {\n                        ...state,\n                        groupEffects: {\n                            ...state.groupEffects,\n                            reverbWet: [...state.groupEffects.reverbWet, action.payload.effect]\n                        }\n                    };\n                default: return state;\n            }\n        case 'incrementHighpass':\n            return {\n                ...state,\n                effectValues: {\n                    ...state.effectValues,\n                    highpass: state.effectValues.highpass + action.payload.value\n                }\n            };\n        case 'incrementLowpass':\n            return {\n                ...state,\n                effectValues: {\n                    ...state.effectValues,\n                    lowpass: state.effectValues.lowpass + action.payload.value\n                }\n            };\n        case 'incrementAmbience':\n            return {\n                ...state,\n                effectValues: {\n                    ...state.effectValues,\n                    ambience: state.effectValues.ambience + action.payload.value\n                }\n            };\n        case 'setHighpass':\n            return {\n                ...state,\n                effectValues: {\n                    ...state.effectValues,\n                    highpass: action.payload.value\n                }\n            };\n        case 'setLowpass':\n            return {\n                ...state,\n                effectValues: {\n                    ...state.effectValues,\n                    lowpass: action.payload.value\n                }\n            };\n        case 'setAmbience':\n            return {\n                ...state,\n                effectValues: {\n                    ...state.effectValues,\n                    ambience: action.payload.value\n                }\n            };\n        default: return state;\n    }\n}","/* eslint-disable */ \n\nexport class AudioLooper {\n\n    constructor(audioCtx, buffer, params) {\n        \n        this.bpm = params.bpm || 120;\n        this.secondsPerBeat = 60 / this.bpm;\n        this.snapToGrid = params.snapToGrid || true;\n        \n        this.loopLengthBeats = params.loopLengthBeats || 4 * 4;\n        this.loopLengthSeconds = this.loopLengthBeats * this.secondsPerBeat;\n\n        this.refreshRate = params.refreshRate || (this.loopLengthSeconds / 4) * 1000;\n        this.fadeInTime = params.fadeInTime || this.secondsPerBeat / 32;\n        this.fadeOutTime = params.fadeOutTime || this.secondsPerBeat / 32;\n        \n        this.audioCtx = audioCtx;\n        this.destination = params.destination || audioCtx.destination;\n        this.buffer = buffer;\n        this.queue = [];\n        this.garbage = [];\n\n        this.intervalTimer = undefined;\n        this.activeEventTime = undefined;\n        this.prevEventTime = undefined;\n\n        this.scheduledEvents = [];\n        \n    }\n    \n    addEventToQueue(time, onstart) {\n\n        // create a gain node to govern fades\n        const gainNode = this.audioCtx.createGain();\n        gainNode.connect(this.destination);\n\n        // a new buffer source must be created for each loop\n        const bufferSource = this.audioCtx.createBufferSource();\n        bufferSource.buffer = this.buffer;\n        bufferSource.connect(gainNode);\n        \n        // if defined, add an event listener to the buffer source before starting\n        if(onstart) {\n            // unfortunately, there is only an 'onended' event for buffer sources, which is exploited here with\n            // a very short dummy buffer source to create an 'onstart' event for the main buffer source\n            const dummyBuffer = this.audioCtx.createBuffer(1, 1, 44100);\n            const dummySource = this.audioCtx.createBufferSource();\n            dummySource.buffer = dummyBuffer;\n            dummySource.onended = onstart;\n            dummySource.start(time - dummyBuffer.duration);\n        }\n\n        bufferSource.start(time, 0, this.loopLengthSeconds);\n\n        // create anchor for fade in\n        gainNode.gain.setValueAtTime(0.001, time);\n\n        // ramp up to default\n        gainNode.gain.exponentialRampToValueAtTime(1, time + this.fadeInTime);\n\n        // create anchor for fade out\n        gainNode.gain.setValueAtTime(1, time + this.loopLengthSeconds - this.fadeOutTime);\n\n        // ramp down to min\n        gainNode.gain.exponentialRampToValueAtTime(0.001, time + this.loopLengthSeconds);\n\n        this.queue.push({\n            bufferSource,\n            gainNode,\n            time\n        });\n\n    }\n\n    updateQueue() {   \n\n        for(let i = this.queue.length - 1; i >= 0; i--) {\n           \n           // remove event from queue if start time is in the past\n            if(this.queue[i].time < this.audioCtx.currentTime) {\n                \n                // grab last event time\n                this.prevEventTime = this.queue[i].time;\n                \n                // move to garbage collection queue\n                this.garbage.push(this.queue.splice(i,1)[0]);\n                \n            }\n\n        };\n\n        for(let i = this.garbage.length - 1; i >= 0; i--) {\n            \n            // disconnect nodes to ensure proper garbage collection\n            if(this.garbage[i].time + this.loopLengthSeconds < this.audioCtx.currentTime) {\n                                \n                // disconnect nodes\n                this.garbage[i].bufferSource.disconnect();\n                this.garbage[i].gainNode.disconnect();\n\n                // grab last event\n                this.garbage.splice(i,1);\n                \n            }\n\n        };\n\n        // schedule next event\n        while(this.queue.length < 1) {\n            const nextEventTime = this.prevEventTime + this.loopLengthSeconds;\n            this.addEventToQueue(nextEventTime);\n        }\n\n    }\n\n    start(quantizeStartTime, onstart) {\n\n        // calculate the next event time\n        this.activeEventTime = this.snapToGrid && quantizeStartTime ? quantizeStartTime : this.audioCtx.currentTime;\n\n        // add the first event to the queue\n        this.addEventToQueue(this.activeEventTime, onstart);\n\n        // listen for future events\n        this.intervalTimer = window.setInterval(() => { this.updateQueue() }, this.refreshRate);\n\n    }\n\n    stop(quantizeStopTime) {\n\n        return new Promise((resolve, reject) => {\n\n            try {\n\n                // stop scheduling new events\n                if(this.intervalTimer) { window.clearInterval(this.intervalTimer); }\n\n                // stop all events in both queues\n                this.queue.map((event) => {\n                    if(quantizeStopTime) {\n                        event.bufferSource.stop(quantizeStopTime);\n                    } else {\n                        event.bufferSource.stop();\n                    }\n                })\n\n                this.garbage.map((event) => {\n                    if(quantizeStopTime) {\n                        event.bufferSource.stop(quantizeStopTime);\n                    } else {\n                        event.bufferSource.stop();\n                    }\n                })\n\n                // create a dummy buffer to trigger the promise and cleanup\n                const dummyBuffer = this.audioCtx.createBuffer(1, 1, 44100);\n                const dummySource = this.audioCtx.createBufferSource();\n                dummySource.buffer = dummyBuffer;\n\n                dummySource.onended = () => {\n\n                    // cleanup queue\n                    this.queue.map((event) => {\n                        event.bufferSource.disconnect();\n                        event.gainNode.disconnect();\n                        event.bufferSource.stop();\n                    });\n\n                    // cleanup garbage\n                    this.garbage.map((event) => {\n                        event.bufferSource.disconnect();\n                        event.gainNode.disconnect();\n                        event.bufferSource.stop();\n                    });\n\n                    // resolve promise\n                    resolve();\n\n                }\n\n                // start buffer at the appropriate time\n                if(quantizeStopTime) {\n                    dummySource.start(quantizeStopTime - dummyBuffer.duration);\n                } else {\n                    dummySource.start();\n                }\n\n            } catch (err) {\n\n                reject(err);\n\n            }\n     \n        });\n\n    }\n\n    schedule(quantizeStartTime) {\n\n        return new Promise((resolve, reject) => {\n\n            try {\n                \n                // create a dummy buffer to trigger the event\n                const dummyBuffer = this.audioCtx.createBuffer(1, 1, 44100);\n                const dummySource = this.audioCtx.createBufferSource();\n                dummySource.buffer = dummyBuffer;\n\n                // add listener\n                dummySource.onended = () => resolve();\n\n                // start buffer\n                dummySource.start(quantizeStartTime - dummyBuffer.duration);\n\n                // add to schedule queue\n                this.scheduledEvents.push(dummySource);\n\n            } catch (err) {\n\n                reject(err);\n\n            }\n\n        });\n\n    }\n\n    cancel() {\n\n        this.scheduledEvents.map((event) => {\n\n            event.onended = null;\n            event.stop();\n\n        });\n\n        this.scheduledEvents = [];\n\n    }\n\n}","// libs\nimport React from 'react';\nimport anime from 'animejs';\n\n// components\nimport { CanvasViz } from './CanvasViz';\nimport { EffectsPanel } from './EffectsPanel';\nimport { FreqBands } from './FreqBands';\nimport { MenuButtonParent } from './MenuButtonParent';\nimport { SongInfoPanel } from './SongInfoPanel';\nimport { ToggleButtonPanel } from './toggle-button/ToggleButtonPanel';\n\n// context\nimport { MusicPlayerContext } from '../contexts/contexts';\nimport { SongContext } from '../contexts/contexts';\nimport { TestingContext } from '../contexts/contexts';\n\n// reducers\nimport { MusicPlayerReducer } from '../reducers/MusicPlayerReducer';\n\n// other\nimport { Analyser } from '../classes/Analyser';\nimport { createAudioPlayer } from '../utils/audioUtils';\nimport { AudioLooper } from '../classes/AudioLooper';\nimport { solveExpEquation } from '../utils/mathUtils';\nimport { Scheduler } from '../classes/Scheduler';\n\n// styles\nimport '../styles/components/MusicPlayer.scss';\n\n// effects chain parameters\nconst effectParams = {\n    lpFilter: {\n        minFreq: 320,\n        maxFreq: 20000,\n        minQ: 0.71,\n        maxQ: 3,\n        expFreqParams: solveExpEquation(1, 320, 100, 20000),\n        expQParams: solveExpEquation(1, 0.71, 100, 3)\n    },\n    hpFilter: {\n        minFreq: 20,\n        maxFreq: 4500,\n        minQ: 0.71,\n        maxQ: 1.5,\n        expFreqParams: solveExpEquation(1, 20, 100, 4500),\n        expQParams: solveExpEquation(1, 0.71, 100, 1.5)\n    },\n    ambience: {\n        minWet: 0,\n        maxWet: 0.55\n    }\n}\n\nconst SAMPLE_RATE = 44100;\n\nexport const MusicPlayer = (props) => {\n\n    const {\n        playAmbientTrack\n    } = React.useContext(TestingContext);\n\n    const {\n        id,\n        timeSignature,\n        bpm,\n        ambientTrack,\n        ambientTrackLength\n    } = React.useContext(SongContext);\n\n    const [premasterAnalyser, setPremasterAnalyser] = React.useState(null);\n\n    const [state, dispatch] = React.useReducer(MusicPlayerReducer, {\n        randomize: false,\n        randomizeEffects: false,\n        mute: false,\n        players: [],\n        buttons: [],\n        analysers: [],\n        groups: [],\n        groupEffects: {\n            highpass: [],\n            lowpass: [],\n            reverbDry: [],\n            reverbWet: []\n        },\n        effectValues: {\n            highpass: 1,\n            lowpass: 100,\n            ambience: 1\n        }\n    });\n\n    const randomizeEventRef = React.useRef();\n    const randomizeEffectsEventRef = React.useRef();\n    const randomizeEffectsAnimRef = React.useRef();\n\n    const ambientPlayerRef = React.useRef();\n    const audioCtx = React.useRef(new (window.AudioContext || window.webkitAudioContext)({\n        sampleRate: SAMPLE_RATE,\n        latencyHint: 'interactive'\n    }));\n    const audioCtxInitTime = React.useRef(audioCtx.current.currentTime);\n    const schedulerRef = React.useRef(new Scheduler(audioCtx.current));\n    const premaster = React.useRef(audioCtx.current.createGain());\n\n    const handleReset = React.useCallback(() => {\n\n        // take the simple route - click the players!\n        const activePlayers = state.players.filter((p) => (p.playerState === 'active' || p.playerState === 'pending-start'));\n        activePlayers.forEach((p) => p.buttonRef.click());\n\n    }, [state.players]);\n\n    const triggerRandomVoice = React.useCallback(() => {\n\n        const viableOne = state.players.filter((p) => !p.playerState.includes('pending'));\n        const randomOne = Math.floor(Math.random() * viableOne.length);\n        state.players[randomOne].buttonRef.click();\n\n        // trigger an additional voice when less than 1/2 are active\n        if (viableOne.length >= state.players.length) {\n            const viableTwo = viableOne.filter((p, i) => i !== randomOne);\n            const randomTwo = Math.floor(Math.random() * viableTwo.length);\n            state.players[randomTwo].buttonRef.click();\n        }\n\n    }, [state.players])\n\n    /* \n        Effects Hooks\n    */\n    React.useEffect(() => {\n\n        const freqParams = effectParams.hpFilter.expFreqParams;\n        const QParams = effectParams.hpFilter.expQParams;\n\n        state.groupEffects.highpass.forEach((effect) => {\n            effect.frequency.value = freqParams.a * Math.pow(freqParams.b, state.effectValues.highpass);\n            effect.Q.value = QParams.a * Math.pow(QParams.b, state.effectValues.highpass);\n        })\n\n    }, [state.effectValues.highpass, state.groupEffects.highpass]);\n\n    React.useEffect(() => {\n\n        const freqParams = effectParams.lpFilter.expFreqParams;\n        const QParams = effectParams.lpFilter.expQParams;\n\n        state.groupEffects.lowpass.forEach((effect) => {\n            effect.frequency.value = freqParams.a * Math.pow(freqParams.b, state.effectValues.lowpass);\n            effect.Q.value = QParams.a * Math.pow(QParams.b, state.effectValues.lowpass);\n        })\n\n    }, [state.effectValues.lowpass, state.groupEffects.lowpass]);\n\n    React.useEffect(() => {\n\n        const wet = effectParams.ambience.minWet +\n            (effectParams.ambience.maxWet - effectParams.ambience.minWet) *\n            (state.effectValues.ambience - 1) / 99;\n\n        state.groupEffects.reverbDry.forEach((effect) => {\n            effect.gain.value = 1 - wet;\n        });\n\n        state.groupEffects.reverbWet.forEach((effect) => {\n            effect.gain.value = wet;\n        });\n\n    }, [state.effectValues.ambience, state.groupEffects.reverbDry, state.groupEffects.reverbWet]);\n\n    /* \n        Ambient Track Hook\n    */\n    React.useEffect(() => {\n\n        const actx = audioCtx.current;\n        actx.resume();\n\n        setPremasterAnalyser(\n            new Analyser(audioCtx.current, premaster.current, {\n                power: 6,\n                minDecibels: -120,\n                maxDecibels: 0,\n                smoothingTimeConstanct: 0.25\n            })\n        );\n\n        premaster.current.connect(audioCtx.current.destination);\n\n        if (playAmbientTrack && ambientTrack) {\n\n            const pathToAudio = require(`../audio/${id}/ambient-track.mp3`);\n\n            createAudioPlayer(audioCtx.current, pathToAudio, {\n                offlineRendering: true,\n                renderLength: ambientTrackLength * timeSignature,\n            }).then((audioPlayer) => {\n\n                ambientPlayerRef.current = new AudioLooper(audioCtx.current, audioPlayer.buffer, {\n                    bpm,\n                    loopLengthBeats: ambientTrackLength * timeSignature,\n                    snapToGrid: false,\n                    fadeInTime: .0000001,\n                    fadeOutTime: .0000001,\n                    audioCtxInitTime: audioCtxInitTime.current,\n                    destination: premaster.current\n                });\n\n                ambientPlayerRef.current.start();\n\n            });\n\n        }\n\n        return () => {\n            playAmbientTrack && ambientPlayerRef.current.stop();\n            actx.close();\n        };\n\n    }, [bpm, id, playAmbientTrack, ambientTrack, ambientTrackLength, timeSignature]);\n\n    /* \n        Randomize Hook\n    */\n    React.useEffect(() => {\n        // init event\n        if (state.randomize && !schedulerRef.current.repeatingQueue.find((e) => e.id === randomizeEventRef.current)) {\n            randomizeEventRef.current = schedulerRef.current.scheduleRepeating(\n                audioCtx.current.currentTime + (60 / bpm),\n                32 * 60 / bpm,\n                triggerRandomVoice\n            )\n            // update event\n        } else if (state.randomize) {\n            schedulerRef.current.updateCallback(randomizeEventRef.current, triggerRandomVoice);\n            // stop event\n        } else if (!state.randomize) {\n            schedulerRef.current.cancel(randomizeEventRef.current);\n        }\n\n    }, [bpm, state.randomize, triggerRandomVoice])\n\n    /* \n        Mute Hook\n    */\n    React.useEffect(() => {\n\n        const startMute = () => {\n            premaster.current.gain.value = 0;\n        }\n\n        const stopMute = () => {\n            premaster.current.gain.value = 1;\n        }\n\n        if (state.mute) {\n            startMute();\n        } else {\n            stopMute();\n        }\n\n    }, [state.mute])\n\n    return (\n\n        <MusicPlayerContext.Provider value={{\n            ...state,\n            sampleRate: SAMPLE_RATE,\n            audioCtx: audioCtx.current,\n            audioCtxInitTime: audioCtxInitTime.current,\n            schedulerRef: schedulerRef.current,\n            premaster: premaster.current,\n            dispatch\n        }}>\n\n            {premasterAnalyser &&\n                <FreqBands\n                    premasterAnalyser={premasterAnalyser}\n                />}\n\n            <MenuButtonParent\n                name='Menu'\n                direction='right'\n                separation='6rem'\n                parentSize='5rem'\n                clickToOpen={true}\n                childButtonProps={[{\n                    autoOpen: true,\n                    id: 'toggles',\n                    iconName: 'icon-music',\n                    content: <ToggleButtonPanel\n                        handleReset={handleReset}\n                        players={state.players}\n                    />\n                }, {\n                    id: 'effects',\n                    iconName: 'icon-equalizer',\n                    content:\n                        <EffectsPanel\n                            impulseResponse={state.impulseResponse}\n                            dispatch={dispatch}\n                        // handleChangeLP={handleChangeLP}\n                        // handleChangeHP={handleChangeHP}\n                        // handleChangeSpaciousness={handleChangeSpaciousness}\n                        // handleEffectsRandomize={handleEffectsRandomize}\n                        />\n                }, {\n                    id: 'song-info',\n                    iconName: 'icon-info',\n                    content: <SongInfoPanel />\n                }]}\n            />\n\n            <CanvasViz />\n\n        </MusicPlayerContext.Provider>\n    );\n\n}\n","// libs\nimport React from 'react';\nimport { CanvasCoordinates } from '../../utils/crco-utils.module';\n\n// components\nimport { Canvas } from '../Canvas';\n\n// context\nimport { LandingPageContext } from '../../contexts/contexts';\n\n// styles\nimport '../../styles/components/LandingPage.scss';\n\nconst speed = .001;\n\nexport function CustomSongIcon(props) {\n\n    const canvasRef = React.useRef(null);\n    const contextRef = React.useRef();\n    const cycleRef = React.useRef(0);\n    const timeRef = React.useRef(0);\n    const animationRef = React.useRef();\n    const coordsRef = React.useRef();\n\n    const { dispatch } = React.useContext(LandingPageContext);\n    const { animate, id } = props;\n\n    React.useEffect(() => {\n\n        const updateCanvas = (time, loop, reset) => {\n\n            const delta = reset ? 0 : time - timeRef.current;\n            cycleRef.current += delta * speed;\n            timeRef.current = time;\n\n            contextRef.current.clearRect(0, 0, coordsRef.current.getWidth(), coordsRef.current.getHeight());\n            contextRef.current.lineWidth = coordsRef.current.getWidth() / 128;\n            contextRef.current.strokeStyle = '#f6f2d5';\n\n            animate(\n                contextRef.current,\n                cycleRef.current,\n                coordsRef.current,\n            );\n\n            if (loop) {\n                animationRef.current = window.requestAnimationFrame((time) => updateCanvas(time, true));\n            }\n\n        }\n\n        const handleSetSelected = () => dispatch({ type: props.name });\n        const handleUnsetSelected = () => dispatch({ type: null });\n\n        const beginAnimation = () => {\n            animationRef.current = window.requestAnimationFrame((time) => updateCanvas(time, true, true));\n        }\n\n        const stopAnimation = () => {\n            window.cancelAnimationFrame(animationRef.current);\n        }\n\n        // add listeners\n        canvasRef.current.addEventListener('mouseover', beginAnimation);\n        canvasRef.current.addEventListener('mouseover', handleSetSelected);\n        canvasRef.current.addEventListener('mouseout', stopAnimation);\n        canvasRef.current.addEventListener('mouseout', handleUnsetSelected);\n\n        // set up canvas/coords and initialize drawing\n        coordsRef.current = new CanvasCoordinates({ canvas: canvasRef.current, padding: .02 });;\n        contextRef.current = canvasRef.current.getContext('2d');\n        updateCanvas(0, false, false);\n\n        // cleanup\n        return () => {\n            stopAnimation();\n            canvasRef.current.removeEventListener('mouseover', beginAnimation);\n            canvasRef.current.removeEventListener('mouseover', handleSetSelected);\n            canvasRef.current.removeEventListener('mouseout', stopAnimation);\n            canvasRef.current.removeEventListener('mouseout', handleUnsetSelected);\n        }\n\n    }, [dispatch, props.name, animate]);\n\n    return React.useMemo(() => {\n        return <Canvas\n            id={id}\n            className=\"custom-song-icon\"\n            onLoad={(canvas) => canvasRef.current = canvas}\n            resize={false}\n        />\n    }, [id]);\n\n}","// libs\nimport React from 'react';\nimport { TAU, rotatePoint } from '../../utils/crco-utils.module';\n\n// components\nimport { CustomSongIcon } from './CustomSongIcon';\n\n// styles\nimport '../../styles/components/LandingPage.scss';\n\nconst animate = (context, cycle, coords) => {\n    for (let i = 0; i < 5; i++) {\n        context.beginPath();\n        context.arc(\n            coords.nx(rotatePoint(.2, 0, 0, 0, cycle + TAU * i / 5).x),\n            coords.ny(rotatePoint(.2, 0, 0, 0, cycle + TAU * i / 5).y),\n            coords.getWidth() / 4,\n            0, TAU\n        );\n        context.stroke();\n    }\n}\n\nexport function MoonriseIcon(props) {\n    return <CustomSongIcon\n        name={props.name}\n        id=\"custom-moonrise-icon\"\n        animate={animate}\n    />\n}","// libs\nimport React from 'react';\nimport { boundedSin } from '../../utils/crco-utils.module';\n\n// components\nimport { CustomSongIcon } from './CustomSongIcon';\n\n// styles\nimport '../../styles/components/LandingPage.scss';\n\nconst bsin = boundedSin(2, 0, 1, -1.5);\n\nconst animate = (context, cycle, coords) => {\n    const panelWidth = coords.getWidth() / 8;\n    const centerPoint = coords.nx(0) - panelWidth / 2;\n    for (let i = 0; i < 5; i++) {\n        const panelHeight = coords.getHeight() * (.6 - Math.abs(2 - i) * .1);\n        context.beginPath();\n        context.strokeRect(\n            centerPoint - (2 - i) * panelWidth * bsin(cycle),\n            coords.ny(-.6 + Math.abs(2 - i) * .1),\n            panelWidth,\n            panelHeight\n        );\n    }\n}\n\nexport function MorningsIcon(props) {\n    return (\n        <CustomSongIcon\n            name={props.name}\n            id=\"custom-mornings-icon\"\n            animate={animate}\n        />\n    );\n}","// libs\nimport React from 'react';\nimport { rotatePoint, TAU } from '../../utils/crco-utils.module';\n\n// components\nimport { CustomSongIcon } from './CustomSongIcon';\n\n// styles\nimport '../../styles/components/LandingPage.scss';\n\nconst animate = (context, cycle, coords) => {\n    const count = 4;\n    for (let i = 0; i < count; i++) {\n        context.beginPath();\n        context.arc(\n            coords.nx(rotatePoint(-.5, 0, 0, 0, cycle + TAU * i / count).x),\n            coords.ny(rotatePoint(0, 0, 0, 0, cycle + TAU * i / count).y),\n            coords.getWidth() / 48,\n            0, TAU\n        );\n        context.stroke();\n    }\n}\n\nexport function ComingSoonIcon(props) {\n    return (\n        <CustomSongIcon\n            name={props.name}\n            id=\"coming-soon-icon\"\n            animate={animate}\n        />\n    );\n}","import * as THREE from 'three';\n\n/**\n * Creates a set of 'stars' using an efficient buffer geometry implementation. \n * The stars move together in orbit around a center point.\n * @module Stars\n */\n\nexport class Stars {\n    /**\n    * @param {object} scene - the THREE.js scene\n    * @param {object} center - Vector3: the center of the star field (which is a sphere)\n    * @param {number} number - the number of stars to display\n    * @param {object} params - optional parameters (see documentation)\n    */\n    constructor(scene, center, number, params) {\n\n        // required parameters\n        this.scene = scene;\n        this.center = center;\n        this.number = number;\n\n        // assign given parameters or defaults to class object\n        Object.assign(this, {\n            color: 0xffffff,\n            colorPalette: null,\n            intensityMap: [[0, 1, 1, 1]],\n            radiusSpread: 0,\n            minOrbitRadius: 500,\n            maxOrbitRadius: 1000,\n            orbitSpeed: 0.1,\n            rotateVector: new THREE.Vector3(1, 1, 1),\n        }, params);\n\n        // add THREE elements\n        this.group = new THREE.Group();\n        this.starField = this.createSpheres(this.number);\n        this.group.position.copy(this.center);\n        this.scene.add(this.group);\n    }\n\n    guassianRand() {\n        var rand = 0;\n        for (var i = 0; i < 6; i += 1) {\n            rand += Math.random();\n        }\n        return rand / 6;\n    }\n\n    normalize(x, y, z, r) {\n        const nX = r * x / Math.sqrt(x * x + y * y + z * z)\n        const nY = r * y / Math.sqrt(x * x + y * y + z * z)\n        const nZ = r * z / Math.sqrt(x * x + y * y + z * z)\n        return {\n            x: nX,\n            y: nY,\n            z: nZ\n        };\n    }\n\n    createSpheres(n) {\n\n        let geometry = new THREE.BufferGeometry();\n        let positions = [];\n        let intensities = [];\n        let color;\n        let colors = [];\n\n        for (let i = 0; i < n; i++) {\n            let randomCoords = this.normalize(\n                -1 + 2 * this.guassianRand(),\n                -1 + 2 * this.guassianRand(),\n                -1 + 2 * this.guassianRand(),\n                this.minOrbitRadius + Math.random() * (this.maxOrbitRadius - this.minOrbitRadius)\n            );\n            positions.push(randomCoords.x);\n            positions.push(randomCoords.y);\n            positions.push(randomCoords.z);\n            intensities.push(1);\n            if (this.colorPalette) {\n                color = new THREE.Color(this.colorPalette(Math.random()));\n            } else {\n                color = new THREE.Color(this.color);\n            }\n            colors.push(color.r, color.g, color.b, 1);\n        }\n\n        geometry.addAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\n        geometry.addAttribute('color', new THREE.Float32BufferAttribute(colors, 4));\n        geometry.addAttribute('intensity', new THREE.Float32BufferAttribute(intensities, 1));\n        geometry.setDrawRange(0, n);\n\n        let material = new THREE.PointsMaterial({\n            vertexColors: THREE.VertexColors,\n            transparent: true,\n            opacity: 1\n        });\n\n        let starField = new THREE.Points(geometry, material);\n\n        starField.geometry.attributes.position.needsUpdate = true;\n\n        this.group.add(starField);\n\n        return starField;\n    }\n\n    update(delta) {\n        this.group.rotateOnAxis(this.rotateVector.normalize(), (delta * this.orbitSpeed * 2 * Math.PI) / 60);\n    }\n\n    lerp(v0, v1, t) {\n        return v0 * (1 - t) + v1 * t;\n    }\n\n}","import * as THREE from 'three';\nimport { Stars } from '../../subjects/Stars';\nimport { SceneManager } from '../../SceneManager';\nimport { ColorPalette } from 'color-curves'\n\nexport class LandingPageScene extends SceneManager {\n\n    initScene() {\n        const scene = new THREE.Scene();\n        scene.background = new THREE.Color('#1f262f');\n        return scene;\n    }\n\n    initCamera() {\n        const fieldOfView = 60;\n        const nearPlane = 1;\n        const farPlane = 1000;\n        const aspect = this.screenDimensions.width / this.screenDimensions.height;\n        let camera;\n        camera = new THREE.PerspectiveCamera(fieldOfView, 1, nearPlane, farPlane);\n        camera.aspect = aspect;\n        camera.position.set(0, 0, 0);\n        camera.lookAt(new THREE.Vector3(0, 1, 0));\n        camera.updateProjectionMatrix();\n        return camera;\n    }\n\n    initSubjects() {\n        const palette = new ColorPalette('{\"type\":\"arc\",\"overflow\":\"clamp\",\"reverse\":false,\"translation\":{\"x\":-0.182,\"y\":-0.138},\"scale\":{\"x\":1,\"y\":1},\"rotation\":0,\"angleStart\":2.105,\"angleEnd\":6.283,\"angleOffset\":0,\"radius\":0.5}', '{\"type\":\"linear\",\"overflow\":\"clamp\",\"reverse\":false,\"translation\":{\"x\":-0.003,\"y\":0.758},\"scale\":{\"x\":1.053,\"y\":-0.13},\"rotation\":0}', '{\"start\":0,\"end\":1}');\n        const subjects = {};\n        subjects.stars = new Stars(\n            this.scene,\n            new THREE.Vector3(0, 0, 0),\n            1000, {\n            colorPalette: (n) => palette.rgbValueAt(n),\n            minOrbitRadius: 200,\n            maxOrbitRadius: 1000\n        }\n        );\n        return subjects;\n    }\n\n    render() {\n        this.subjects.stars.update(this.clock.getDelta());\n        this.renderer.render(this.scene, this.camera);\n    }\n\n}","// libs\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n// components\nimport { MoonriseIcon } from './custom-song-icons/MoonriseIcon';\nimport { MorningsIcon } from './custom-song-icons/MorningsIcon';\nimport { ComingSoonIcon } from './custom-song-icons/ComingSoonIcon';\nimport { Canvas } from '../components/Canvas';\n\n// contexts\nimport { LandingPageContext } from '../contexts/contexts';\n\n// styles\nimport '../styles/components/LandingPage.scss';\n\n// other\nimport { LandingPageScene } from '../viz/scenes/landing/LandingPageScene';\n\nexport const landingPageReducer = (state, action) => {\n    switch (action.type) {\n        case 'moonrise':\n            return {\n                name: 'Moonrise',\n                bpm: '60',\n                key: 'G Minor'\n            };\n        case 'mornings':\n            return {\n                name: 'Mornings',\n                bpm: '92',\n                key: 'Eb Major'\n            };\n        case 'coming-soon':\n            return {\n                name: 'Coming soon...',\n                bpm: null,\n                key: null\n            };\n        default:\n            return {\n                name: null,\n                bpm: null,\n                key: null\n            };\n    }\n}\n\nexport const LandingPage = () => {\n\n    const [selected, dispatch] = React.useReducer(landingPageReducer, { name: null, bpm: null, key: null });\n    const canvasRef = React.useRef(null);\n\n    React.useEffect(() => {\n\n        let scene;\n\n        if (canvasRef.current) {\n            scene = new LandingPageScene(canvasRef.current)\n            scene.init().then(() => scene.animate());\n            window.addEventListener('resize', scene.onWindowResize);\n            window.addEventListener('orientationchange', scene.onWindowResize);\n            window.addEventListener('fullscreenchange', scene.onWindowResize);\n        }\n\n        return () => {\n            scene.stop();\n            scene.disposeAll(scene.scene);\n            window.removeEventListener('resize', scene.onWindowResize);\n            window.removeEventListener('orientationchange', scene.onWindowResize);\n            window.removeEventListener('fullscreenchange', scene.onWindowResize);\n        }\n\n    }, [])\n\n    return (\n        <LandingPageContext.Provider value={{ dispatch }}>\n            <Canvas\n                id='star-canvas'\n                className='fullscreen'\n                onLoad={(canvas) => canvasRef.current = canvas}\n            />\n            <div id='landing-page'>\n                <div id='landing-page-header'>\n                    <div className='flex-row'><h1 id='landing-page-soundscape-title'>Soundscape</h1></div>\n                    <div className='flex-row'><span>This application uses audio.</span></div>\n                    <div className='flex-row'><span>Use speakers or headphones for the best experience.</span></div>\n                    <div className='flex-row'><p>\n                        <span id={selected.name ? 'landing-page-song-title' : 'choose-a-song'}>{selected.name || \"Choose a song to begin.\"}</span>\n                        {selected.bpm && (<><span>&nbsp;|&nbsp;</span> <span id='landing-page-bpm'>{` ${selected.bpm} bpm`}</span></>)}\n                        {selected.key && (<><span>&nbsp;|&nbsp;</span> <span id='landing-page-key'>{selected.key}</span></>)}\n                    </p></div>\n                </div>\n                <div id='song-selection-panel'>\n                    <Link className='song-link' id='song-link-moonrise' to=\"/play/moonrise\">\n                        <MoonriseIcon name='moonrise' />\n                    </Link>\n                    <Link className='song-link' id='song-link-mornings' to=\"/play/mornings\">\n                        <MorningsIcon name='mornings' />\n                    </Link>\n                    <Link className='song-link' id='song-link-coming-soon' to=\"/coming-soon\">\n                        <ComingSoonIcon name='coming-soon' />\n                    </Link>\n                </div>\n            </div>\n        </LandingPageContext.Provider>\n    )\n}","// libs\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\n// context\nimport { ThemeContext } from '../contexts/contexts';\nimport { SongContext } from '../contexts/contexts';\nimport { InfoContext } from '../contexts/contexts';\n\n\n// components\nimport { MusicPlayer } from './MusicPlayer';\nimport { LandingPage } from './LandingPage';\n\nexport const AppRouter = (props) => {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path='/' component={LandingPage} />\n                <Route exact path={'/play/:songId'} render={routeProps =>\n\n                    <ThemeContext.Provider value={{\n                        // provide the song's theme context\n                        id: routeProps.match.params.songId,\n                        spectrumFunction: props.spectrumFunctions[routeProps.match.params.songId],\n                        ...props.appConfig.find((song) => {\n                            return song.id === routeProps.match.params.songId;\n                        })[\"themes\"]\n                    }}>\n\n                        <SongContext.Provider value={{\n                            // provide the song context\n                            id: routeProps.match.params.songId,\n                            ...props.appConfig.find((song) => {\n                                return song.id === routeProps.match.params.songId;\n                            })[\"audio\"]\n                        }}>\n\n                            <InfoContext.Provider value={{\n                                id: routeProps.match.params.songId,\n                                ...props.appConfig.find((song) => {\n                                    return song.id === routeProps.match.params.songId;\n                                })[\"info\"]\n                            }}>\n\n                                <MusicPlayer />\n\n                            </InfoContext.Provider>\n\n                        </SongContext.Provider>\n\n                    </ThemeContext.Provider>\n\n                } />\n                <Redirect to='/' />\n            </Switch>\n        </Router>\n    )\n}","// libs\nimport React from 'react';\nimport * as d3Chromatic from 'd3-scale-chromatic';\nimport * as d3Color from 'd3-color';\nimport { ColorPalette } from 'color-curves'\n\n// components\nimport { AppRouter } from './AppRouter';\n\n// context\nimport { LayoutContext } from '../contexts/contexts';\nimport { TestingContext } from '../contexts/contexts';\n\nconst morningsPalette = new ColorPalette('{\"type\":\"arc\",\"overflow\":\"clamp\",\"reverse\":false,\"translation\":{\"x\":-0.125,\"y\":-0.081},\"scale\":{\"x\":1,\"y\":1},\"rotation\":0,\"angleStart\":0,\"angleEnd\":3.142,\"angleOffset\":5.781,\"radius\":0.5}', '{\"type\":\"arc\",\"overflow\":\"clamp\",\"reverse\":false,\"translation\":{\"x\":0.5,\"y\":0.5},\"scale\":{\"x\":1,\"y\":1},\"rotation\":0,\"angleStart\":0,\"angleEnd\":3.424,\"angleOffset\":0.628,\"radius\":0.25}', '{\"start\":0,\"end\":1}');// load the app config flat file\nconst appConfig = require('../app-config.json');\n\n// global behavior flags for testing\nconst flags = {\n  quantizeSamples: false,\n  showVisuals: true,\n  playAmbientTrack: false\n};\n\n// define spectrum functions here since they don't do well in json\nconst spectrumFunctions = {\n  'moonrise': (n) => new d3Color.color(d3Chromatic.interpolateViridis(n)).brighter(1.5),\n  'mornings': (n) => morningsPalette.rgbValueAt(n)\n};\n\n// inits globals vars, adds listeners, and manages some other settings\nexport const AppWrap = () => {\n\n  // run once before the dom is drawn\n  const viewportWidth = window.innerWidth;\n  const viewportHeight = window.innerHeight;\n  document.documentElement.style.setProperty('--vw', `${viewportWidth / 100}px`);\n  document.documentElement.style.setProperty('--vh', `${viewportHeight / 100}px`);\n\n  // custom vw and vh vars\n  const [vw, setvw] = React.useState(viewportWidth / 100);\n  const [vh, setvh] = React.useState(viewportHeight / 100);\n\n  React.useEffect(() => {\n\n    // gets the inner height/width to act as viewport dimensions (cross-platform benefits)\n    const setViewportVars = () => {\n\n      const viewportWidth = window.innerWidth;\n      const viewportHeight = window.innerHeight;\n\n      // can be accessed in scss as vw(n), vh(n) OR in css as --vw * n, --vh * n\n      document.documentElement.style.setProperty('--vw', `${viewportWidth / 100}px`);\n      document.documentElement.style.setProperty('--vh', `${viewportHeight / 100}px`);\n\n      // can be accessed in the theme context as vw * n or wh * n\n      setvw(viewportWidth / 100);\n      setvh(viewportHeight / 100);\n\n    }\n\n    // add listeners\n    window.addEventListener('resize', setViewportVars);\n    window.addEventListener('orientationchange', setViewportVars);\n    window.addEventListener('fullscreenchange', setViewportVars);\n\n    return () => {\n      window.removeEventListener('resize', setViewportVars);\n      window.removeEventListener('orientationchange', setViewportVars);\n      window.removeEventListener('fullscreenchange', setViewportVars);\n    }\n\n  }, []);\n\n  return (\n    <TestingContext.Provider value={{ flags }}>\n      <LayoutContext.Provider value={{ vw, vh }}>\n        <AppRouter\n          appConfig={appConfig}\n          spectrumFunctions={spectrumFunctions}\n        />\n      </LayoutContext.Provider>\n    </TestingContext.Provider>\n  );\n\n}","import React from 'react';\n\nexport const WebGLUnavailable = () => {\n\n    const unsupportedType = !!window.WebGLRenderingContext ? 'graphics card' : 'browser';\n\n    return (\n        <div>\n            <p>Your {unsupportedType} does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\">WebGL</a>.</p>\n            <p>In order to access this application, you will need to use a supported device.</p>\n        </div>\n    )\n\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\n\nReactDOM.render(<App />, document.getElementById('app'));\n","// libs\nimport React from 'react';\n\n// components\nimport { AppWrap } from './AppWrap';\nimport { WebGLUnavailable } from './WebGLUnavailable';\n\n// other\nimport { WEBGL } from 'three/examples/jsm/WebGL';\n\n// styles\nimport '../styles/app.scss';\n\nexport const App = () => {\n\n  // check if webgl is available, if not, show the error page\n  if (WEBGL.isWebGLAvailable()) {\n\n    // return the application JSX\n    return (\n\n      <div id='app-container' className='fullscreen'>\n\n        <AppWrap />\n\n      </div>\n\n    );\n\n  } else {\n\n    return <WebGLUnavailable />\n\n  }\n\n}"],"sourceRoot":""}